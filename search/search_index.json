{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#trustworthy-and-ethical-assurance-tea","title":"Trustworthy and Ethical Assurance (TEA)","text":"<p>Welcome to the Trustworthy and Ethical Assurance (TEA) documentation site \ud83d\udc4b.</p> <p>This site contains information about the following:</p> <ol> <li>Learning modules designed to help users and members of the community to a) understand trustworthy and ethical assurance as a methodology and b) learn how to get the most from the TEA platform</li> <li>Technical documentation about the TEA platform, including quickstart instructions and self-deployment</li> <li>Resources developed for and by the TEA community, including assurance cases and patterns</li> </ol> <p> Start Reading Go to the Platform </p> <p>Under Construction \ud83d\udea7</p> <p>Please note that this site is currently under construction, and several pages are in development. As such, there may be references to information that does not currently exist.</p> <ul> <li>You can visit our GitHub repository project page to view a roadmap about ongoing work to get a better idea of when features and information will be available: https://github.com/alan-turing-institute/AssurancePlatform/projects/6</li> <li>You can also get involved with any open discussions here: https://github.com/alan-turing-institute/AssurancePlatform/discussions</li> <li>Please read our community guidelines and code of conduct if you plan on contributing to this project: https://github.com/alan-turing-institute/AssurancePlatform/blob/main/CODE_OF_CONDUCT.md</li> </ul>"},{"location":"about/","title":"About the TEA Platform","text":"<p>The Trustworthy and Ethical Assurance (TEA) platform is an open-source and community-oriented tool that has been designed and developed by researchers at the Alan Turing Institute and University of York to support the process of developing and communicating trustworthy and ethical assurance cases.</p> <p>To better understand the purpose and motivation of the TEA platform, consider the following question:</p> <p>Question</p> <p>How could a team of researchers and developers provide assurance to their stakeholders or users that some ethical goal has been achieved over the course of designing, developing, and deploying a data-driven technology?</p> <p>This is not an easy question to answer! As we pick it apart, we realise there are many more questions that need to be addressed:</p> <ul> <li>Which ethical goals are relevant to the technology (e.g. fairness, explainability, safety, sustainability)?</li> <li>How are these goals defined in the context of the project?</li> <li>How can a project team provide justified evidence that these goals have been achieved?</li> <li>Who should be engaged with as part of this process, and how should this engagement be structured?</li> </ul>"},{"location":"about/#what-does-the-tea-platform-do","title":"What does the TEA Platform do?","text":"<p>The TEA platform helps project teams\u2014including researchers, developers, decision-makers, managers, auditors, regulators, and users\u2014answer these questions in a systematic manner. It achieves this through three interlocking features:</p> <ol> <li>An interactive tool for building assurance cases (accessible here)</li> <li>A set of educational resources that help users get the most out of the tool (see learning modules)</li> <li>The community infrastructure that promotes open and collaborative practices (see community resources)</li> </ol>"},{"location":"about/#feature-1-interactive-tool-for-building-and-reviewing-assurance-cases","title":"Feature 1: Interactive Tool for Building and Reviewing Assurance Cases","text":"<p>The main component of the TEA platform is the interactive tool that allows members of a project team to iteratively develop an assurance case using a graphical interface. Figure 1. shows an example assurance case.</p> <p> Figure 1. A simple assurance case showing a top-level goal claim, a set of three property claims, and corresponding evidence.</p> <p>At the top of the assurance case is a clear and accessible claim about the technology or system in question, which serves as the goal of the argument (i.e. the goal claim). Underneath this goal claim is a set of additional claims about specific properties of the project or system (i.e. property claims), which help specify the goal and demonstrate what actions or decisions have been taken to achieve the goal. And, at the base of the assurance case is the evidence that justifies the validity of the above claims.</p> <p>In short, an assurance case presents an argument, in a logical and graphical format, about how an ethical goal has been achieved. The key to an assurance case is the structure of the argument.</p> <p>An Introduction to Trustworthy and Ethical Assurance</p> <p>A more complete introduction to Trustworthy and Ethical Assurance (including the tool and methodology) can be found in our learning modules section.</p>"},{"location":"about/#feature-2-user-training-and-resources","title":"Feature 2: User Training and Resources","text":"<p>Although the logical structure of an assurance case is simple, the process of building and sharing an assurance case can be more involved. As such, a significant element of the TEA platform is the learning resources and technical documentation that has been designed to widen the scope of who can participate in the assurance ecosystem.</p> <p>You can browse our learning modules, technical documentation, or community resources to find out more.</p>"},{"location":"about/#feature-3-community-infrastructure","title":"Feature 3: Community Infrastructure","text":"<p>A key part of the TEA platform is meaningful engagement with the wider community. This is also true for trustworthy and ethical assurance more generally.</p> <p>For instance, a project team may believe that they have carried out the set of actions and decisions that are sufficient to justify a claim made about the fairness of an AI system. However, the complexity of an ethical principles such as fairness means that it is easy to (unintentionally) overlook a core property that disproportionately affects a group of users (e.g. representativeness of data, equitable impact of a system).</p> <p>Furthermore, our understanding of trustworthy and ethical assurance evolves as the capabilities of sociotechnical systems, such as AI systems or digital twins, also evolves. Therefore, it is vital that the process of developing and communicating assurance cases, where possible, is done in an open and collaborative manner.</p> <p>The benefits of this include:</p> <ul> <li>Community support for identifying and defining key ethical principles</li> <li>Sharing case studies and exemplary assurance cases that help promote consensus   and best practices</li> <li>A collaborative approach to evaluating the strength and justifiability of   assurance cases (e.g. identifying gaps or insufficient evidence)</li> <li>Open design and collaboration of new ideas and features to improve the TEA   platform</li> </ul> <p>If you want to learn more about how the TEA platform scaffolds community engagement, please read our community guide. Here, you can also find more information about past or upcoming events for the TEA community.</p>"},{"location":"about/#funding-statements","title":"Funding Statements","text":"<ul> <li>From March 2024 until September 2024, the project was funded by the BRAID (UKRI AHRC) programme as part of a scoping research grant for the Trustworthy and Ethical Assurance of Digital Twins project, which was awarded to Dr Christopher Burr.</li> <li>Between April 2023 and December 2023, this project received funding from the Assuring Autonomy International Programme, a partnership between Lloyd\u2019s Register Foundation and the University of York, which was awarded to Dr Christopher Burr.</li> <li>Between July 2021 and June 2022 this project received funding from the UKRI\u2019s Trustworthy Autonomous Hub, which was awarded to Dr Christopher Burr (Grant number: TAS_PP_00040).</li> <li>Between April 2023 and December 2023 this project received funding from the Assuring Autonomy International Programme, a partnership between Lloyd\u2019s Register Foundation and the University of York, which was awarded to Dr Christopher Burr.</li> </ul>"},{"location":"archive/","title":"Index","text":"<p>Draft</p> <p>This section is being drafted.</p> <p>In this section you will find the main documentation and user guidance for the TEA platform. For those who are completely new to the platform, we recommend you follow these guides in order :</p> <ol> <li>Quickly Getting Started with the TEA Platform (in progress)</li> <li>An Introduction to the TEA Case Builder (in progress)</li> <li>Components of an assurance case</li> <li>Managing TEA Assurance Cases (in progress)</li> <li>Exporting TEA Cases (in progress)</li> <li>Sharing TEA Cases (in progress)</li> </ol> <p>You can also find more advanced documentation (e.g. deployment instructions, API documentation) in our developer-guide section.</p>"},{"location":"archive/argument-based-assurance/","title":"An Introduction to Argument-Based Assurance","text":"<p>The TEA platform is built around a methodology known as argument-based assurance (ABA).</p> <p>The general approach of ABA is to provide a reasoned and justified argument regarding some top-level claim (i.e. the goal). Historically, ABA has been used in safety-critical domains, such as aviation or energy, and so the top-level claims typically refer to goals such as reliability, safety, or security of a system. The main argument sets out the claims made about the system (including aspects of the project governance or design), the evidence supporting those claims, and the rationale that links the evidence to the claims.</p> <p>From safety assurance to ethical assurance</p> <p>The TEA platform instantiates a type of argument-based assurance that focuses on ethical goals and principles (e.g. fairness, explainability), which help establish justified trust in data-driven technologies, such as artificial intelligence or digital twins.</p> <p>ABA follows a process critical reasoning to create a convincing \"story\" or \"case\" that articulates why a system can be trusted to operate within certain contexts. The final artefact is known as an assurance case, and is typically presented in a visually intuitive form that supports accessible communication and assists critical engagement (e.g. identifying gaps in the argument, evaluating the strength of supporting evidence for linked claims). As such, ABA helps teams and stakeholders consider both positive evidence as well as possible counterarguments, gaps, and uncertainties, offering mitigations for those when possible.</p> <p>History of argument-based assurance</p> <p>Add a short history of ABA.</p> <p>One of the key strengths of this approach is its ability to facilitate clear communication among stakeholders, including researchers, developers, regulators, and system users. By making assumptions explicit and providing a structured framework for critical reasoning, ABA facilitates a transparent, understandable and reproducible assurance process. It also offers a flexible and extensible way to integrate various types of evidence (and standards), such as empirical data, expert opinion, and formal methods, into a cohesive argument.</p> <p>However, ABA is not without its challenges<sup>1</sup>. Constructing a rigorous argument requires significant expertise, can be time-consuming, and the quality of the argument is heavily dependent on the strength and sufficiency of the underlying evidence. Furthermore, there are also concerns regarding how to update or modify assurance arguments as systems evolve or when new information becomes available.</p> <p>To address some of these challenges, the TEA platform takes a community-driven approach to increasing capabilities and best practices within the assurance ecosystem.</p> <ol> <li> <p>Habli, I., Alexander, R., &amp; Hawkins, R. D. (2021). Safety Cases: An Impending Crisis? In Safety-Critical Systems Symposium (SSS\u201921). https://core.ac.uk/download/pdf/363148691.pdf \u21a9</p> </li> </ol>"},{"location":"archive/case-builder/","title":"An Introduction to the TEA Case Builder","text":"<p>The Trustworthy and Ethical Assurance Platform is dedicated to simplifying the process of creating, managing, and sharing assurance cases. Our Assurance Case Builder is a core feature of the platform, designed to help you visually and logically structure your assurance cases with ease.</p> <p>By following the steps outlined in this section to add goals, contexts, claims, evidence, and strategies, you can effectively articulate and visualize the ethical assurance of your technology projects.</p> <p>Remember, a well-constructed assurance case not only supports internal review and decision-making but also enhances trust and transparency with external stakeholders. Used correctly, the Case Builder can be a powerful tool that enables you to methodically demonstrate your technology's compliance with ethical standards.</p>","tags":["core elements"]},{"location":"archive/case-builder/#adding-elements","title":"Adding Elements","text":"<p>To begin, ensure you're logged into the TEA platform and have selected the assurance case you wish to work on. If you're creating a new case, start by naming your case and providing a brief description.</p> <ol> <li> <p>Adding the Goal Element. In the Assurance Case Builder interface, start by identifying the top-level goal for your case. Click on the \"Add Goal\" button to create a new goal.</p> </li> <li> <p>Define the Goal. Enter a name and a brief description of your goal. This could be a broad ethical aim like \"Ensure Data Privacy\" or \"Achieve Fairness in AI Decision-Making.\"</p> </li> </ol> <p>There's no need for you to save as saving happens automatically in the TEA platform. You can simply move on with the next element.</p>","tags":["core elements"]},{"location":"archive/case-builder/#incorporating-contexts","title":"Incorporating Contexts","text":"<p>Contexts specify the environment or conditions under which the goal applies.</p> <ol> <li> <p>Select Your Goal. With your goal created, you can add a context. Click on the goal element to bring up the option to add context.</p> </li> <li> <p>Add Context. Click on \"Add Context\" and fill in the details, such as the operational environment or specific user considerations relevant to your goal.</p> </li> </ol> <p>Again, there's no need for you to save as saving happens automatically.</p>","tags":["core elements"]},{"location":"archive/case-builder/#creating-claims","title":"Creating Claims","text":"<p>Claims are specific assertions that support your goal within its context.</p> <ol> <li> <p>Choose a Goal or Strategy. Select either a goal or a strategy (see below) to which you want to attach a claim.</p> </li> <li> <p>Add a Claim. Click on \"Add Claim\" and provide a concise statement that you plan to justify through evidence. For example, \"The system encrypts all user data.\"</p> </li> <li> <p>Detail Your Claim. You may also add a longer description if necessary. Again, your claim will be saved automatically.</p> </li> </ol>","tags":["core elements"]},{"location":"archive/case-builder/#adding-evidence","title":"Adding Evidence","text":"<p>Evidence can be anything that supports your claim: test results, expert analysis, or compliance certificates.</p> <ol> <li> <p>Select a Claim. Navigate to the claim for which you have supporting evidence.</p> </li> <li> <p>Attach Evidence. Click \"Add Evidence\" and describe the evidence that supports your claim.</p> </li> <li> <p>Link to Documentation (Optional). If applicable, you can also provide a URL to where the evidence can be found or reviewed. For transparency and accountability reasons, we encourage you to add a URL, but it's not necessary.</p> </li> </ol> <p>Again, there's no need for you to save as saving happens automatically.</p>","tags":["core elements"]},{"location":"archive/case-builder/#utilizing-strategies-optional","title":"Utilizing Strategies (Optional)","text":"<p>For complex assurance cases, you may need to outline strategies that describe how you plan to achieve your goals through a series of claims.</p> <ol> <li> <p>Select a Goal. Choose the goal for which you want to define a strategy.</p> </li> <li> <p>Define the Strategy. Click on \"Add Strategy\" and enter details about how you intend to structure your argument or the approach to meet the goal.</p> </li> <li> <p>Create Any Claims. Create any claims for how you will know that you have successfully accomplished the strategic steps.</p> </li> <li> <p>Attach Evidence to Strategy Claims: Link existing evidence (or add new evidence) to your strategy's claims to demonstrate how each contributes to achieving the overarching goal.</p> </li> </ol>","tags":["core elements"]},{"location":"archive/case-builder/#updating-elements","title":"Updating Elements","text":"<p>This is a quick guide on how to update elements such as Goals, Contexts, Claims, and Evidence within the Assurance Case Builder.</p> <p>Updating elements in the TEA Assurance Case Builder is designed to be intuitive, ensuring that your assurance case remains a dynamic and accurate reflection of your project's commitment to ethical standards.</p> <p>You should always refine and adjust the details of your assurance case as your project evolves or as new information becomes available.</p>","tags":["core elements"]},{"location":"archive/case-builder/#steps-to-update-elements","title":"Steps to Update Elements","text":"<ol> <li> <p>Select the Element. Navigate to the element you wish to update within your assurance case. Elements can be Goals, Contexts, Claims, or Evidence.</p> </li> <li> <p>Make Your Changes. In the editing mode, you can modify any of the element's details, such as its name, description, or associated links. For evidence elements, this may include updating URLs or descriptions to reflect the most current documentation.</p> </li> </ol> <p>There's no need to save your work as the platform will automatically save any changes made.</p>","tags":["core elements"]},{"location":"archive/case-builder/#tips-for-updating-elements","title":"Tips for Updating Elements","text":"<ul> <li>Regularly review your assurance case elements to ensure they remain accurate and relevant throughout the lifecycle of your project.</li> <li>When updating elements, ensure consistency in terminology and detail level across your assurance case to facilitate clear understanding and communication.</li> <li>Consider keeping a log of significant updates for internal records, especially for elements that impact regulatory compliance or critical ethical considerations. </li> </ul>","tags":["core elements"]},{"location":"archive/case-management/","title":"Managing TEA Assurance Cases","text":"","tags":["core elements"]},{"location":"archive/case-management/#using-templates-and-patterns","title":"Using templates and patterns","text":"<p>Importing templates and patterns can significantly accelerate the development of your assurance cases, providing a solid foundation built on industry best practices. Whether you're new to assurance case development or an experienced practitioner, these resources are designed to enhance the quality and efficacy of your ethical assurance efforts.</p> <p>This guide is designed to streamline your experience in leveraging pre-defined templates and patterns for creating and managing assurance cases. By importing templates and patterns, you can jumpstart the development of your assurance cases, ensuring you adhere to best practices and standards from the outset.</p> <p>Templates and patterns are foundational tools within the TEA platform, providing structured outlines that encapsulate best practices for assurance case development. These resources are invaluable for users seeking to ensure their technology projects meet ethical, legal, and social standards.</p> <p>Templates are pre-designed frameworks for assurance cases that outline the basic structure, including goals, claims, contexts, and evidence placeholders.</p> <p>Only one template is currently built into the platform: the \"Minimal\" template. This template contains a pre-organised view featuring a Goal, its Context, and a Claim. This setup serves as an intuitive starting point, guiding users through the initial phases of assurance case development with a clear, manageable structure.</p> <p>However, if you want to access other templates, you can consult the TEA repository where you will find more worked examples and templates that you can import via the Import File feature .</p>","tags":["core elements"]},{"location":"archive/case-management/#using-the-minimal-template","title":"Using the Minimal template","text":"<ol> <li>Navigate to the Dashboard (make sure you are logged in)</li> <li>If you want to use the built-in template (\"Minimal\"), click the \"Create a new case\" button. In the dialog, fill in a Title and a Description, press \"Continue\". On the next page, select \"Minimal\" and press \"Continue\".</li> <li>Your case should now be set up with the minimal template.</li> </ol>","tags":["core elements"]},{"location":"archive/case-management/#using-a-template-from-the-tea-repository","title":"Using a template from the TEA repository","text":"<ol> <li>Navigate to the  and select a template. Click on the \"Copy URL\" button next to the template you want to use.</li> <li>Navigate to the Dashboard (make sure you are logged in)</li> <li>Press the \"Import File\" button.</li> <li>Press the \"URL upload\" radio button.</li> <li>Paste the URL you copied from the documentation here. (e.g. https://github.com/alan-turing-institute/AssurancePlatform/raw/adding-more-docs/worked-examples/tea-dh/json/5.1.json)</li> <li>Press \"Continue\"</li> <li>Your template should now have loaded in the Case Builder</li> </ol>","tags":["core elements"]},{"location":"archive/components/","title":"Components of an Assurance Case","text":"<p>Summary</p> <p>In this section we will look at the core elements of an assurance case and how they relate to one another.</p> <p>There are many ways to construct an assurance case and several standards exist to help users adopt shared practices and ways of working. For instance, the Goal Structuring Notation (GSN) has thorough and comprehensive documentation for building assurance cases that align with their community standard.</p> <p>Trustworthy and Ethical Assurance is inspired by GSN's form of argument-based assurance, but aims to simplify the process of developing an argument and the evidence that justifies it, in order to make the process more accessible for a wider community of stakeholders and users. The trade-off is that assurance cases developed using our platform are less expressive than others but (hopefully) easier to understand.</p> <p>A Note on Terminology</p> <p>An assurance case presents an argument. Here, the argument is the logical sequence of claims that serve as premises for the over-arching conclusion. The validity of the assurance case depends both on the structure and content of the claims (i.e. the argument), but also on the evidence that is offered to ground the argument.</p> <p>All assurance cases contain the following core elements:</p> <pre><code>flowchart TD\n  G1[Goal Claim];\n  P1[Property Claim];\n  S1[\\Strategy\\]\n  E1[(Evidence)];\n  C1([Context]);</code></pre> <p>Let's look at each of these elements in turn.</p>","tags":["assurance","core elements"]},{"location":"archive/components/#core-elements","title":"Core Elements","text":"","tags":["assurance","core elements"]},{"location":"archive/components/#claims","title":"Claims","text":"<p>There are two types of claims:</p> <ol> <li>Goal Claims</li> <li>Property Claims</li> </ol>","tags":["assurance","core elements"]},{"location":"archive/components/#goal-claims","title":"Goal Claims","text":"<p>A goal claim serves to direct the process of developing an assurance case towards some value or principle that is desirable or significant. For instance, it may be important to communicate how a product is 'Sustainable', how an algorithmic decision-making system is 'Explainable', or how the deployment of some service is 'Fair'. The type of goal chosen will determine and constrain the set of lower-level property claims and evidence that are relevant and necessary for the overall assurance case. As such, a goal claim should be the first element to be established. However, like all elements, it can be iteratively revised and refined as the assurance process develops.</p> <p>Because a goal claim for will be high-level, it will not have the necessary specificity to link directly to evidence. Consider the following example.</p> <pre><code>graph TD\n  G1[\"`**Goal**\n  The outputs of our system are *explainable* to users.`\"];</code></pre> <p>Here, explainable is a broad goal that is insufficiently specified, and many questions could remain:</p> <ul> <li>Who are the outputs explainable to? Experts or lay people?</li> <li>What techniques have been used to allow users to interpret the outputs of the   system?</li> <li>Who is able to access information about how the system was designed if they   are not satisfied with an automated explanation?</li> <li>How have you assessed the validity of the information presented to support   explanations? Is there a level of uncertainty that needs to be communicated?</li> </ul> <p>Resolving questions such as these requires the use of additional elements, including lower-level property claims.</p> <p>Multiple Goals and Modular Arguments</p> <p>In this section, we only discuss arguments with a single goal. However, nested (or, modular) assurance cases can also be developed where multiple goal claims serve as sub-claims into a broader argument that subsumes the lower-level arguments.</p>","tags":["assurance","core elements"]},{"location":"archive/components/#property-claims","title":"Property Claim(s)","text":"<p>Goal claims need to be succinct and accessible to set a clear vision or target for the argument. However, this comes at the cost of specificity. For instance, what does it mean to deploy a service in a fair manner, or to develop an explainable system? Property claims help to answer such questions.</p> <p>In one respect, property claims can be treated as lower-level goal claims<sup>1</sup>. That is, when formulated they represent more specific aspirations that also need to be established and justified. However, an assurance case may have only one goal claim<sup>2</sup>, but will likely have many property claims.</p> <p>Collectively, the property claims serve to establish the central argument for how the goal claim has been established by detailing properties of a project or the system that help justify why the top-level goal has been sufficiently established. That is, they are the additional premises that support the conclusion of the argument (i.e. the top-level goal claim). Consider the following example.</p> <pre><code>graph TD\n  G1[\"`**G1**\n  The outputs of our system are *explainable* to users.`\"] --&gt; P1 &amp; P2 &amp; P3;\n  P1[\"`**P1**\n  The ML model used is *interpretable*.`\".];\n  P2[\"`**P2**\n  Users are trained on how to explain the system's outputs.`\"];\n  P3[\"`**P3**\n  Clear and accessible documentation is available.`\"];</code></pre> <p>Identifying the necessary and sufficient set of property claims needed to support an argument can be challenging<sup>3</sup>. Developing and defining a strategy can be a useful way to add supporting structure to an argument.</p>","tags":["assurance","core elements"]},{"location":"archive/components/#strategy","title":"Strategy","text":"<p>Understanding how a goal claim is jointly supported and specified by the constituent property claims can be challenging without additional structure. This is where strategy elements can be useful.</p> <p>A strategy element in an assurance case makes explicit the reasoning or approach used to decompose a high-level goal claim into more specific property claims. From the perspective of the team building the assurance case, strategy elements outline how the team plan to demonstrate that a certain goal or claim is met by breaking it up into sub-arguments.</p> <p>Let's consider our running example again.</p> <p>Goal Claim</p> <p>Note this time that the goal claim <code>G1</code> has changed subtly to be more encompassing. Originally, the goal claim was focused just on the outputs of the system, but we can assume that by considering the argument more fully and identifying specific strategies, the project team have come to realise that the explainability of a system depends on more than just the individual outputs (e.g. classification decisions).</p> <pre><code>graph TD\n\nG1[\"`**G1**\nOur system is *explainable* to users.`\"];\nG1 --&gt; S1 &amp; S2 &amp; S3;\nS1[/\"`**S1**\nProvide clear rationales for system design and behaviour`\"/];\nS2[/\"`**S2**\nUse interpretable models`\"/];\nS3[/\"`**S3**\nOffer user-friendly documentation`\"/];\nS1 --&gt; P1 &amp; P2;\nS2 --&gt; P3 &amp; P4;\nS3 --&gt; P5 &amp; P6;\nP1[\"`**P1**\nSelected features provide best overall balance between predictive performance and high face validity*`\".];\nP2[\"`**P2**\n...`\"];\nP3[\"`**P3**\nThe ML model is intrinsically interpretable`\".];\nP4[\"`**P4**\n...`\"];\nP5[\"`**P5**\nAccessible guidance and training videos are available`\".];\nP6[\"`**P6**\n...`\"];</code></pre> <p>There are several benefits to making the over-arching argument's strategy explicit:</p> <ul> <li>Guiding the argument: during iterative development, the set of strategy   elements serve as placeholders that the project team can use to break down the   complex task of decomposing goals. And, during communication, they can serve   as a clear roadmap to help other stakeholders understand and follow their   reasoning.</li> <li>Facilitating engagement and evaluation: external reviewers or stakeholders   may wish to engage with or evaluate an assurance case, at different stages of   development (e.g. during project development or compliance/auditing of the   system). Understanding the strategy chosen by the project team is can help   wider stakeholders assess whether the presented evidence is sufficient, if   there are gaps in the argument, and, ultimately, help the project team and   wider community develop more robust standards and best practices.</li> <li>Clarifying case relationships: strategy elements can connect multiple   elements, such as goal claims to more detailed property claims. Leveraging   this hierarchical structure ensures that all claims are supported by   well-thought-out process of reasoning and deliberation, and can also help a   project team identify relevant evidence to ground the overarching argument.</li> </ul> <p>Let's now turn to consider evidence in more detail.</p>","tags":["assurance","core elements"]},{"location":"archive/components/#evidence","title":"Evidence","text":"<p>Evidence is what grounds an assurance case. Whereas goal claims orient and direct an argument, strategies help scaffold the logic of an argument, and property claims help specify and establish an argument, evidence is what provides the basis for trusting the validity of the case as a whole.</p> <p>The types of evidence that need to be communicated will depend on the claims being put forward. For instance, if a claim is made about the attitudes of users towards some system, then findings from a workshop or survey that explored these attitudes may be needed. Alternatively, if the claim is about a model's performance exceeding some threshold, then evidence about the test will be needed (e.g. benchmarking scores and methodology).</p> <p>Let's look at the section of our running example that addresses the following strategy:</p> <pre><code>graph TD\nS1[/\"`**S1**\nProvide clear rationales for system design and behaviour`\"/];</code></pre> <p>We can expand the set of property claims for this strategy and consider what sorts of evidence may be suitable.</p> <pre><code>graph TD\n\nG1[\"`**G1**\nOur system is *explainable* to users.`\"];\nG1 --&gt; S1;\nS1[/\"`**S1**\nProvide clear rationales for system behaviour`\"/];\nS1 --&gt; P1 &amp; P2 &amp; P3;\nP1[\"`**P1**\nSelected features provide best overall balance between predictive performance and high face validity*`\".];\nP2[\"`**P2**\nThe system's user interface provides simple uncertainty estimates to accompany outputs`\"];\nP3[\"`**P3**\n...`\"];\nP1 --&gt; E1 &amp; E2;\nP2 --&gt; E2 &amp; E3;\nE1[(\"`**E1**\nModel card showing predictive performance of multiple versions.`\")];\nE2[(\"`**E3**\nResults of user engagement workshops assessing face validity of features and uncertainty estimates.`\")];\nE3[(\"`**E3**\nDocumentation explaining design and implementation uncertainty estimation feature`\")];\n</code></pre> <p>Similar to a legal case, where evidence needs to be admissible, relevant, and reliable, there are also standards for which types of evidence are appropriate in a given context. In some cases, technical standards may exist that can help bolster the trustworthiness of an argument, by allowing a project team to show how their actions adhere to standards set by an external community. In other cases, consensus may only emerge through the communication and evaluation of the evidence itself.</p> <p>Community Building</p> <p>A key ambition of the TEA Platform is to help scaffold and support a flourishing community of practice that can drive forward the development of standards for evidence. For instance, as the repository of shared assurance cases grows, the community will be able to identify which forms of evidence others are using to justify arguments in different domains or use cases.</p> <p>One final element remains to discuss: context. And, as many philosophers are keen to point out, a lot can depend on the context.</p>","tags":["assurance","core elements"]},{"location":"archive/components/#context","title":"Context","text":"<p>There are various types of context statements that can be added to the core elements of an assurance case. For instance, consider the following two examples:</p> <p>Example 1</p> <pre><code>graph LR\n\nG1[\"`**G1**\nOur system is *explainable* to users.`\"] -.-&gt; C1 &amp; C2;\nC1([\"`**C1**\nThe system will be used by **healthcare professionals**.`\"]);\nC2([\"`**C2**\nThe system will be used in a **hospital** to triage patients.`\"]);</code></pre> <p>Example 2</p> <pre><code>graph LR\n\nG1[\"`**G1**\nOur system is *explainable* to users.`\"] -.-&gt; C1 &amp; C2;\nC1([\"`**C1**\nThe system will be used by **patients**.`\"]);\nC2([\"`**C2**\nThe system will be **accessible remotely** via a smartphone app.`\"]);</code></pre> <p>We leave it as a reflective exercise to the reader to consider how the two different contexts will shape the types of claims, strategies, and evidence that a project team would need to establish in the respective assurance cases.</p>","tags":["assurance","core elements"]},{"location":"archive/components/#links","title":"Links","text":"<p>There are two types of links that are used in Trustworthy and Ethical Assurance.</p>","tags":["assurance","core elements"]},{"location":"archive/components/#support-links","title":"Support Links","text":"<p>The primary link used in Trustworthy and Ethical assurance cases is a support link. These links represent a uni-directional relationship between two elements, such that the parent element is supported by the child element.</p> <p>They are rendered as follows:</p> <pre><code>graph TD\nG1[\"`**G1**`\"] --&gt; P1;\nP1[\"`**P1**`\"];</code></pre> <p>Permitted Support Links</p> <p>The TEA platform restricts a user's ability to add invalid support links between elements. However, for clarity, the following support links are valid:</p> <ul> <li>Goal Claim to Strategy</li> <li>Goal Claim to Property Claim</li> <li>Strategy to Property Claim</li> <li>Property Claim to Property Claim</li> <li>Property Claim to Evidence</li> </ul>","tags":["assurance","core elements"]},{"location":"archive/components/#context-links","title":"Context Links","text":"<p>Context links provide additional information for relevant elements, which has a constraining effect on the scope of the claim being made. For instance, goal claims made about a system may be constrained by a specific use context (e.g. an algorithm may operate fairly in the context of a highly constrained information environment where input data follow a particular structure).</p> <p>They are rendered as follows:</p> <pre><code>graph LR\nG1[\"`**G1**`\"] -.-&gt; C1;\nC1([Context]);</code></pre> <p>Some examples of contextual information that could be added include:</p> <ul> <li>Context of Use (e.g. specific environment, set of users)</li> <li>Description of technology or technique (e.g. class of algorithms)</li> </ul> <p>Permitted Context Links</p> <p>The TEA platform restricts a user's ability to add invalid context links between elements. However, for clarity, the following context links are valid:</p> <ul> <li>Goal Claim to Context</li> <li>Property Claim to Context</li> <li>Strategy to Context</li> </ul> <ol> <li> <p>In the GSN standard, all claims are treated as goals and no distinction is made between goal claims and property claims. Our methodology maintains consistency with this standard, which is why property claims have the same type as goal claims, but adds an additional descriptive layer to better represent the ethical process of deliberation and reflection (see section on Operationalising Principles)  \u21a9</p> </li> <li> <p>See earlier note about 'Multiple Goals and Modular Arguments'.\u00a0\u21a9</p> </li> <li> <p>The TEA platform has a wide-range of tools and resources for supporting this reflective and deliberative process. See here.\u00a0\u21a9</p> </li> </ol>","tags":["assurance","core elements"]},{"location":"archive/exporting/","title":"Exporting TEA Cases","text":"<p>Exporting your TEA cases is a straightforward process designed to facilitate the sharing and archiving of your assurance work.</p> <p>Exporting your assurance cases from the TEA platform allows you to share your work with stakeholders, archive your cases, or simply keep a local copy for your records. The platform supports exporting cases in two different formats.</p> <p>By following the simple steps in this guide, you can communicate your commitment to ethical technology development and assurance to all relevant stakeholders.</p>"},{"location":"archive/exporting/#step-by-step-guide","title":"Step-by-step Guide","text":""},{"location":"archive/exporting/#step-1-select-your-case","title":"Step 1: Select Your Case","text":"<ul> <li>Navigate to the dashboard of the TEA platform and locate the assurance case you wish to export.</li> <li>Open the assurance case to access the detailed view.</li> </ul>"},{"location":"archive/exporting/#step-2-choose-export-option","title":"Step 2: Choose Export Option","text":"<ul> <li>Look for the \u201cExport\u201d button or in the case view. It is located in the menu that appears if you press the three dots that appear next to the title of your case.</li> <li>Click on \u201cExport\u201d to see the available format options.</li> </ul>"},{"location":"archive/exporting/#step-3-select-format","title":"Step 3: Select Format","text":"<ul> <li>The TEA platform offers two formats for export and data interchange: JSON and SVG. Choose the format that best suits your needs.</li> </ul>"},{"location":"archive/exporting/#step-4-download-the-file","title":"Step 4: Download the File","text":"<ul> <li>After selecting the format, initiate the export process. The platform will prepare the file for download.</li> <li>Once the file is ready, you may be prompted to confirm the download or it might start automatically. Ensure you save the file in your desired location.</li> </ul>"},{"location":"archive/exporting/#tips-for-exporting-cases","title":"Tips for Exporting Cases","text":"<ul> <li>Quickly review your assurance case for completeness and accuracy before exporting. Make any necessary updates to ensure the exported document accurately reflects your case.</li> <li>Consider exporting your assurance cases periodically to create backups and document the evolution of your assurance arguments over time.</li> <li>When sharing exported cases with stakeholders, be mindful of sensitive information and ensure your sharing method complies with data protection regulations.</li> </ul>"},{"location":"archive/getting-started/","title":"Quickly Getting Started with the TEA Platform","text":"<p>Getting started with the Trustworthy and Ethical Assurance (TEA) Platform is a straightforward process designed to get you up and running with creating, managing, and sharing assurance cases in no time. Follow these simple steps to begin your journey towards more transparent and ethical technology assurance.</p>","tags":["Introductory Resource"]},{"location":"archive/getting-started/#step-1-sign-up-or-log-in","title":"Step 1: Sign Up or Log In","text":"<p>Visit the TEA Platform's homepage and locate the \"Sign Up\" or \"Log In\" buttons. If you're a new user, you'll need to register for an account using the \"Sign Up\" feature. Existing users can enter their credentials to log in.</p>","tags":["Introductory Resource"]},{"location":"archive/getting-started/#step-2-familiarise-yourself-with-the-dashboard","title":"Step 2: Familiarise Yourself with the Dashboard","text":"<p>Once logged in, you'll be greeted by the dashboard. This is your central hub for accessing all features of the TEA Platform, including creating new assurance cases, viewing existing ones, and accessing educational resources.</p>","tags":["Introductory Resource"]},{"location":"archive/getting-started/#step-3-creating-a-new-assurance-case","title":"Step 3: Creating a New Assurance Case","text":"<p>To create a new assurance case, click on the \"Create a new case\" button from the dashboard. You'll be prompted to enter details such as the case name and description. Fill out the necessary fields and submit to create your case.</p>","tags":["Introductory Resource"]},{"location":"archive/getting-started/#step-4-building-your-assurance-case","title":"Step 4: Building Your Assurance Case","text":"<p>With your assurance case created, it's time to start adding elements like Goals, Contexts, and Evidence. The TEA Platform's intuitive interface allows you to build your assurance case visually.</p>","tags":["Introductory Resource"]},{"location":"archive/getting-started/#step-4-exporting-and-publishing-your-work","title":"Step 4: Exporting and Publishing Your Work","text":"<p>Once you're satisfied with your assurance case, you can export it in various formats for external review or publication. The platform supports exporting to formats like JSON for data exchange or SVG for visual representation.</p>","tags":["Introductory Resource"]},{"location":"archive/sharing/","title":"Sharing TEA Cases","text":""},{"location":"archive/sharing/#file-formats","title":"File formats","text":"<p>The TEA platform enhances collaboration and transparency by enabling users to share assurance cases in versatile formats. Understanding the available file formats for exporting and sharing TEA cases is crucial for effective collaboration.</p> <p>By leveraging the appropriate file format, you can maximize the impact and utility of your assurance cases, fostering better understanding, collaboration, and engagement among all stakeholders involved in the ethical assurance process.</p> <p>The platform supports two primary file formats for export: JSON and SVG. Each format serves distinct purposes, catering to different needs for data exchange, visualization, and re-importation into the TEA platform or other compatible systems.</p>"},{"location":"archive/sharing/#formats","title":"Formats","text":"Format Purpose Advantage Use case JSON The JSON (JavaScript Object Notation) format is designed for data exchange, allowing for the structured representation of the assurance case in a standard, machine-readable format. It is ideal for sharing cases with other systems that accept JSON data or for migrating cases between different deployments of the TEA platform. JSON files are lightweight and easily parsed by many programming languages, making them suitable for automated processing, data analysis, and integration tasks. Exporting to JSON ensures that all elements of the assurance case, including goals, contexts, claims, and evidence, are preserved in detail. Ideal for backing up cases, sharing with technical stakeholders, or integrating assurance case data into other software tools and platforms that support JSON. SVG The SVG (Scalable Vector Graphics) format provides a visual representation of the assurance case, suitable for presentations, reports, and stakeholder reviews. The SVG files include the data of the case built into the metadata, enabling the visualization to be re-imported into the TEA platform. SVG files maintain high-quality visual fidelity at any scale, making them perfect for incorporating into documents or presentations that require graphical representation of the assurance case. The embedded case data ensures that the visual representation can be fully integrated back into the TEA platform for further editing or review. Best suited for sharing the assurance case with non-technical stakeholders, displaying the case structure in documentation, or conducting reviews where a visual overview of the case is beneficial."},{"location":"archive/sharing/#tips-for-sharing-cases","title":"Tips for Sharing Cases","text":"<p>When sharing TEA cases, consider the format that best matches the needs of your audience and the intended use:</p> <p>Technical Integration: Opt for JSON when the case needs to be processed, analyzed, or integrated with other systems. Visual Presentation: Use SVG for stakeholder presentations, documentation, or any scenario where a graphical overview of the case adds value.</p> <p>Additionally, when sharing cases externally, ensure that sensitive information is handled in accordance with your organization's data protection policies and compliance requirements.</p>"},{"location":"archive/sharing/#sharing-tea-cases-via-github","title":"Sharing TEA Cases via GitHub","text":"<p>GitHub, a popular platform for version control and collaboration, is recommended for sharing TEA cases due to its accessibility and ease of use.</p> <p>By sharing TEA cases via GitHub, you not only benefit from an efficient, collaborative platform but also contribute to the growing body of knowledge around ethical assurance in technology, making it more accessible and impactful.</p>"},{"location":"archive/sharing/#benefits-of-using-github","title":"Benefits of Using GitHub","text":"<p>Hosting TEA cases on GitHub is not only easy. You can also leverage the platform's robust features for version control, issue tracking, and collaboration, making it an ideal choice for managing and sharing assurance cases with a broader community.</p> <p>Version Control: GitHub provides comprehensive version control features, ensuring changes to assurance cases are tracked, and previous versions are accessible.</p> <p>Collaboration: Invite collaborators to contribute, review, or provide feedback on assurance cases directly within GitHub, fostering a collaborative environment.</p> <p>Accessibility: Hosting your assurance case on a public GitHub repository makes it easily accessible to anyone interested, facilitating knowledge sharing within the TEA community and beyond.</p> <p>Permanent Links: GitHub offers permanent links to specific versions of files, ensuring that references to your assurance cases remain valid and accessible over time.</p>"},{"location":"archive/sharing/#how-to-share-tea-cases-on-github","title":"How to Share TEA Cases on GitHub","text":"<ol> <li>Export Your Case: Begin by exporting your assurance case from the TEA platform in either JSON or SVG format, depending on your sharing needs. </li> <li>Create a GitHub Repository: If you don't already have one, create a new repository on GitHub for hosting your TEA cases. Ensure the repository is set to public if you intend to share your case with the wider community.</li> <li>Upload the Case File: Upload your exported TEA case file(s) to the GitHub repository. You can organize multiple cases within the same repository using folders.</li> <li>Share the Link: Once uploaded, you can share the link to your repository or specific files within it. For JSON files intended for import into TEA, ensure the URL points directly to the raw version of the file.</li> </ol>"},{"location":"archive/sharing/#best-practices-for-sharing-on-github","title":"Best Practices for Sharing on GitHub","text":"<p>Documentation: Include a README file in your repository with information about the assurance cases, how to use them, and any relevant context or instructions for collaborators. </p> <p>Licensing: Consider adding a license file to your repository to clearly communicate how others can use or contribute to your assurance cases. </p> <p>Engage with the Community: Use issues and pull requests to engage with users who may have questions, suggestions, or contributions to your assurance cases.</p>"},{"location":"archive/what-is-tea/","title":"What is Trustworthy and Ethical Assurance?","text":"<p>Assurance is about building trust.</p> <p>Consider the following scenario. You are in the market for a new car and go to a local dealership. One of the sales advisors convinces you to buy a second hand car that later turns out to have an issue with the engine. Frustrated, you take the car back and the sales advisor apologises. They explain that all their second hand cars undergo a thorough assessment before they are placed on the market but, nevertheless, go on to process a return and get you a different car. You are reassured and happy, but only for a short period of time. Yet again, the car turns out to have a problem with the engine\u2014the same problem as before! The sales advisor tries to convince you that this is just a series of unlucky incidents, but without clear evidence to support their claims, this time around you do not trust them and take your business elsewhere.</p> <p>Assurance involves communicating reasons and evidence that help people understand and evaluate the trustworthiness of a claim (or series of claims) about a system or technology.</p> <p>In the above example, the sales advisor needed to provide assurance that their cars were safe or reliable, but the claims they made about the assessment process were undermined by the contrary evidence (i.e. two unreliable cars).</p> <p>In a different scenario, things may go differently. For instance, you may have a higher level of trust with friends or other professionals (e.g. doctors, teachers) than with car sales persons. And, as such, you may be more likely to accept claims in the absence of evidence or in spite of repeated instances of contrary evidence. However, the relationship between trust and assurance is significant in nearly all contexts, and especially so in some domains (e.g. safety-critical engineering).</p> <p>Therefore, having clear methods, processes, and tools for communicating assurance and building trust is crucial. And, this is increasingly important in the design, development, and deployment of data-driven technologies.</p>","tags":["Introductory Resource"]},{"location":"archive/what-is-tea/#building-trust-and-communicating-trustworthiness-for-data-driven-technologies","title":"Building Trust and Communicating Trustworthiness for Data-Driven Technologies","text":"<p>Trustworthy and Ethical Assurance could apply to many systems, but the TEA platform specifically addresses data-driven technologies, such as artificial intelligence or digital twins.</p> <p>There are many benefits and risks associated with the design, development, and deployment of data-driven technologies. And, therefore, many organisations and companies find themselves in a situation of needing to communicate to customers, users, or stakeholders how they have maximised the benefits and minimised the risks associated with their product, service, or system.</p> <p>For example, an organisation building an autonomous vehicle may need to explain how their system is safe, secure, fair, explainable, among other goals. How they achieve this will depend on myriad contextual factors, including who they are communicating with (e.g. regulators, potential customers).</p> <p>Consider the goal of safety with respect to the following questions:</p> <ul> <li>How was the performance of the autonomous vehicle evaluated, and how will it   be monitored? There are many metrics that can be used to evaluate the   performance of an autonomous vehicle, including metrics that assess the   performance of components of the vehicle such as the object recognition system   (e.g. its accuracy, robustness, interpretability) as well as metrics that   consider broader societal or environmental impact (e.g. sustainability,   usability and accessibility).</li> <li>Who carried out processes such as failure mode and effects analysis or   stakeholder engagement? Diverse and inclusive teams can help reduce the   likelihood of unintended consequences, especially those that may arise due to   the presence of overlooked biases in the system (e.g. how were trade-offs in   the design process handled and who was consulted).</li> <li>Who will use the system? Whether a system is safe depends, in part, on who   the users are (e.g. trained professionals versus members of the public)\u2014a key   challenge in the area of human factors research.</li> </ul> <p>These are just three examples of how claims made about the safety of a system, in response to a small set of possible questions, are highly contextual. If we were to consider different goals (e.g. fairness, explainability) or different areas of application (e.g. healthcare, defence and security), the types of claims that would be needed to provide assurance for the goal in question could be very different.</p> <p>And yet, in spite of the contextual variation, there are similarities that span the assurance of data-driven technologies, both within and between different domains. There are, for instance, a recurring set of goals (or, principles) that people emphasise when asked about the ethical or societal issues related to data-driven technologies (e.g. fairness and bias, transparency and explainability)<sup>1</sup>. And, furthermore, there is a growing set of techniques and practices in place for building trust through open, transparent and accessible forms of communication <sup>2</sup>.</p> <p>Trustworthy and ethical assurance is a framework that is anchored in these similarities and existing techniques, but also recognises the importance of understanding variation and difference. At the centre of this framework is a methodology and tool for building assurance cases. These assurance cases communicate how some ethical goal has been established within the context of the design, development, or deployment of a data-driven technology. The methodology serves as a guide for developing the cases, while the platform helps to build and communicate them with the wider community or stakeholders.</p> <p>The remaining parts of this section provide further context to help situate and motivate trustworthy and ethical assurance. However, if you'd prefer to jump straight in, you can jump to our user guidance section instead.</p> <ol> <li> <p>Floridi, L., &amp; Cowls, J. (2019). A Unified Framework of Five Principles for AI in Society. Harvard Data Science Review, 1(1). https://doi.org/10.1162/99608f92.8cd550d1 \u21a9</p> </li> <li> <p>The Turing Way Community. (2022). The Turing Way: A handbook for reproducible, ethical and collaborative research. Zenodo. doi: 10.5281/zenodo.3233853.\u00a0\u21a9</p> </li> </ol>","tags":["Introductory Resource"]},{"location":"blog/","title":"Community Events","text":"<p>On this page, you will find updates about upcoming and past community events.</p>"},{"location":"blog/2023/11/30/trustworthy-assurance-of-digital-health-and-healthcare-workshop/","title":"Trustworthy Assurance of Digital Health and Healthcare Workshop","text":"<p>The University of York, together with the Alan Turing Institute and the Centre for Data Ethics and Innovation (CDEI) are organising a workshop as part of the Trustworthy and Ethical Assurance for Digital Healthcare project. The purpose of this workshop is to discuss fairness issues across the lifecycle of data-driven systems, particularly the obstacles/challenges to achieving fairness in AI-enabled systems used in healthcare. We are pleased to invite you to this workshop, which will consider how data-driven technologies could advance or hold back health equity, what fairness goals we should expect from AI used in healthcare settings, and where discriminatory bias may arise in the AI lifecycle. Participation at this workshop will include sharing your expertise with other researchers and academics interested in fairness, health equity, and data-driven digital healthcare. No specific preparation is required to attend.</p>"},{"location":"blog/2023/11/30/trustworthy-assurance-of-digital-health-and-healthcare-workshop/#workshop-details","title":"Workshop Details","text":"<p>Format: Hybrid Date: 30<sup>th</sup> November Time: 10:30-14:30 Venue: The Institute for Safe Autonomy, University of York</p>"},{"location":"blog/2023/11/30/trustworthy-assurance-of-digital-health-and-healthcare-workshop/#workshop-objectives","title":"Workshop Objectives","text":"<ol> <li>To understand the current needs and obstacles identified by academic    researchers in respect of achieving health equity from the use of    data-driven technologies in healthcare.</li> <li>To bring together researchers from multiple disciplines to discuss the    question of health equity and AI.</li> </ol>"},{"location":"blog/2023/11/30/trustworthy-assurance-of-digital-health-and-healthcare-workshop/#workshop-agenda","title":"Workshop Agenda","text":"Time Session 10:30-10:35 Hello &amp; Welcome 10:35-11:20 Ethics Assurance, The AI Lifecycle and Fairness 11:20-12:05 A Case Study Deploying a clinical diagnostic support system 12:05-12:35 Lunch 12:35-13:10 Session One: Design 13:10-13:45 Session Two: Development 13:45-13:55 Coffee Break 13:55-14:30 Session Three: Deployment"},{"location":"blog/2023/11/28/health-and-ai/","title":"Health and AI","text":"<p>In November and December 2023, we will hold two workshops which will provide focused, small group training to help health practitioners understand and operationalise the ethical principles which apply to their Digital Healthcare tool. They will then be introduced to the TEA methodology and platform, and be supported in their use of the platform for their Digital Healthcare tool.</p>"},{"location":"blog/2023/11/28/health-and-ai/#dates","title":"Dates","text":"<p>Workshops will be delivered online over two days:</p> <ul> <li>Tuesday 28<sup>th</sup> November 2023, 09:30\u201315:00</li> <li>Wednesday 13<sup>th</sup> December 2023, 11:00\u201314:00</li> </ul>"},{"location":"blog/2023/11/08/practitioners-workshop/","title":"Practitioners Workshop","text":"<p>We\u2019re organising a full-day remote UX workshop on 8<sup>th</sup> November (UK timezone), where up to 15 individuals who are knowledgeable and working within the AI field (research/R&amp;D or product) and interested in assuring that they adopt ethical practices will come together. Together, we\u2019ll explore the ethical landscapes of AI, understanding its intricate challenges, and crafting pathways towards responsible and innovative use.</p>"},{"location":"blog/2023/11/08/practitioners-workshop/#structure","title":"Structure","text":"<p>In part one, we're hoping to have an open discussion on the role that ethical practices play within companies adopting AI, addressing challenges in adherence and internal teams' considerations.</p> <p>In part two, we will introduce the method of assurance based arguments to support organisation of ethical claims and hope to understand if this methodology may be useful to teams when considering ethical practices. Your candid thoughts would be highly valuable as we progress with our research work.</p> <p>An optional third part (on a separate day), a prototype session, aims to test the current prototype to improve usability for future users. This session will focus on an early software prototype that we have developed to assist companies in organising and communicating their ethical practices. The session will take one hour and will be led by a facilitator who will take you through scenarios to test and will end with follow up questions on your thoughts.</p>"},{"location":"blog/2023/11/08/practitioners-workshop/#dates","title":"Dates","text":"<p>The workshop will take place on Wednesday 8<sup>th</sup> November 2023, 10:00\u201315:00.</p> <p>There are follow-up prototyping sessions (1h long) in which participants can optionally participate, on Wednesday 15<sup>th</sup> and Thursday 16<sup>th</sup> of November.</p>"},{"location":"community/","title":"Community of Practice","text":"<p>Welcome to the Community page of the Trustworthy and Ethical Assurance (TEA) Platform documentation. At the heart of the TEA Platform is a commitment to fostering a vibrant and engaged community of practice. We believe that the challenges of ethical assurance in data-driven technologies are best addressed collaboratively, bringing together diverse perspectives and expertise. Building a community around the platform not only enriches the user experience but also strengthens the integrity and impact of the assurance cases developed through it.</p>"},{"location":"community/#building-our-community-infrastructure","title":"Building Our Community Infrastructure","text":"<p>We are currently in the process of building out our community infrastructure for the TEA Platform. This includes developing forums, collaborative tools, and resources to support our members in their assurance case work. Our goal is to create a dynamic and supportive environment that facilitates meaningful interactions and collaborations within the community.</p> <p>Join us in shaping the future of ethical assurance</p> <p>We are excited about the potential of the TEA Platform to bring together a community of practitioners passionate about ethical technology governance. If you are interested in talking further about our community development efforts or wish to contribute, please reach out to the Research Application Manager, Kalle Westerling, at kwesterling@turing.ac.uk. We welcome your insights, expertise, and enthusiasm as we work together to build a community that reflects our shared values and goals.</p> <p>Together, we can build a community that not only advances the field of technology assurance but also ensures that the development and application of data-driven technologies are conducted ethically, transparently, and inclusively.</p>"},{"location":"community/community-support/","title":"Community Support","text":""},{"location":"community/community-support/#using-github-issues-to-share-tea-cases-and-seek-feedback","title":"Using GitHub issues to share TEA cases and seek feedback","text":"<p>GitHub issues are a powerful tool for collaboration and communication within the software development community. Using GitHub issues to share TEA cases and seek feedback is an excellent way to leverage the collective expertise of the community.</p> <p>When sharing TEA cases on GitHub, leveraging issues can significantly enhance the feedback loop, allowing you to refine and improve your assurance cases with contributions from a wide audience.</p> <p>Collaborating via GitHub might enhance the quality of your assurance cases. But that's not all: it also fosters a culture of open sharing and continuous improvement within the ethical assurance domain.</p> <p>This section guides you on how to use GitHub issues effectively to share your TEA cases and seek valuable feedback.</p>"},{"location":"community/community-support/#creating-a-github-issue-for-sharing-a-tea-case","title":"Creating a GitHub Issue for Sharing a TEA Case","text":"<ol> <li>Navigate to Your Repository: Open the GitHub repository where your TEA case is hosted. </li> <li>Open the Issues Tab: Click on the \"Issues\" tab near the top of the repository page.</li> <li>Click the \"New issue\" button to start drafting your issue. Give your issue a clear title that indicates it\u2019s about sharing a TEA case for feedback. In the description, provide context about the assurance case, including its goals, the specific areas where you're seeking feedback, and any particular challenges you're facing.</li> <li>Include a direct link to the assurance case file (preferably the raw file link if it\u2019s in JSON format for easy import) or to the folder containing the case if there are multiple related files.</li> <li>Apply relevant labels to your issue, such as \"feedback-wanted\", \"TEA case\", or \"help wanted\", to make it easily discoverable for contributors interested in those topics.</li> </ol>"},{"location":"community/community-support/#engaging-with-feedback","title":"Engaging with Feedback","text":"<ul> <li>Monitor Your Issue: Stay active and responsive to any comments or feedback provided on your issue. Engaging with contributors not only helps in refining your TEA case but also builds a collaborative community atmosphere.</li> <li>Addressing Feedback: Update your TEA case based on the feedback received, if applicable. You can commit changes to your case file and mention the updates in the issue to keep participants informed.</li> <li>Close the Issue: Once you've gathered sufficient feedback and made necessary adjustments to your TEA case, thank the contributors for their input and close the issue. You can always open new issues as your case evolves or as new feedback needs arise.</li> </ul>"},{"location":"community/community-support/#best-practices-for-using-github-issues","title":"Best Practices for Using GitHub Issues","text":"<ul> <li>When seeking feedback, be as specific as possible about the areas of the TEA case you're looking to improve. This helps contributors provide targeted and useful suggestions.</li> <li>Consider creating issue templates for sharing TEA cases if you plan to do this regularly. Templates can help standardize the information you provide, making it easier for others to understand and contribute.</li> <li>Invite others to contribute not just by commenting but also by suggesting edits through pull requests if they have significant improvements or corrections to offer.</li> </ul>"},{"location":"community/community-support/#tea-platform-repository-discussions-and-issues","title":"TEA Platform Repository Discussions and Issues","text":"<p>The TEA (Trustworthy and Ethical Assurance) platform's repository on GitHub serves as a central hub for community engagement, feature development, and issue tracking.</p> <p>It is our aim to make it a vibrant community space where users, developers, and stakeholders can collaborate to enhance the platform's functionality and usability. We want you all to come together to make the platform better for everyone. By engaging in discussions, reporting issues, requesting features, and contributing to the codebase, you play a vital role in the continuous improvement and success of the TEA platform.</p> <p>Join us in our mission to advance trustworthy and ethical assurance in technology.</p> <p>Below, we discuss how you can actively participate in discussions, report issues, request new features, and contribute to the platform's development.</p>"},{"location":"community/community-support/#engaging-in-discussions","title":"Engaging in Discussions","text":"<p>The repository's Issues section is an excellent place for initiating discussions on a wide range of topics, including feature requests, bug reports, and general queries about the TEA platform. This section is where you can voice your thoughts and contribute to ongoing conversations, whether you've encountered a technical glitch, have an idea for a new feature that could improve the platform, or simply have a question about how something works.</p>"},{"location":"community/community-support/#reporting-bugs","title":"Reporting Bugs","text":"<p>If you encounter a problem or an error while using the TEA platform, we encourage you to report it via the repository's Issues section. When reporting a bug, please provide a detailed description of the issue, steps to reproduce the problem, and any relevant screenshots or error messages. This information is invaluable in diagnosing and resolving issues more efficiently.</p>"},{"location":"community/community-support/#requesting-features","title":"Requesting Features","text":"<p>The TEA platform is continually being developed, and user feedback is a crucial driver of this process. If you have an idea for a new feature or an enhancement to an existing one, please share it as a feature request in the Issues section. Describe your proposed feature, its potential benefits, and how it could be implemented within the platform. Community feedback on these proposals can help prioritize development efforts.</p>"},{"location":"community/community-support/#contributing-to-the-codebase","title":"Contributing to the Codebase","text":"<p>For users with programming experience interested in contributing to the TEA platform, the repository contains detailed instructions on how to contribute to the codebase. Whether it's developing new features, fixing bugs, or improving documentation, your contributions are welcome. Here's how you can get started:</p> <p>Read the Contribution Guidelines: Before making any contributions, please review repository's Issues. These guidelines cover the process for submitting pull requests, coding standards, and other important practices.</p> <p>Set Up Your Development Environment: The documentation includes instructions for setting up your backend and your frontend, allowing you to work on the codebase, test changes, and ensure your contributions align with the platform's overall architecture and design principles.</p> <p>Submit a Pull Request: Once you've made your changes, submit a pull request through GitHub. Your pull request will be reviewed by the platform's maintainers, and feedback or requests for revisions will be communicated through the GitHub interface.</p>"},{"location":"community/github-access/","title":"Why We Ask for Access to Your GitHub","text":"<p>We want to ensure transparency in how our platform works. So, why do we ask you to log in via GitHub and grant us certain permissions? Let's break it down:</p> <ol> <li> <p>We value your hard work and creativity. By accessing your GitHub email    and username, we can associate every assurance case you create on our    platform with you. This ensures that you get the credit for your work and    can easily manage and revisit your projects anytime.</p> </li> <li> <p>We want to present users with the convenience of having their assurance    cases sync automatically with their GitHub repositories. By accessing    selected repositories, we can save your creations right to your GitHub.    This means less manual work for you and an integrated backup of your    projects.</p> </li> <li> <p>We use GitHub authentication because it's a secure way to handle user    logins. Instead of building a separate login system, which can be prone    to security vulnerabilities, using GitHub means we can rely on their    trusted security measures.</p> </li> <li> <p>We only ask for what we need. Access to your email and username is to    ensure your projects are correctly associated with you. And repository    access is solely for the TEA platform's synchronisation feature. We won't    peek into unrelated content or make unwanted changes.</p> </li> </ol> <p>Remember, our core mission is to help you build ethical and trustworthy assurance cases. Your trust is paramount to us, and we're committed to ensuring the safety and integrity of your data.</p>"},{"location":"community/case-studies/","title":"Case Studies","text":"<p>Welcome to the Case Studies section of the TEA Platform documentation. Here, you will find a curated collection of detailed accounts illustrating how various research and software development teams across industries have successfully used the TEA Platform to implement ethics into their data science and AI projects. These stories provide insights into the practical application of the platform in diverse scenarios, showcasing its flexibility and the wide range of problems it can solve.</p> <p>Each case study is designed to give you a comprehensive view of the challenges faced by teams, the specific features of the TEA Platform they used, the solutions they implemented, and the outcomes they achieved. Whether you are a software engineer, a project manager, or a compliance officer, these case studies will provide valuable lessons and inspiration for leveraging the TEA Platform in your own work.</p> <p>Want to explore what the TEA Platform can do for your project?</p> <ul> <li>Contact Us: If you have questions or need advice on how to apply the TEA Platform to your project, our team is here to help.</li> <li>Sign Up: Get started with the TEA Platform today and transform the way you approach AI assurance.</li> <li>Share Your Experience: If you have a story to tell about how you've used the TEA Platform, we would love to hear from you! Your insights could help others succeed.</li> </ul>"},{"location":"community/case-studies/cemrg-app-transcript/","title":"Transcript from video","text":"<p>Hello and welcome to our presentation showcasing the work of the Cardiac Electromechanics research Group CEMRG at Imperial College London as a case study for the TEA platform.</p> <p>Today we are excited to delve into one of our flagship projects, the CemrgApp, which is revolutionising the way we analyse cardiovascular data.</p> <p>Jose and I are members of CEMRG at Imperial College.</p> <p>Our research group applies statistical, machine learning and simulation approaches to study the physiology, pathophysiology, diagnosis, and treatment of the heart.</p> <p>We are an inherently interdisciplinary research group, bringing together mathematicians, engineers, statisticians, experimental researchers and clinicians.</p> <p>The combination of technical expertise and clinical insight makes CEMRG uniquely positioned to drive translational research and make a real impact in the field of cardiovascular medicine.</p> <p>Now we turn our attention to the innovative tool that is at the forefront of our efforts, the scar quantification tool or SQT.</p> <p>Within the CemrgApp platform, expect to learn the importance of scar identification and how it is performed, the role of the SQT in analysing scar tissue in the heart and how it works.</p> <p>The fairness assurance analysis made for the SQT and how fairness claims were chosen and backed.</p> <p>Scar tissue in the heart can lead to serious complications such as such as abnormal heart rhythms, making accurate identification paramount for effective diagnosis and treatment.</p> <p>Identifying scar tissue accurately can help clinicians make informed decisions and improve patient outcomes.</p> <p>The only non invasive tool to assess scar tissue is through an advanced 3D imaging technology known as Late Gadolinium Enhanced Cardiac Magnetic Resonance or LGE-CMR to identify scar tissue in the heart in which scar tissue appears brighter than normal healthy tissue.</p> <p>Manually assessing these scans can vary depending on the operator.</p> <p>The main focus of this case study is the Scar Quantification tool, or SQT, within the similar job platform.</p> <p>This tool is a crucial component of our efforts to analyse the scar tissue in the heart.</p> <p>It enables us to visualise and validate the steps required for accurate quantification of scar tissue.</p> <p>Now let's delve into how the SQT works.</p> <p>Taking an LGE-CMR scan as input, the tool goes through three main phases.</p> <p>One, segmentation to isolate the left atrium within the heart, 2 generating a 3D representation of its geometry, and then three, creating a scar map based on the signal intensity from the LGE scan.</p> <p>The user design presents several push buttons, sequentially numbered to present steps in the workflow, which are then visualised within the same user interface.</p> <p>In the video, we can see the later stages of the process where a 3D model is created with different colors to indicate the amount of scar tissue per region.</p> <p>Fairness assurance is crucial for ensuring that the SQT operates ethically and accurately.</p> <p>In this case study, we have considered factors such as bias, mitigation, diversity, and inclusivity.</p> <p>CemrgApp in general is tailored to patient specific workflows where the physiological data corresponds to an individual.</p> <p>While this brings many opportunities for personalised healthcare, it also carries risks, most notably the possible risk of unequal performance for individuals or subgroups of the population.</p> <p>Therefore, it is worth considering how such risk can be identified, evaluated and mitigated.</p> <p>Alongside the Turing team, we approach the development of an insurance case for the SQT using the following general approach.</p> <p>First we explored a general understanding of a concept of fairness.</p> <p>Then we consider different examples of practical fairness issues that are present and use court attributes of fairness as strategies for identifying exemplary claims and evidence for a draft assurance case.</p> <p>This became an introspection exercise of our software which provided us with a snapshot of our project with regards to fairness, its strengths, shortcomings and possibilities for future development.</p> <p>We settled on the following core attributes and the impact in the project bias mitigation across the project life cycle, diversity and inclusivity for project governance, non discrimination in model outcomes and equitable impact of the system.</p> <p>Our bias mitigation claim is that the SQT reduces undesirable operator variability to limit the impact of cognitive biases when using the image processing pipeline and chosen thresholds.</p> <p>Standardising analysis methods and providing specific threshold backed by the relevant literature are essential steps in ensuring that clinical decisions are driven by objective data rather than individual interpretations.</p> <p>It's essential for the SQT to engage patients and healthcare professionals for more backgrounds.</p> <p>The tool promotes special engagement and interactive decision making through accessible visualisations, making healthcare more inclusive for everyone.</p> <p>Our claim about this is that the tool supports special engagement and interactive decision making through accessible and informative visualisations and that the user interface and dashboard are intuitive and follow the best practices for presentation of information.</p> <p>Regards with adequatable impact, the tool is open source and easily accessible to allow clinicians to run software and the tool is efficient in terms of computational resources allowing for widespread use.</p> <p>Ensuring equitable impact is another key goal of the SQT.</p> <p>By being open source and efficient in terms of resources, the tool can reach more healthcare providers and ultimately benefit more patients.</p> <p>Non discrimination is paramount in the development of the SQT.</p> <p>With deep learning techniques and careful validation, we are working to minimise biases and ensure fairness in the analysis process.</p> <p>For this, our claim claim is that the tool does not discriminate across different patient groups and ensures quality and consistency of the roles across users with different level of training.</p> <p>Finally, let's address the challenges and limitations we face in ensuring fairness assurance for the SQT.</p> <p>While we've made significant progress, there are still hurdles to overcome such as user engagement and validation across different demographics. But rest assured, we're committed to continuous improvement and ensuring that the SQT operates ethnically and fairly for all patients.</p> <p>As we conclude today's presentation, it is crucial to recognise that advancement in tools like the Scar Quantification Tool are pivotal for improving patient outcomes and ensuring fairness and equity in healthcare.</p> <p>Indeed, by prioritising accuracy, inclusivity and fairness in our analysis processes, we are not only advancing cardiovascular medicine, but also fostering a more equitable future in healthcare.</p> <p>Thank you for listening.</p>"},{"location":"community/case-studies/cemrg-app/","title":"Case Study: Advancing Cardiovascular Medicine with CemrgApp","text":""},{"location":"community/case-studies/cemrg-app/#introduction-to-cemrgapp","title":"Introduction to CemrgApp","text":"<p>The CemrgApp, developed by the Cardiac Electromechanics Research Group (CEMRG) at Imperial College London, is a transformative tool designed to enhance the analysis of cardiovascular data through advanced imaging and computational techniques. This case study focuses on how CemrgApp uses the Trustworthy and Ethical Assurance (TEA) Platform to enhance its Scar Quantification Tool (SQT), specifically through the integration of fairness assurance analyses.</p> <p>Warning</p> <p>This case study is a work-in-progress and represents a snapshot of ongoing developments. The set of claims and analyses should not be considered a complete assurance case.</p>"},{"location":"community/case-studies/cemrg-app/#overview-of-the-scar-quantification-tool","title":"Overview of the Scar Quantification Tool","text":"<p>The SQT employs Late Gadolinium Enhanced Cardiac Magnetic Resonance (LGE-CMR) to non-invasively identify scar tissue in the heart\u2019s left atrium. This tool is essential for clinicians to detect potential cardiac issues and strategise effective treatments. The SQT follows a sophisticated process:</p> <ol> <li>Segmentation: Delineates the left atrium from the rest of the heart.</li> <li>3D Modeling: Generates a three-dimensional representation of the atrium.</li> <li>Scar Mapping: Applies color-coded mapping to visualise scar tissue based on signal intensity.</li> </ol> <p>These stages are managed through an intuitive interface designed to streamline the clinical workflow.</p>"},{"location":"community/case-studies/cemrg-app/#applying-tea-platform-for-fairness-assurance","title":"Applying TEA Platform for Fairness Assurance","text":"<p>A crucial aspect of this case study is the fairness assurance analysis conducted for the SQT. We structured an assurance case focusing on mitigating bias, promoting diversity and inclusivity, and ensuring equitable impact and non-discrimination in model outcomes. The process included:</p> <ul> <li>Identifying Fairness Attributes: Establishing core attributes of fairness including bias mitigation, inclusivity, equitable impact, and non-discrimination that align with the TEA Platform\u2019s methodology.</li> <li>Developing Claims: Each attribute of fairness was addressed through specific, actionable claims backed by empirical evidence and theoretical research.</li> <li>Operationalisation: Implementing these claims through software features and clinical practices, such as standardised analysis protocols to reduce operator variability and bias in diagnostic outcomes.</li> </ul>"},{"location":"community/case-studies/cemrg-app/#key-fairness-claims-and-their-justification","title":"Key Fairness Claims and Their Justification","text":"<ul> <li>Bias Mitigation: The SQT standardises scar tissue analysis, which limits the variability that can arise from manual interpretations influenced by cognitive biases.</li> <li>Inclusivity: The tool\u2019s interface is designed to facilitate comprehensive patient and clinician engagement, supporting informed decision-making through clear, interactive visualisations.</li> <li>Equitable Impact: Open-source access and minimal resource requirements make the SQT broadly available, ensuring diverse clinical settings can benefit from advanced diagnostic tools.</li> <li>Non-Discrimination: Advanced machine learning models are employed and regularly validated to minimise biases and maintain consistent performance across diverse patient groups.</li> </ul>"},{"location":"community/case-studies/cemrg-app/#challenges-in-assurance","title":"Challenges in Assurance","text":"<p>While the TEA Platform provided a robust framework for developing the fairness assurance case, challenges such as demographic validation, user engagement, and iterative validation of the tool's fairness have been acknowledged. These issues underscore the necessity for continuous improvement and adaptation in response to evolving clinical needs and technological advancements.</p>"},{"location":"community/case-studies/cemrg-app/#conclusion","title":"Conclusion","text":"<p>The CemrgApp case study exemplifies the effective application of the TEA Platform\u2019s fairness assurance methodology in a high-stakes clinical environment. By prioritising ethical standards and actionable fairness claims, the project not only improves cardiovascular healthcare outcomes but also advances the field towards more equitable and transparent medical technology practices.</p> <p>Ongoing Developments and Future Directions</p> <p>CEMRG continues to refine the SQT\u2019s functionalities, with the TEA Platform playing a crucial role in ensuring these enhancements adhere to the highest standards of fairness and ethical responsibility. Future updates will focus on expanding validation studies to encompass broader demographics, enhancing user training, and integrating user feedback more seamlessly into development cycles.</p>"},{"location":"developer-guide/about/","title":"About the Platform","text":"<p>Our technology stack ensures that the TEA platform is not only powerful and reliable but also accessible to users with different levels of technical expertise.</p> <p>At its core, the platform features a web application built with the React framework, known for its modular and interactive user interfaces. This is  complemented by the Material UI (MUI) component library, which enables straightforward and consistent adoption of accessible and intuitive design elements. The web application also uses the open-source package, Mermaid.js, to transform complex assurance cases into understandable flowcharts, enhancing user experience.</p> <p>On the backend, the TEA platform is powered by Django, a high-level Python web framework that offers robust backend capabilities, including a straightforward API for data management. Data can be stored in SQLite or PostgreSQL databases, providing options for lightweight to more scalable storage solutions.</p> <p>The platform also supports easy installation and deployment through Docker, making it straightforward to set up in various environments, including Azure. Please visit our documentation site for further details on any of the above.</p>"},{"location":"developer-guide/api/","title":"Api","text":""},{"location":"developer-guide/development-environment/","title":"Set Up Your Development Environment","text":"<p>Setting up your development environment for the Trustworthy and Ethical Assurance (TEA) Platform involves configuring both the backend and frontend components. This guide will walk you through the necessary steps to get your local development environment up and running. It's important to set up the backend before proceeding with the frontend to ensure that the frontend can communicate with the backend services.</p> <p>Note</p> <p>A quicker way to get the TEA Platform running on your local machine is to use Docker. If you're familiar with Docker and docker-compose, you can follow the Docker Quick Start guide to set up the platform with minimal effort.</p>"},{"location":"developer-guide/development-environment/#prerequisites","title":"Prerequisites","text":"<p>Before starting the setup process, ensure you have the following prerequisites installed on your system:</p>"},{"location":"developer-guide/development-environment/#backend-prerequisites","title":"Backend Prerequisites","text":"<p>Before you begin setting up the backend, it's essential to have a proper Python environment management system in place. For this setup, we recommend using Anaconda or Miniconda, which are powerful platforms for managing Python environments and packages. Anaconda is a full-featured distribution that includes a wide range of scientific libraries and tools, making it ideal for data science and machine learning projects. Miniconda is a minimal installer for Anaconda, offering the same environment and package management capabilities but allowing you to install only the packages you need. Both options provide a convenient way to create isolated environments for different projects, ensuring dependencies are kept separate and do not conflict.</p> <p>If you don't already have Anaconda or Miniconda installed, please visit their respective websites for installation instructions tailored to your operating system. This will streamline the process of creating a virtual environment and managing the necessary Python packages for the TEA Platform backend.</p>"},{"location":"developer-guide/development-environment/#frontend-prerequisites","title":"Frontend Prerequisites","text":"<p>Node.js and npm: Ensure you have Node.js and npm installed on your system. Node.js is a runtime environment that allows you to run JavaScript on the server side. npm, included with Node.js, is the world's largest software registry that facilitates package management for JavaScript.</p>"},{"location":"developer-guide/development-environment/#backend-installation","title":"Backend Installation","text":"<p>The backend of the TEA Platform is built with the Django framework and provides the API endpoints necessary for the frontend application to function.</p> <p>For detailed instructions on setting up the backend, including configuring the database and running the Django development server, refer to the Backend Installation page.</p> <p>After setting up the backend, you can proceed with the frontend setup.</p>"},{"location":"developer-guide/development-environment/#frontend-installation","title":"Frontend Installation","text":"<p>The frontend application is developed using the React framework, enabling dynamic user interactions and a responsive design.</p> <p>The frontend setup involves installing npm dependencies and running the development server. For step-by-step guidance, visit the Frontend Installation page.</p>"},{"location":"developer-guide/docker-quickstart/","title":"Quick Start with Docker","text":"<p>Embark on the journey to set up a local instance of the Trustworthy and Ethical Assurance (TEA) Platform using Docker, the simplest method to get everything running with minimal setup. This guide is designed for individuals who have a basic understanding of Docker and docker-compose. Follow these steps to quickly have the platform operational on your local environment.</p> <p>Live Demo Version</p> <p>For those looking to explore without installing, a live demo version of the assurance platform is available at https://assuranceplatform.azurewebsites.net/. Please be aware that data in the demo environment is periodically cleared.</p> <p>This Docker-based installation offers a straightforward and efficient way to get the TEA Platform running on your local machine, providing a sandbox for development, testing, or demonstration purposes. Happy exploring!</p>"},{"location":"developer-guide/docker-quickstart/#prerequisites","title":"Prerequisites","text":"<p>Before beginning, ensure you have Docker and docker-compose installed on your system. These tools are essential for creating, deploying, and managing containers. For installation instructions, visit the official Docker documentation.</p>"},{"location":"developer-guide/docker-quickstart/#step-by-step-guide","title":"Step-by-step Guide","text":""},{"location":"developer-guide/docker-quickstart/#clone-the-repository","title":"Clone the Repository","text":"<p>Start by cloning the Assurance Platform repository from GitHub to your local machine. Open your terminal and run the following command:</p> <pre><code>git clone https://github.com/alan-turing-institute/AssurancePlatform.git\n</code></pre> <p>This command downloads the project files to your local system.</p>"},{"location":"developer-guide/docker-quickstart/#navigate-to-the-project-directory","title":"Navigate to the Project Directory","text":"<p>After cloning, change your current directory to the AssurancePlatform folder:</p> <pre><code>cd AssurancePlatform/\n</code></pre>"},{"location":"developer-guide/docker-quickstart/#deploy-with-docker-compose","title":"Deploy with Docker Compose","text":"<p>Use docker-compose to pull the necessary images and start the containers. Execute:</p> <pre><code>docker compose pull &amp;&amp; docker compose up\n</code></pre> <p>This command fetches the latest Docker images for the TEA Platform and runs them. The process may take a few minutes the first time as it downloads the images and initializes the containers.</p>"},{"location":"developer-guide/docker-quickstart/#access-the-platform","title":"Access the Platform","text":"<p>Once the containers are up and running, the TEA Platform is accessible via your web browser. Simply go to: http://localhost:3000</p> <p>You should now see the TEA Platform's homepage, ready for exploration and use.</p>"},{"location":"developer-guide/docker-quickstart/#shutting-down","title":"Shutting Down","text":"<p>When you're done using the platform and wish to stop the Docker containers, open a new terminal window. Ensure you're in the AssurancePlatform directory, then execute:</p> <pre><code>docker compose down\n</code></pre> <p>This command stops and removes the containers set up by docker-compose, effectively shutting down the platform until you choose to run it again.</p>"},{"location":"developer-guide/github/","title":"Creating a Legacy (OAuth) App on GitHub","text":"<ol> <li> <p>Login to GitHub:    Navigate to GitHub and log in to your account.</p> </li> <li> <p>Access the Developer Settings:</p> </li> <li>Click on your profile picture (top right corner).</li> <li>From the dropdown menu, choose \"Settings\".</li> <li> <p>In the left sidebar, scroll down and select \"Developer settings\".</p> </li> <li> <p>Navigate to OAuth Apps:</p> </li> <li>In the left sidebar of the Developer settings, click on \"OAuth Apps\".</li> <li> <p>This will show you a list of existing OAuth apps, if any. To create a new one, click on the \"New OAuth App\" button.</p> </li> <li> <p>Fill Out the Application Details:</p> </li> <li>Application name: Enter \"Assurance Platform\".</li> <li>Homepage URL: Enter <code>https://assuranceplatform.azurewebsites.net</code>.</li> <li>Application description: This is optional, but you can provide a short description of your application here.</li> <li> <p>Authorization callback URL: Enter <code>http://assuranceplatform.azurewebsites.net/login</code>.</p> </li> <li> <p>Register the Application:</p> </li> <li> <p>After filling out the necessary details, click on the \"Register application\" button at the bottom.</p> </li> <li> <p>Note the Client ID and Client Secret:</p> </li> <li>Once your application is registered, you'll be redirected to a page that displays your application's details.</li> <li>Here, you'll find two important pieces of information: the <code>Client ID</code> and the <code>Client Secret</code>. Both are essential for integrating your application with GitHub OAuth.</li> <li>Important: The <code>Client Secret</code> is only displayed once. Make sure to copy and save it securely. If you lose it, you'll need to reset it, which could disrupt any services using the current secret.</li> </ol>"},{"location":"developer-guide/github/#setting-up-github_client_id-and-github_client_secret-in-eap_backendsettingspy","title":"Setting up GITHUB_CLIENT_ID and GITHUB_CLIENT_SECRET in eap_backend/settings.py","text":"<ol> <li>Navigate to Your Project:</li> <li> <p>Navigate to the directory where your <code>eap_backend/settings.py</code> file is located.</p> </li> <li> <p>Edit the settings.py File:</p> </li> <li> <p>Open the <code>settings.py</code> file in a text editor or Integrated Development Environment (IDE) of your choice.</p> </li> <li> <p>Add/Update the Client ID and Client Secret:</p> </li> <li> <p>Find the section where environment variables or settings related to third-party integrations are defined. If the variables <code>GITHUB_CLIENT_ID</code> and <code>GITHUB_CLIENT_SECRET</code> already exist, update their values. If they don't, add them:      <pre><code>GITHUB_CLIENT_ID = 'your_client_id_here'\nGITHUB_CLIENT_SECRET = 'your_client_secret_here'\n</code></pre></p> </li> <li> <p>Replace <code>your_client_id_here</code> with the <code>Client ID</code> and <code>your_client_secret_here</code> with the <code>Client Secret</code> you obtained from GitHub.</p> </li> <li> <p>Save the Changes:</p> </li> <li> <p>After adding or updating the values, save the file.</p> </li> <li> <p>Restart Your Application:</p> </li> <li>If your application or server is running, you'll likely need to restart it to ensure the changes take effect.</li> </ol> <p>Note: Storing sensitive information like the <code>Client Secret</code> directly in the code is not recommended for production applications. It's better to use environment variables or secure secret management tools. The above instructions are for simplicity and clarity. For production, consider using secure methods to store and access your secrets.</p> <p>e.g.,  <code>settings.py</code> should look like this:</p> <pre><code>GITHUB_CLIENT_ID = \"xxxxx\"\nGITHUB_CLIENT_SECRET = os.environ.get(\"GITHUB_CLIENT_SECRET\")\n</code></pre> <p>and in your environment variables, you should have <code>GITHUB_CLIENT_SECRET</code> set to the value you got from GitHub.</p>"},{"location":"developer-guide/backend/","title":"Backend Documentation for the TEA Platform","text":"<p>Welcome to the backend documentation of the Trustworthy and Ethical Assurance (TEA) Platform. This segment is dedicated to providing a deep dive into the backend architecture, built on the robust Django framework. The backend serves as the backbone of the TEA Platform, handling data management, API interactions, and the integration with SQL-based databases to ensure secure and efficient processing of assurance cases.</p>"},{"location":"developer-guide/backend/#overview","title":"Overview","text":"<p>The TEA Platform's backend is designed to offer a scalable and secure API, facilitating seamless interactions between the frontend application and the underlying database. It supports the creation, retrieval, editing, and deletion of data, thereby enabling the dynamic functionalities experienced on the client side. The choice of Django as the development framework brings to the platform the advantages of rapid development, clean design, and the strength of Python for backend logic.</p>"},{"location":"developer-guide/backend/#key-sections","title":"Key Sections","text":"<p>Installation and Setup**: Here, you'll find comprehensive instructions on setting up the backend environment for the TEA Platform. From installing Python and Django to initializing the database with SQLite for development or configuring PostgreSQL for production deployments, this guide ensures you have the backend up and running smoothly.</p> <p>Django Settings: This section outlines the configuration and settings of the Django framework that are crucial for the operation of the TEA Platform. It covers how to adjust settings for different environments (development, testing, production), including database configurations, security settings, and application-specific options.</p> <p>Backend Management Files**: Delve into the key files and directories that constitute the backend structure, including models, views, serializers, and URL configurations. This guide provides an explanation of the roles these files play in the backend architecture and how they interact to support the platform's functionalities.</p> <p>API Documentation**: A detailed exploration of the API endpoints available in the TEA Platform's backend, facilitating interaction between the frontend React application and the database. This documentation here is essential for developers looking to understand or extend the platform's API capabilities.</p>"},{"location":"developer-guide/backend/#connecting-frontend-and-backend","title":"Connecting Frontend and Backend","text":"<p>The interactivity and dynamic features of the TEA Platform's frontend are powered by the RESTful API provided by the backend. React components make HTTP requests to the API endpoints to fetch, display, and manage assurance cases and related data, ensuring a seamless and responsive user experience. This integration highlights the importance of understanding both sides of the platform for comprehensive development and customization.</p>"},{"location":"developer-guide/backend/#database-technologies","title":"Database Technologies","text":"<p>The backend supports various SQL-based databases, with SQLite being the default choice for ease of setup and suitability for development and testing phases. For scalable production environments, PostgreSQL is recommended, and guidance is provided for deploying this on cloud services like Azure.</p>"},{"location":"developer-guide/backend/#getting-started","title":"Getting Started","text":"<p>Whether you're a developer interested in contributing to the backend, a system administrator tasked with deploying the platform, or simply curious about the inner workings of the TEA Platform, these documentation sections offer valuable insights and practical guidance. By understanding the backend architecture, you can effectively contribute to or customize the platform, ensuring it meets the specific needs of your assurance case management processes.</p>"},{"location":"developer-guide/backend/_prerequisites/","title":"prerequisites","text":"<p>Before you begin setting up the backend, it's essential to have a proper Python environment management system in place. For this setup, we recommend using Anaconda or Miniconda, which are powerful platforms for managing Python environments and packages. Anaconda is a full-featured distribution that includes a wide range of scientific libraries and tools, making it ideal for data science and machine learning projects. Miniconda is a minimal installer for Anaconda, offering the same environment and package management capabilities but allowing you to install only the packages you need. Both options provide a convenient way to create isolated environments for different projects, ensuring dependencies are kept separate and do not conflict.</p> <p>If you don't already have Anaconda or Miniconda installed, please visit their respective websites for installation instructions tailored to your operating system. This will streamline the process of creating a virtual environment and managing the necessary Python packages for the TEA Platform backend.</p>"},{"location":"developer-guide/backend/backend-management-files/","title":"Backend Management Files","text":"<p>The TEA Platform, developed using Django and the Django REST framework, comprises several Python modules that are pivotal to its operation. These modules play specific roles in defining the platform's database schema, data serialization, request handling, and URL routing. Here\u2019s an overview of these essential components:</p> <p>Models (<code>eap_api/models.py</code>): This file is at the heart of defining the platform's database schema using Django's Object-Relational Mapping (ORM) system. Each class that inherits from django.db.models.Model is mapped to a database table, setting the groundwork for how data is stored, retrieved, and manipulated within the platform.</p> <p>Serializers (<code>eap_api/serializers.py</code>): The serializers handle the conversion between Model instances and JSON, making it possible for the platform\u2019s data to be easily transferred over the web. This file ensures that complex model instances can be transformed into a format that can be understood by the frontend and vice versa.</p> <p>Views (<code>eap_api/views.py</code>): The views module defines the logic for each API endpoint, dictating how requests are processed and how data is returned to the client. Special attention is given to requests that require nested JSON structures, employing a recursive function get_json_tree to assemble the comprehensive data structure for assurance cases and their related components.</p> <p>URLs (<code>eap_api/urls.py</code>): This module maps the available API endpoints to their corresponding view functions in views.py, establishing the routes that clients interact with. It acts as the web-facing interface of the backend, directing incoming requests to the appropriate handlers based on the requested URL path.</p> <p>Understanding these modules and their functions within the Django framework provides a solid foundation for contributing to or extending the TEA Platform. Each plays a crucial role in ensuring the platform's backend operates efficiently, securely, and in harmony with the frontend application.</p>"},{"location":"developer-guide/backend/django-settings/","title":"Django Settings for the TEA Platform","text":"<p>This section details the Django framework settings essential for the TEA Platform's operation. It guides you through configuring settings for different environments, such as development, testing, and production, including database configurations, security enhancements, and application-specific options.</p>"},{"location":"developer-guide/backend/django-settings/#security-and-environment-configuration","title":"Security and Environment Configuration","text":"<p><code>SECRET_KEY</code>: A critical setting that should be unique and kept secret in production environments. Ensure that it is not stored in version control and is generated uniquely for each deployment.</p> <p><code>DEBUG</code>: This setting controls whether Django runs in debug mode. It should be set to False in production to avoid exposing sensitive information.</p> <p><code>CORS_ORIGIN_WHITELIST</code>: Specifies the hosts allowed to make cross-origin requests to your Django backend. For local development with the React frontend, this typically includes localhost:3000.</p>"},{"location":"developer-guide/backend/django-settings/#database-settings","title":"Database Settings","text":"<p>The TEA Platform supports both SQLite (for development and testing) and PostgreSQL (recommended for production). Database configurations can be adjusted based on the environment variables:</p> <p>SQLite: Used by default if no environment variables are set. Ideal for development and testing phases.</p> <pre><code>```python\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n```\n</code></pre> <p>PostgreSQL: For production, environment variables such as DBHOST, DBNAME, DBUSER, and DBPASSWORD need to be defined. This setup enhances the platform's scalability and security in production deployments.</p> <pre><code>```python\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.postgresql\",\n        \"HOST\": os.environ.get(\"DBHOST\"),\n        \"NAME\": os.environ.get(\"DBNAME\"),\n        \"USER\": os.environ.get(\"DBUSER\"),\n        \"PASSWORD\": os.environ.get(\"DBPASSWORD\"),\n    }\n}\n```\n</code></pre>"},{"location":"developer-guide/backend/django-settings/#application-and-middleware-configuration","title":"Application and Middleware Configuration","text":"<p><code>INSTALLED_APPS</code>: Includes Django's default apps and third-party apps such as rest_framework for the REST API functionality, corsheaders for handling Cross-Origin Resource Sharing (CORS) settings, and allauth for authentication.</p> <p><code>MIDDLEWARE</code>: A series of middleware classes that process request/response objects. It includes CorsMiddleware for managing CORS headers according to your <code>CORS_ORIGIN_WHITELIST</code>.</p>"},{"location":"developer-guide/backend/django-settings/#rest-framework-and-authentication","title":"REST Framework and Authentication","text":"<p><code>REST_FRAMEWORK</code>: Configures the default permissions and authentication classes. For instance, using <code>rest_framework.permissions.AllowAny</code> to allow unrestricted access or <code>rest_framework.authentication.TokenAuthentication</code> for API token-based authentication.</p>"},{"location":"developer-guide/backend/django-settings/#static-and-media-files","title":"Static and Media Files","text":"<p><code>STATIC_URL</code>: Defines the URL path for serving static files (CSS, JavaScript, images).</p>"},{"location":"developer-guide/backend/django-settings/#additional-settings","title":"Additional Settings","text":"<p><code>LANGUAGE_CODE</code> and <code>TIME_ZONE</code>: Adjust these settings to match your locale and timezone preferences.</p> <p><code>EMAIL_BACKEND</code>: Configures the backend to use for sending emails. For development, using <code>django.core.mail.backends.console.EmailBackend</code> logs emails to the console instead of sending them.</p>"},{"location":"developer-guide/backend/django-settings/#adjusting-settings-for-different-environments","title":"Adjusting Settings for Different Environments","text":"<p>For a seamless transition between development, testing, and production environments, consider using environment variables to dynamically adjust settings. Utilize Django's <code>os.environ.get()</code> to fetch environment variables and apply conditional logic to switch between different database backends or to toggle the <code>DEBUG</code> setting.</p>"},{"location":"developer-guide/backend/django-settings/#final-thoughts","title":"Final Thoughts","text":"<p>Properly configuring the Django settings is crucial for the security, performance, and functionality of the TEA Platform. Ensure sensitive settings like <code>SECRET_KEY</code> are securely managed and that the database configurations are appropriate for your deployment environment.</p>"},{"location":"developer-guide/backend/installation/","title":"Backend Installation and Setup Guide","text":"<p>Welcome to the setup guide for the backend environment of the Trustworthy and Ethical Assurance (TEA) Platform. This guide will walk you through the necessary steps to get the backend up and running on your local machine. Whether you're setting up for development, testing, or preparing for production deployment, this guide covers installing Python and Django, initializing the database with SQLite for development, and configuring PostgreSQL for more robust environments.</p>"},{"location":"developer-guide/backend/installation/#prerequisites","title":"Prerequisites","text":"<p>Before you begin setting up the backend, it's essential to have a proper Python environment management system in place. For this setup, we recommend using Anaconda or Miniconda, which are powerful platforms for managing Python environments and packages. Anaconda is a full-featured distribution that includes a wide range of scientific libraries and tools, making it ideal for data science and machine learning projects. Miniconda is a minimal installer for Anaconda, offering the same environment and package management capabilities but allowing you to install only the packages you need. Both options provide a convenient way to create isolated environments for different projects, ensuring dependencies are kept separate and do not conflict.</p> <p>If you don't already have Anaconda or Miniconda installed, please visit their respective websites for installation instructions tailored to your operating system. This will streamline the process of creating a virtual environment and managing the necessary Python packages for the TEA Platform backend.</p>"},{"location":"developer-guide/backend/installation/#setting-up-the-backend","title":"Setting Up the Backend","text":"<ol> <li> <p>Clone the Repository</p> <p>First, clone the Assurance Platform repository to your local machine using the following command:</p> <pre><code>$ git clone https://github.com/alan-turing-institute/AssurancePlatform.git\n</code></pre> <p>This command copies all the necessary files to your local system.</p> </li> <li> <p>Setting Up the Backend</p> <p>Create and Activate a Virtual Environment</p> <p>To avoid conflicts with other Python projects, create a virtual environment specifically for the TEA Platform backend. Using Conda, you can create a new environment with Python 3.8 as follows:</p> <pre><code>$ conda create --name eapenv python=3.8 -y\n$ conda activate eapenv\n</code></pre> </li> <li> <p>Install Dependencies</p> <p>Navigate to the eap_backend directory within the cloned repository and install the required dependencies:</p> <pre><code>$ cd eap_backend\n$ pip install -r requirements.txt\n</code></pre> </li> <li> <p>Initialize the Database</p> <p>Use Django's built-in commands to set up the database. By default, this guide uses SQLite for simplicity and ease of use:</p> <pre><code>$ python manage.py migrate\n</code></pre> </li> <li> <p>Run Tests</p> <p>Ensure everything is set up correctly by running the Django test suite:</p> <pre><code>$ python manage.py test\n</code></pre> </li> <li> <p>Launch the Backend Server</p> <p>Start the Django development server. By default, the server will run on port 8000:</p> <pre><code>$ python manage.py runserver\n</code></pre> <p>At this point, your backend should be running locally, accessible via http://localhost:8000/api. You can now proceed to set up the frontend to interact with the backend API.</p> </li> </ol>"},{"location":"developer-guide/backend/installation/#running-locally-after-changes","title":"Running Locally: After Changes","text":"<p>After making any updates to the database schema or if you're running the server for the first time, ensure to apply migrations:</p> <pre><code>python manage.py migrate\n</code></pre>"},{"location":"developer-guide/backend/installation/#running-the-api-server","title":"Running the API Server","text":"<p>To start the API server, simply execute:</p> <pre><code>python manage.py runserver\n</code></pre> <p>from the <code>eap_backend</code> directory. The server will restart automatically upon code changes, making development efficient and streamlined.</p>"},{"location":"developer-guide/backend/installation/#running-tests","title":"Running Tests","text":"<p>It's good practice to run tests frequently during development. To execute the test suite, use:</p> <pre><code>python manage.py test\n</code></pre>"},{"location":"developer-guide/backend/installation/#continue-with-frontend-setup","title":"Continue with Frontend Setup","text":"<p>This guide provides you with the foundation needed to develop and test the TEA Platform's backend. With the backend operational, you can focus on integrating with the frontend or expanding the platform's capabilities. &gt;&gt; Continue with frontend setup.</p>"},{"location":"developer-guide/backend/api/","title":"TEA Platform API","text":"<p>Welcome to the Trustworthy and Ethical Assurance (TEA) Platform API documentation. This guide is designed to provide you with all the information you need to start integrating with and utilizing the TEA Platform's comprehensive set of features. Our API enables developers, researchers, and technology governance practitioners to access and manipulate assurance cases, user groups, comments, and more, facilitating a collaborative environment for ethical technology development.</p>"},{"location":"developer-guide/backend/api/#quickstart","title":"Quickstart","text":"<p>To get you started with the TEA Platform API, we'll walk you through a few basic <code>curl</code> commands to perform common actions such as user authentication, listing resources, and adding new entries.</p>"},{"location":"developer-guide/backend/api/#authenticate-a-user","title":"Authenticate a User","text":"<p>To interact with the TEA Platform API, you'll first need to authenticate. If you're logging in, you'll typically post your credentials to receive an authentication token.</p> <pre><code>curl -X POST http://localhost:8000/auth/login/ \\\n     -H 'Content-Type: application/json' \\\n     -d '{\"username\": \"yourusername\", \"password\": \"yourpassword\"}'\n</code></pre>"},{"location":"developer-guide/backend/api/#list-cases","title":"List Cases","text":"<p>You can list assurance cases available to you.</p> <pre><code>curl -X GET http://localhost:8000/api/cases/\n</code></pre>"},{"location":"developer-guide/backend/api/#add-a-new-case","title":"Add a New Case","text":"<p>To create a new assurance case, you'll need to POST the required data.</p> <pre><code>curl -X POST http://localhost:8000/api/cases/ \\\n     -H 'Authorization: Bearer your_token_here' \\\n     -H 'Content-Type: application/json' \\\n     -d '{\"name\": \"New Assurance Case\", \"description\": \"Detailed description of the case\", \"user_id\": \"1\", \"lock_uuid\": \"\", \"color_profile\": \"default\"}'\n</code></pre> <p>These commands are just the beginning of what you can do with the TEA Platform API. Throughout this documentation, you'll find detailed descriptions of every endpoint available, including required parameters, request and response formats, and example requests to help you effectively utilize the platform.</p>"},{"location":"developer-guide/backend/api/assurance-cases/","title":"Assurance Case Endpoints","text":"<p>The TEA Platform provides comprehensive endpoints for managing assurance cases and their elements, including goals, contexts, property claims, and strategies. This section details how to interact with these resources via the API.</p> <p>Replace <code>&lt;int:pk&gt;</code>, <code>&lt;case_id&gt;</code>, <code>&lt;goal_id&gt;</code> with the appropriate integer identifiers for your assurance cases, goals, etc., and your_access_token_here with your actual access token received after authentication.</p> <p>The <code>curl</code> examples in the following serve as a quick way to test and interact with the TEA Platform API directly from your command line.</p>"},{"location":"developer-guide/backend/api/assurance-cases/#case-list-management","title":"Case List &amp; Management","text":""},{"location":"developer-guide/backend/api/assurance-cases/#list-all-assurance-cases","title":"List All Assurance Cases","text":""},{"location":"developer-guide/backend/api/assurance-cases/#request","title":"Request","text":"<pre><code>curl -X GET http://localhost:8000/api/cases/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"developer-guide/backend/api/assurance-cases/#response","title":"Response","text":"<p>A JSON array of assurance cases, each with its details.</p>"},{"location":"developer-guide/backend/api/assurance-cases/#create-a-new-assurance-case","title":"Create a New Assurance Case","text":""},{"location":"developer-guide/backend/api/assurance-cases/#request_1","title":"Request","text":"<pre><code>curl -X POST http://localhost:8000/api/cases/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"name\": \"Case Name\", \"description\": \"Case Description\", \"lock_uuid\": \"\", \"color_profile\": \"default\"}'\n</code></pre>"},{"location":"developer-guide/backend/api/assurance-cases/#response_1","title":"Response","text":"<p>JSON object of the created assurance case.</p>"},{"location":"developer-guide/backend/api/assurance-cases/#retrieve-details-of-a-specific-assurance-case","title":"Retrieve Details of a Specific Assurance Case","text":""},{"location":"developer-guide/backend/api/assurance-cases/#request_2","title":"Request","text":"<pre><code>curl -X GET http://localhost:8000/api/cases/&lt;int:pk&gt;/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre> <p>Response:</p> <p>JSON object of the specified assurance case.</p>"},{"location":"developer-guide/backend/api/assurance-cases/#update-an-assurance-case","title":"Update an Assurance Case","text":""},{"location":"developer-guide/backend/api/assurance-cases/#request_3","title":"Request","text":"<pre><code>curl -X PUT http://localhost:8000/api/cases/&lt;int:pk&gt;/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"name\": \"Updated Case Name\", \"description\": \"Updated Case Description\"}'\n</code></pre> <p>Response:</p> <p>JSON object of the updated assurance case.</p>"},{"location":"developer-guide/backend/api/assurance-cases/#delete-an-assurance-case","title":"Delete an Assurance Case","text":""},{"location":"developer-guide/backend/api/assurance-cases/#request_4","title":"Request","text":"<pre><code>curl -X DELETE http://localhost:8000/api/cases/&lt;int:pk&gt;/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"developer-guide/backend/api/assurance-cases/#response_2","title":"Response","text":"<p>HTTP 204 No Content on successful deletion.</p>"},{"location":"developer-guide/backend/api/assurance-cases/#elements","title":"Elements","text":""},{"location":"developer-guide/backend/api/assurance-cases/#goal-endpoints","title":"Goal Endpoints","text":""},{"location":"developer-guide/backend/api/assurance-cases/#list-all-goals","title":"List All Goals","text":"<pre><code>curl -X GET http://localhost:8000/api/goals/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"developer-guide/backend/api/assurance-cases/#create-a-new-goal","title":"Create a New Goal","text":"<pre><code>curl -X POST http://localhost:8000/api/goals/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"name\": \"Goal Name\", \"description\": \"Goal Description\", \"assurance_case\": &lt;case_id&gt;}'\n</code></pre>"},{"location":"developer-guide/backend/api/assurance-cases/#update-a-goal-element","title":"Update a Goal Element","text":"<p>To update an existing goal element in an assurance case, use the PUT method at the <code>/goals/&lt;int:pk&gt;/</code> endpoint. This request allows you to modify the name, description, or associated assurance case of the goal.</p>"},{"location":"developer-guide/backend/api/assurance-cases/#request_5","title":"Request","text":"<pre><code>curl -X PUT http://localhost:8000/api/goals/&lt;int:pk&gt;/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"name\": \"Updated Goal Name\", \"description\": \"Updated Goal Description\"}'\n</code></pre>"},{"location":"developer-guide/backend/api/assurance-cases/#response_3","title":"Response","text":"<p>A JSON object containing the updated details of the goal.</p>"},{"location":"developer-guide/backend/api/assurance-cases/#delete-a-goal-element","title":"Delete a Goal Element","text":"<p>To delete a specific goal element from an assurance case, send a DELETE request to the <code>/goals/&lt;int:pk&gt;/</code> endpoint.</p>"},{"location":"developer-guide/backend/api/assurance-cases/#request_6","title":"Request","text":"<pre><code>curl -X DELETE http://localhost:8000/api/goals/&lt;int:pk&gt;/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"developer-guide/backend/api/assurance-cases/#response_4","title":"Response","text":"<p>HTTP 204 No Content on successful deletion, indicating the goal has been removed.</p>"},{"location":"developer-guide/backend/api/assurance-cases/#context-endpoints","title":"Context Endpoints","text":""},{"location":"developer-guide/backend/api/assurance-cases/#list-all-contexts","title":"List All Contexts","text":"<pre><code>curl -X GET http://localhost:8000/api/contexts/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"developer-guide/backend/api/assurance-cases/#create-a-new-context","title":"Create a New Context","text":"<pre><code>curl -X POST http://localhost:8000/api/contexts/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"name\": \"Context Name\", \"description\": \"Context Description\", \"goal\": &lt;goal_id&gt;}'\n</code></pre>"},{"location":"developer-guide/backend/api/assurance-cases/#update-a-context-element","title":"Update a Context Element","text":"<p>To update details of a context element linked to a goal, utilize the PUT method at the <code>/contexts/&lt;int:pk&gt;/</code> endpoint.</p>"},{"location":"developer-guide/backend/api/assurance-cases/#request_7","title":"Request","text":"<pre><code>curl -X PUT http://localhost:8000/api/contexts/&lt;int:pk&gt;/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"name\": \"Updated Context Name\", \"description\": \"Updated Context Description\"}'\n</code></pre>"},{"location":"developer-guide/backend/api/assurance-cases/#response_5","title":"Response","text":"<p>JSON representation of the context with the updated information.</p>"},{"location":"developer-guide/backend/api/assurance-cases/#delete-a-context-element","title":"Delete a Context Element","text":"<p>Remove a context element by sending a DELETE request to <code>/contexts/&lt;int:pk&gt;/</code>.</p>"},{"location":"developer-guide/backend/api/assurance-cases/#request_8","title":"Request","text":"<pre><code>curl -X DELETE http://localhost:8000/api/contexts/&lt;int:pk&gt;/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"developer-guide/backend/api/assurance-cases/#response_6","title":"Response","text":"<p>HTTP 204 No Content, confirming the context has been successfully deleted.</p>"},{"location":"developer-guide/backend/api/assurance-cases/#property-claim-endpoints","title":"Property Claim Endpoints","text":""},{"location":"developer-guide/backend/api/assurance-cases/#list-all-property-claims","title":"List All Property Claims","text":"<pre><code>curl -X GET http://localhost:8000/api/propertyclaims/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"developer-guide/backend/api/assurance-cases/#create-a-new-property-claim","title":"Create a New Property Claim","text":"<pre><code>curl -X POST http://localhost:8000/api/propertyclaims/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"name\": \"Property Claim Name\", \"description\": \"Property Claim Description\", \"goal\": &lt;goal_id&gt;}'\n</code></pre>"},{"location":"developer-guide/backend/api/assurance-cases/#update-a-property-claim-element","title":"Update a Property Claim Element","text":"<p>Property claims can be updated by sending a PUT request to <code>/propertyclaims/&lt;int:pk&gt;/</code>.</p>"},{"location":"developer-guide/backend/api/assurance-cases/#request_9","title":"Request","text":"<pre><code>curl -X PUT http://localhost:8000/api/propertyclaims//&lt;int:pk&gt;/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"name\": \"Updated Claim Name\", \"description\": \"Updated Claim Description\"}'\n</code></pre>"},{"location":"developer-guide/backend/api/assurance-cases/#response_7","title":"Response","text":"<p>The API responds with the updated property claim details in JSON format.</p>"},{"location":"developer-guide/backend/api/assurance-cases/#delete-a-property-claim-element","title":"Delete a Property Claim Element","text":"<p>To delete a property claim, issue a DELETE command to <code>/propertyclaims/&lt;int:pk&gt;/</code>.</p>"},{"location":"developer-guide/backend/api/assurance-cases/#request_10","title":"Request","text":"<pre><code>curl -X DELETE http://localhost:8000/api/propertyclaims//&lt;int:pk&gt;/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"developer-guide/backend/api/assurance-cases/#response_8","title":"Response","text":"<p>HTTP 204 No Content upon successful removal of the property claim.</p>"},{"location":"developer-guide/backend/api/assurance-cases/#strategy-endpoints","title":"Strategy Endpoints","text":""},{"location":"developer-guide/backend/api/assurance-cases/#list-all-strategies","title":"List All Strategies","text":"<pre><code>curl -X GET http://localhost:8000/api/strategies/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"developer-guide/backend/api/assurance-cases/#create-a-new-strategy","title":"Create a New Strategy","text":"<pre><code>curl -X POST http://localhost:8000/api/strategies/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"name\": \"Strategy Name\", \"description\": \"Strategy Description\", \"goal\": &lt;goal_id&gt;}'\n</code></pre>"},{"location":"developer-guide/backend/api/assurance-cases/#update-a-strategy-element","title":"Update a Strategy Element","text":"<p>Modify an existing strategy by using the PUT method on <code>/strategies/&lt;int:pk&gt;/</code>.</p>"},{"location":"developer-guide/backend/api/assurance-cases/#request_11","title":"Request","text":"<pre><code>curl -X PUT http://localhost:8000/api/strategies//&lt;int:pk&gt;/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"name\": \"Updated Strategy Name\", \"description\": \"Updated Strategy Description\"}'\n</code></pre>"},{"location":"developer-guide/backend/api/assurance-cases/#response_9","title":"Response","text":"<p>A JSON object representing the strategy after updates have been applied.</p>"},{"location":"developer-guide/backend/api/assurance-cases/#delete-a-strategy-element","title":"Delete a Strategy Element","text":"<p>Remove a strategy from an assurance case by sending a DELETE request to <code>/strategies/&lt;int:pk&gt;/</code>.</p>"},{"location":"developer-guide/backend/api/assurance-cases/#request_12","title":"Request","text":"<pre><code>curl -X DELETE http://localhost:8000/api/strategies//&lt;int:pk&gt;/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"developer-guide/backend/api/assurance-cases/#response_10","title":"Response","text":"<p>HTTP 204 No Content, indicating the strategy has been deleted successfully.</p>"},{"location":"developer-guide/backend/api/authentication/","title":"Authentication Endpoints","text":"<p>Authentication is crucial for accessing the TEA Platform's features. This section covers the endpoints required for logging in, logging out, and registering a new account. Each request and response is JSON-formatted.</p>"},{"location":"developer-guide/backend/api/authentication/#login","title":"Login","text":"<p>To authenticate a user and receive an access token for subsequent requests, use the <code>/api/auth/login/</code> endpoint. This token should be included in the Authorization header as a Bearer token for API calls that require authentication.</p>"},{"location":"developer-guide/backend/api/authentication/#request","title":"Request","text":"<pre><code>curl -X POST http://localhost:8000/api/auth/login/ \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\"username\": \"your_username\", \"password\": \"your_password\"}'\n</code></pre>"},{"location":"developer-guide/backend/api/authentication/#response","title":"Response","text":"<pre><code>{\n    \"token\": \"your_token\"\n}\n</code></pre>"},{"location":"developer-guide/backend/api/authentication/#logout","title":"Logout","text":"<p>To log out a user and invalidate the current token, use the <code>/api/auth/logout/</code> endpoint. Note that this requires an authenticated request.</p>"},{"location":"developer-guide/backend/api/authentication/#request_1","title":"Request","text":"<pre><code>curl -X POST http://localhost:8000/api/auth/logout/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"developer-guide/backend/api/authentication/#response_1","title":"Response","text":"<p>A successful logout will return a 200 OK status with no content.</p>"},{"location":"developer-guide/backend/api/authentication/#registration","title":"Registration","text":"<p>To create a new user account, submit a request to <code>/api/auth/register/</code> with the required user information. Upon successful registration, the user will be authenticated automatically, and an access token will be returned.</p>"},{"location":"developer-guide/backend/api/authentication/#request_2","title":"Request","text":"<pre><code>curl -X POST http://localhost:8000/api/auth/register/ \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n           \"username\": \"new_user\",\n           \"email\": \"new_user@example.com\",\n           \"password1\": \"complex_password\",\n           \"password2\": \"complex_password\"\n         }'\n</code></pre> <p>Response:</p> <pre><code>{\n  \"key\": \"your_new_access_token_here\"\n}\n</code></pre> <p>This token is used just like the login token for authenticated requests.</p>"},{"location":"developer-guide/backend/api/comment/","title":"Comment Endpoints","text":"<p>The TEA Platform provides a set of endpoints dedicated to managing comments within assurance cases. This functionality allows users to engage in discussions, provide feedback, and collaborate on assurance case development.</p> <p>Remember to replace <code>&lt;int:assurance_case_id&gt;</code> with the ID of the assurance case you're referring to, <code>&lt;int:pk&gt;</code> with the specific comment's ID, and <code>your_access_token_here</code> with your actual access token received upon authentication.</p> <p>The <code>curl</code> examples offer here show a straightforward way to interact with the TEA Platform's comment functionalities directly from the command line.</p>"},{"location":"developer-guide/backend/api/comment/#list-all-comments-for-a-specific-assurance-case","title":"List All Comments for a Specific Assurance Case","text":"<p>Retrieve a list of all comments associated with a specific assurance case by making a GET request to the /comments// endpoint."},{"location":"developer-guide/backend/api/comment/#request","title":"Request","text":"<pre><code>curl -X GET http://localhost:8000/api/comments/&lt;int:assurance_case_id&gt;/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"developer-guide/backend/api/comment/#response","title":"Response","text":"<p>A JSON array of comments related to the specified assurance case, each including details like the comment ID, content, author, and timestamps.</p>"},{"location":"developer-guide/backend/api/comment/#add-a-new-comment-to-an-assurance-case","title":"Add a New Comment to an Assurance Case","text":"<p>To add a new comment to an assurance case, use the POST method with the assurance case ID in the URL.</p>"},{"location":"developer-guide/backend/api/comment/#request_1","title":"Request","text":"<pre><code>curl -X POST http://localhost:8000/api/comments/&lt;int:assurance_case_id&gt;/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"content\": \"Your insightful comment here.\"}'\n</code></pre>"},{"location":"developer-guide/backend/api/comment/#response_1","title":"Response","text":"<p>JSON object of the newly created comment, including its ID and content.</p>"},{"location":"developer-guide/backend/api/comment/#retrieve-details-of-a-specific-comment","title":"Retrieve Details of a Specific Comment","text":"<p>Access the details of a specific comment by its ID using a GET request.</p>"},{"location":"developer-guide/backend/api/comment/#request_2","title":"Request","text":"<pre><code>curl -X GET http://localhost:8000/api/comments/&lt;int:pk&gt;/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"developer-guide/backend/api/comment/#response_2","title":"Response","text":"<p>A JSON object detailing the requested comment, including its content, author, and related assurance case.</p>"},{"location":"developer-guide/backend/api/comment/#update-a-comment","title":"Update a Comment","text":"<p>Update the content of an existing comment by sending a PUT request to the comment's specific endpoint.</p>"},{"location":"developer-guide/backend/api/comment/#request_3","title":"Request","text":"<pre><code>curl -X PUT http://localhost:8000/api/comments/&lt;int:pk&gt;/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"content\": \"Updated content of the comment.\"}'\n</code></pre>"},{"location":"developer-guide/backend/api/comment/#response_3","title":"Response","text":"<p>JSON representation of the updated comment, reflecting the new content.</p>"},{"location":"developer-guide/backend/api/comment/#delete-a-comment","title":"Delete a Comment","text":"<p>To remove a comment from an assurance case, issue a DELETE request to the specific comment's endpoint.</p>"},{"location":"developer-guide/backend/api/comment/#request_4","title":"Request","text":"<pre><code>curl -X DELETE http://localhost:8000/api/comments/&lt;int:pk&gt;/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"developer-guide/backend/api/comment/#response_4","title":"Response","text":"<p>HTTP 204 No Content on successful deletion, indicating that the comment has been removed.</p>"},{"location":"developer-guide/backend/api/github/","title":"GitHub Repository Endpoints","text":"<p>The TEA Platform integrates with GitHub to enable users to link their GitHub repositories directly to their profiles and assurance cases. This functionality fosters a seamless workflow for users who manage their assurance cases via GitHub repositories.</p> <p>Below are the API endpoints available for interacting with GitHub repositories within the TEA Platform.</p> <p>Replace <code>&lt;int:pk&gt;</code> with the actual user ID you're querying, <code>&lt;user_id&gt;</code> with the ID of the user to whom the repository should be linked, and <code>your_access_token_here</code> with your valid authentication token received after logging in.</p> <p>The <code>curl</code> examples below provide a practical way for platform users to manage their GitHub repositories through the TEA Platform API, enhancing the integration between their assurance case work and codebase management.</p>"},{"location":"developer-guide/backend/api/github/#list-all-github-repositories-for-a-specific-user","title":"List All GitHub Repositories for a Specific User","text":"<p>Retrieve a list of all GitHub repositories associated with a specific user by their user ID. This endpoint is useful for understanding the scope of projects a user is involved in.</p>"},{"location":"developer-guide/backend/api/github/#request","title":"Request","text":"<pre><code>curl -X GET http://localhost:8000/api/users//&lt;int:pk&gt;/github_repositories/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"developer-guide/backend/api/github/#response","title":"Response","text":"<p>A JSON array of GitHub repositories linked to the user, each including repository details such as name, URL, and description.</p>"},{"location":"developer-guide/backend/api/github/#list-all-github-repositories","title":"List All GitHub Repositories","text":"<p>To view all GitHub repositories linked within the TEA Platform, irrespective of the user, use this endpoint. It provides a broad overview of all repositories integrated into the platform.</p>"},{"location":"developer-guide/backend/api/github/#request_1","title":"Request","text":"<pre><code>curl -X GET http://localhost:8000/api/github_repositories/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"developer-guide/backend/api/github/#response_1","title":"Response","text":"<p>A JSON array containing every GitHub repository registered on the TEA Platform, with details like name, URL, and description for each repository.</p>"},{"location":"developer-guide/backend/api/github/#add-a-new-github-repository","title":"Add a New GitHub Repository","text":"<p>Link a new GitHub repository to the TEA Platform by providing the repository's details. This allows you to directly associate your GitHub projects with assurance cases or your user profile on the TEA Platform.</p>"},{"location":"developer-guide/backend/api/github/#request_2","title":"Request","text":"<pre><code>curl -X POST http://localhost:8000/api/github_repositories/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\n           \"name\": \"Repository Name\",\n           \"url\": \"https://github.com/username/repository\",\n           \"description\": \"Repository Description\",\n           \"owner\": &lt;user_id&gt;\n         }'\n</code></pre>"},{"location":"developer-guide/backend/api/github/#response_2","title":"Response","text":"<p>JSON object of the newly added GitHub repository, confirming its successful registration on the platform.</p>"},{"location":"developer-guide/backend/api/group/","title":"Group Endpoints","text":"<p>Groups within the TEA Platform facilitate collaboration among users, allowing them to work together on assurance cases and share insights. Below are the API endpoints that manage group operations, including listing, creating, updating, and deleting groups.</p> <p>Ensure to replace <code>&lt;int:pk&gt;</code> with the actual ID of the group you wish to interact with and <code>your_access_token_here</code> with your valid authentication token.</p> <p>These <code>curl</code> commands here offer a direct way to manage group functionalities on the TEA Platform, enhancing its utility as a collaborative tool for ethical assurance in technology projects.</p>"},{"location":"developer-guide/backend/api/group/#list-all-groups","title":"List All Groups","text":"<p>Retrieve a comprehensive list of all groups on the TEA Platform. This is useful for discovering existing collaboration opportunities.</p>"},{"location":"developer-guide/backend/api/group/#request","title":"Request","text":"<pre><code>curl -X GET http://localhost:8000/api/groups/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"developer-guide/backend/api/group/#response","title":"Response","text":"<p>A JSON array of groups, each with its details such as name, creation date, owner, and members.</p>"},{"location":"developer-guide/backend/api/group/#create-a-new-group","title":"Create a New Group","text":"<p>Establish a new group on the platform by specifying its name. This endpoint can foster new collaboration channels for assurance case development.</p>"},{"location":"developer-guide/backend/api/group/#request_1","title":"Request","text":"<pre><code>curl -X POST http://localhost:8000/api/groups/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"name\": \"New Group Name\"}'\n</code></pre>"},{"location":"developer-guide/backend/api/group/#response_1","title":"Response","text":"<p>JSON object of the created group, including its ID, name, and other pertinent details.</p>"},{"location":"developer-guide/backend/api/group/#retrieve-details-of-a-specific-group","title":"Retrieve Details of a Specific Group","text":"<p>Access detailed information about a specific group by its ID. This endpoint provides insight into the group's composition and projects.</p>"},{"location":"developer-guide/backend/api/group/#request_2","title":"Request","text":"<pre><code>curl -X GET http://localhost:8000/api/groups/&lt;int:pk&gt;/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"developer-guide/backend/api/group/#response_2","title":"Response","text":"<p>A JSON object detailing the requested group, including its name, members, and associated assurance cases.</p>"},{"location":"developer-guide/backend/api/group/#update-a-groups-details","title":"Update a Group's Details","text":"<p>Modify the details of an existing group, such as its name or members. This endpoint supports the dynamic nature of collaborative work.</p>"},{"location":"developer-guide/backend/api/group/#request_3","title":"Request","text":"<pre><code>curl -X PUT http://localhost:8000/api/groups/&lt;int:pk&gt;/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"name\": \"Updated Group Name\"}'\n</code></pre>"},{"location":"developer-guide/backend/api/group/#response_3","title":"Response","text":"<p>JSON representation of the group after the update, reflecting the changes made.</p>"},{"location":"developer-guide/backend/api/group/#delete-a-group","title":"Delete a Group","text":"<p>Remove a group from the platform. This action should be used with caution, as it will dissolve the collaboration space.</p>"},{"location":"developer-guide/backend/api/group/#request_4","title":"Request","text":"<pre><code>curl -X DELETE http://localhost:8000/api/groups/&lt;int:pk&gt;/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"developer-guide/backend/api/group/#response_4","title":"Response","text":"<p>HTTP 204 No Content on successful deletion, indicating that the group has been permanently removed.</p>"},{"location":"developer-guide/backend/api/user/","title":"User Endpoints","text":"<p>Managing user information is a critical aspect of the TEA Platform, facilitating user interaction, collaboration, and personalization. The user endpoints allow for retrieving personal details, listing all users, and managing user accounts, including creating, updating, and deleting users.</p> <p>Replace <code>&lt;int:pk&gt;</code> with the actual ID of the user you are referencing, and <code>your_access_token_here</code> with the actual token you received upon authentication.</p> <p>These <code>curl</code> examples provide straightforward methods to interact with the user-related functionalities of the TEA Platform, facilitating efficient user management and personalization.</p>"},{"location":"developer-guide/backend/api/user/#user-detail","title":"User Detail","text":"<p>Retrieve Details of the Currently Authenticated User To view your own user details, including your username, email, and associated groups or assurance cases.</p>"},{"location":"developer-guide/backend/api/user/#request","title":"Request","text":"<pre><code>curl -X GET http://localhost:8000/api/user/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"developer-guide/backend/api/user/#response","title":"Response","text":"<p>A JSON object containing your user details.</p>"},{"location":"developer-guide/backend/api/user/#user-list-management","title":"User List &amp; Management","text":""},{"location":"developer-guide/backend/api/user/#list-all-users","title":"List All Users","text":"<p>Retrieve a list of all users on the TEA Platform, useful for finding collaborators or understanding the platform's user base.</p>"},{"location":"developer-guide/backend/api/user/#request_1","title":"Request","text":"<pre><code>curl -X GET http://localhost:8000/api/users/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"developer-guide/backend/api/user/#response_1","title":"Response","text":"<p>A JSON array of users, each with their details.</p>"},{"location":"developer-guide/backend/api/user/#create-a-new-user","title":"Create a New User","text":"<p>Add a new user to the TEA Platform by providing necessary information such as username and email.</p>"},{"location":"developer-guide/backend/api/user/#request_2","title":"Request","text":"<pre><code>curl -X POST http://localhost:8000/api/users/ \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\"username\": \"new_user\", \"email\": \"new_user@example.com\", \"password\": \"secure_password\"}'\n</code></pre>"},{"location":"developer-guide/backend/api/user/#response_2","title":"Response","text":"<p>JSON object of the newly created user account.</p>"},{"location":"developer-guide/backend/api/user/#retrieve-a-specific-users-details","title":"Retrieve a Specific User's Details","text":"<p>Access detailed information about a specific user by their user ID.</p>"},{"location":"developer-guide/backend/api/user/#request_3","title":"Request","text":"<pre><code>curl -X GET http://localhost:8000/api/users//&lt;int:pk&gt;/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"developer-guide/backend/api/user/#response_3","title":"Response","text":"<p>A JSON object detailing the specified user's information.</p>"},{"location":"developer-guide/backend/api/user/#update-a-users-details","title":"Update a User's Details","text":"<p>Modify details of an existing user, such as their username, email, or password.</p>"},{"location":"developer-guide/backend/api/user/#request_4","title":"Request","text":"<pre><code>curl -X PUT http://localhost:8000/api/users//&lt;int:pk&gt;/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"username\": \"updated_username\", \"email\": \"updated_email@example.com\"}'\n</code></pre>"},{"location":"developer-guide/backend/api/user/#response_4","title":"Response","text":"<p>JSON representation of the user after updates have been applied.</p>"},{"location":"developer-guide/backend/api/user/#delete-a-user","title":"Delete a User","text":"<p>Remove a user account from the TEA Platform. This action is irreversible and should be used with caution.</p>"},{"location":"developer-guide/backend/api/user/#request_5","title":"Request","text":"<pre><code>curl -X DELETE http://localhost:8000/api/users//&lt;int:pk&gt;/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"developer-guide/backend/api/user/#response_5","title":"Response","text":"<p>HTTP 204 No Content on successful deletion, confirming the user account has been removed.</p>"},{"location":"developer-guide/deployment/azure/","title":"Deploying the TEA Platform on Microsoft Azure Cloud","text":"<p>Deploying the Trustworthy and Ethical Assurance (TEA) Platform on Microsoft Azure utilizes Docker for containerization, Azure Web Apps for hosting, and Azure Database for PostgreSQL for database services. This guide outlines the steps for setting up the TEA Platform on Azure, ensuring a robust and scalable deployment.</p>"},{"location":"developer-guide/deployment/azure/#prerequisites","title":"Prerequisites","text":"<p>Before beginning the deployment process, please ensure you have the following:</p> <ul> <li>Basic understanding of cloud services, specifically Microsoft Azure, and familiarity with the Azure portal.</li> <li>Docker installed and configured on your machine.</li> <li>An active Microsoft Azure account as well as an active DockerHub account.</li> <li>Git installed for cloning the repository.</li> <li>PostgreSQL command-line tool (<code>psql</code>) for database setup.</li> <li>A GitHub account for OAuth and actions setup.</li> <li>(Optional) Anaconda or Miniconda for managing Python environments, offering an easier way to handle project dependencies.</li> </ul> <p>Also, consider reviewing security best practices for managing secrets and passwords throughout the deployment process.</p>"},{"location":"developer-guide/deployment/azure/#setting-up-the-postgresql-database","title":"Setting Up the PostgreSQL Database","text":"<ol> <li> <p>Create a PostgreSQL Database</p> <p>Navigate to the Azure Portal, select \"+ Create a New Resource\", choose \"Azure Database for PostgreSQL\", and click \"Create\". Opt for a \"Single Server\" setup.</p> </li> <li> <p>Configuration</p> <p>After selecting your Subscription, Resource Group, and Region, specify your \"Server name\", \"Admin username\", and \"Password\". Remember these details as they are crucial for subsequent steps.</p> </li> <li> <p>Firewall Configuration</p> <p>To allow connections to your database, configure a firewall rule under \"Connection Security\" by adding your client IP address. Ensure \"Allow access to Azure services\" is enabled and consider disabling \"Enforce SSL connection\" for local development.</p> </li> <li> <p>Database Initialization</p> <p>Use psql to create your database:</p> <pre><code>$ psql --host=SERVER_NAME.postgres.database.azure.com --port=5432 --username=ADMIN_USERNAME@SERVER_NAME --dbname=postgres\n$ postgres=&gt; CREATE DATABASE eap;\n</code></pre> </li> </ol>"},{"location":"developer-guide/deployment/azure/#backend-deployment","title":"Backend Deployment","text":"<ol> <li> <p>Docker Image</p> <p>If not using GitHub Actions for automated builds, manually build and push your Docker image for the backend:</p> <pre><code>$ docker build -t YOUR_DOCKER_USERNAME/eap_backend:latest -f Dockerfile .\n$ docker push YOUR_DOCKER_USERNAME/eap_backend:latest\n</code></pre> </li> <li> <p>Backend Web App</p> <p>Create a new \"Web App\" in Azure Portal, selecting \"Docker Container\" and \"Linux\" for publishing. Configure the app with the environment variables related to your database and GitHub OAuth credentials.</p> </li> </ol>"},{"location":"developer-guide/deployment/azure/#frontend-deployment","title":"Frontend Deployment","text":"<ol> <li> <p>Frontend Docker Image</p> <p>Similar to the backend, build and push your frontend Docker image, ensuring the <code>BASE_URL</code> is set to your backend's URL.</p> <pre><code>$ docker build -t YOUR_DOCKER_USERNAME/eap_frontend:latest --build-arg BASE_URL=\"https://BACKEND_WEBAPP_NAME.azurewebsites.net/api\" -f Dockerfile .\n$ docker push YOUR_DOCKER_USERNAME/eap_frontend:latest\n</code></pre> <p>Note: In order to push to DockerHub, you will need to sign-up for the service and run <code>docker login</code> before the above commands will work.</p> </li> <li> <p>Frontend Web App</p> <p>Repeat the process for the backend web app, adjusting settings for the frontend, including <code>WEBSITES_PORT</code> and <code>REACT_APP_BASE_URL</code>.</p> </li> </ol>"},{"location":"developer-guide/deployment/azure/#cross-origin-resource-sharing-cors-configuration","title":"Cross-Origin Resource Sharing (CORS) Configuration","text":"<p>To enable seamless interaction between your frontend and backend, set the <code>CORS_ORIGIN_WHITELIST</code> environment variable in your backend's settings to include your frontend's URL.</p>"},{"location":"developer-guide/deployment/azure/#final-steps","title":"Final Steps","text":"<p>After configuring CORS settings, test the deployment by accessing your frontend's URL. You should be able to interact with the TEA Platform without issues.</p>"},{"location":"developer-guide/deployment/azure/#accessing-the-django-admin-interface","title":"Accessing the Django Admin Interface","text":"<p>The Django admin interface provides direct access to your database for managing data. Access it by navigating to https://BACKEND_WEBAPP_NAME.azurewebsites.net/admin and logging in with your superuser credentials. Use this interface cautiously, especially when deleting data.</p>"},{"location":"developer-guide/deployment/azure/#conclusion","title":"Conclusion","text":"<p>Deploying the TEA Platform on Azure involves setting up a secure and scalable environment. By following these steps, you can ensure your deployment is robust and ready for production use. Always remember to secure your secret keys and sensitive information, especially when deploying in a public cloud environment.</p>"},{"location":"developer-guide/frontend/","title":"Frontend Documentation for the TEA Platform","text":"<p>Welcome to the frontend documentation for the Trustworthy and Ethical Assurance (TEA) Platform. This section provides comprehensive guides and resources designed to help developers and contributors understand, set up, and customize the frontend aspect of the TEA Platform. Built using the React framework, our frontend architecture aims to deliver a responsive, user-friendly, and accessible interface for creating, managing, and sharing assurance cases.</p>"},{"location":"developer-guide/frontend/#overview","title":"Overview","text":"<p>The TEA Platform's frontend is the visual gateway for users to interact with the platform's features and capabilities. It encompasses the user interface (UI) design, client-side logic, and interaction with the backend APIs to fetch, display, and manage data dynamically. By leveraging the React framework, the frontend ensures a modular, efficient, and scalable application structure.</p>"},{"location":"developer-guide/frontend/#key-sections","title":"Key Sections","text":"<p>Installation and Setup: This guide walks through the process of installing and setting up the frontend of the TEA Platform. It includes step-by-step instructions on how to get the development environment ready, from cloning the repository to running the application locally using npm. This section is essential for new contributors or developers looking to get started with the platform's frontend development.</p> <p>Frontend Configuration: Learn how to configure the frontend interface of the TEA Platform. This page details the configuration options available within the config.json file, including API endpoints, styling variables, and feature toggles. It provides the necessary information to customize the frontend to suit different deployment environments or to tweak the visual presentation of the assurance cases.</p> <p>React Components: Dive into the details of the React components that make up the TEA Platform's frontend. This section covers the various custom and reusable components, including their props, states, and roles within the application. It provides insights into how these components contribute to the overall user experience and functionality of the platform.</p>"},{"location":"developer-guide/frontend/#getting-started","title":"Getting Started","text":"<p>To begin working with the TEA Platform's frontend, ensure you have a basic understanding of the React framework and familiarity with JavaScript and npm (Node Package Manager). The documentation provided aims to equip you with the knowledge and tools needed to contribute effectively to the frontend development of the TEA Platform.</p> <p>Whether you're looking to contribute to the project, customize the platform for your own use, or simply explore the frontend architecture, these documentation sections will guide you through each step of the process.</p>"},{"location":"developer-guide/frontend/_prerequisites/","title":"prerequisites","text":"<p>Node.js and npm: Ensure you have Node.js and npm installed on your system. Node.js is a runtime environment that allows you to run JavaScript on the server side. npm, included with Node.js, is the world's largest software registry that facilitates package management for JavaScript.</p>"},{"location":"developer-guide/frontend/installation/","title":"Frontend Setup and Development Guide","text":"<p>Setting up and running the frontend of the Trustworthy and Ethical Assurance (TEA) Platform is straightforward with Node.js and npm (Node Package Manager). This guide will walk you through installing the necessary tools, running the development server, and executing tests to ensure everything is set up correctly.</p>"},{"location":"developer-guide/frontend/installation/#prerequisites","title":"Prerequisites","text":"<p>Node.js and npm: Ensure you have Node.js and npm installed on your system. Node.js is a runtime environment that allows you to run JavaScript on the server side. npm, included with Node.js, is the world's largest software registry that facilitates package management for JavaScript.</p> <p>Backend Setup: Before starting with the frontend, make sure the backend server is up and running as the frontend will need to communicate with it.</p>"},{"location":"developer-guide/frontend/installation/#setting-up-the-frontend","title":"Setting Up the Frontend","text":"<ol> <li> <p>Clone the Repository     Start by cloning the TEA Platform repository to your local machine, if you haven't already done so.</p> <pre><code>git clone https://github.com/alan-turing-institute/AssurancePlatform.git\n</code></pre> </li> <li> <p>Navigate to the Frontend Directory     Change into the frontend directory within the cloned repository.</p> <pre><code>cd next-frontend\n</code></pre> </li> <li> <p>Install Dependencies</p> <p>Run the following command to install all required npm packages specified in the package.json file.</p> <pre><code>npm install\n</code></pre> </li> <li> <p>Run the Development Server</p> <p>Start the development server to launch the TEA Platform in your default web browser.</p> <pre><code>npm run start\n</code></pre> <p>or, for development server:</p> <pre><code>npm run dev\n</code></pre> <p>This command will automatically open a new browser tab pointing to http://localhost:3000, where you can start interacting with the frontend application.</p> </li> <li> <p>Run Tests</p> <p>It's good practice to run the available tests to ensure that the frontend components are functioning as expected.</p> <pre><code>npm run test\n</code></pre> </li> </ol>"},{"location":"developer-guide/frontend/installation/#environment-variables","title":"Environment Variables","text":"<p>Ensure that you have added the following to your <code>.env.local</code> file in the root of this project.</p> <pre><code>NEXT_PUBLIC_STORAGESASTOKEN={token-value}\nNEXT_PUBLIC_STORAGESOURCENAME={storage-name-value}\n\nGITHUB_APP_CLIENT_ID={gh-clientid-value}\nGITHUB_APP_CLIENT_SECRET={gh-secret-valie}\nNEXTAUTH_SECRET={unique-string}\nNEXT_PUBLIC_API_URL={api-url-value}\nAPI_URL={api-url-value}\nNEXTAUTH_URL={frontend-url-value}\n</code></pre> <p>To generate a unique string for the <code>NEXTAUTH_SECRET</code> you can run:</p> <pre><code>openssl rand -base64 32\n</code></pre> <p>&lt;!-- ## Additional Setup for SVG Export</p> <p>To enable the export of SVG images from the frontend, you need to install the Mermaid CLI globally on your system.</p> <pre><code>$ npm install -g @mermaid-js/mermaid-cli\n``` --&gt;\n\n## Troubleshooting SSL Errors\n\nIf you encounter any SSL errors during setup, try updating npm and forcing an audit fix, followed by updating react-scripts to the latest version.\n\n```shell\nnpm update &amp;&amp; \\\nnpm audit fix --force &amp;&amp; \\\nnpm i react-scripts@latest\n</code></pre>"},{"location":"developer-guide/frontend/installation/#conclusion","title":"Conclusion","text":"<p>By following these steps, you'll have the frontend of the TEA Platform running locally on your development machine, ready for further development and testing.</p>"},{"location":"developer-guide/frontend/mermaid/","title":"Visualizing Assurance Cases with Mermaid.js","text":"<p>The Trustworthy and Ethical Assurance (TEA) Platform leverages the power of Mermaid.js to provide a dynamic and intuitive visualization of assurance cases. Mermaid.js is an open-source rendering library that allows the creation of diagrams and flowcharts with Markdown-like notation, making it an ideal choice for representing the complex relationships and structures within assurance cases.</p>"},{"location":"developer-guide/frontend/mermaid/#introduction-to-mermaidjs","title":"Introduction to Mermaid.js","text":"<p>Mermaid.js simplifies the process of generating diagrams through a text-based approach, where users can describe diagrams in a Markdown-inspired syntax. This approach enables developers and users of the TEA Platform to focus on the content and logic of their assurance cases without worrying about the intricacies of diagram design.</p>"},{"location":"developer-guide/frontend/mermaid/#using-mermaid-in-the-tea-platform","title":"Using Mermaid in the TEA Platform","text":"<p>Within the TEA Platform, Mermaid.js is utilized to convert JSON representations of assurance cases into visually appealing and interactive flowcharts. These diagrams effectively illustrate the connections between different elements of an assurance case, such as Goals, Claims, Strategies, and Evidence, providing a clear overview of the case structure and facilitating easier analysis and communication.</p>"},{"location":"developer-guide/frontend/mermaid/#experimenting-with-mermaid","title":"Experimenting with Mermaid","text":"<p>To get a hands-on experience with Mermaid.js and explore its capabilities, users can utilize the Mermaid Live Editor. This online tool offers an interactive environment where you can write Mermaid syntax and instantly see the resulting diagram, enabling quick iterations and experimentation with different diagram configurations.</p>"},{"location":"developer-guide/frontend/mermaid/#integration-in-the-tea-platform","title":"Integration in the TEA Platform","text":"<p>Mermaid.js is seamlessly integrated into the TEA Platform's frontend, where it plays a critical role in the Mermaid component, part of the platform's React-based user interface. This integration ensures that assurance cases are not only thoroughly documented but also easily interpretable through visual means.</p> <p>For more details on how Mermaid.js is used within the TEA Platform and to dive deeper into the specific React components that facilitate this integration, please refer to our React Components page.</p>"},{"location":"developer-guide/frontend/react-components/","title":"React Components Deep Dive","text":"<p>Explore the intricacies of the React components that power the user interface of the Trustworthy and Ethical Assurance (TEA) Platform. This exploration delves into the custom-built and modular components that form the backbone of the platform's frontend, shedding light on their properties (props), internal states, and functional roles. Gain insights into the contribution of each component towards crafting a seamless and intuitive user experience, and understand the mechanics behind the platform's operational flow.</p> <p>Each component is meticulously designed to fulfill specific functions within the TEA Platform, from case creation and selection to detailed visualization and editing. Together, they embody the platform's commitment to making assurance case management an accessible, transparent, and collaborative process.</p> <p>Warning</p> <p>This section is a work in progress and will be updated with detailed information about the React components in the TEA Platform frontend, pending docstring writing and code review.</p>"},{"location":"developer-guide/frontend/react-components/#routes","title":"<code>Routes</code>","text":"<p>The <code>Routes</code> component acts as the central dispatcher for the application's various screens or views. It listens to changes in the browser's URL and mounts the appropriate React component that corresponds to the current route. This mechanism is crucial for the TEA Platform, allowing users to navigate between different parts of the application\u2014such as creating a new assurance case, viewing a list of cases, or editing a specific case\u2014without the traditional overhead associated with full-page refreshes.</p>"},{"location":"developer-guide/frontend/react-components/#casecontainer","title":"<code>CaseContainer</code>","text":"<p>Serves as the primary container for displaying and interacting with an assurance case. It integrates various components like <code>MermaidChart</code>, <code>ItemEditor</code>, and <code>CaseTopBar</code> to provide a comprehensive view and editing capabilities of an assurance case.</p>"},{"location":"developer-guide/frontend/react-components/#casecreator-and-casecreatorflow","title":"<code>CaseCreator</code> and <code>CaseCreatorFlow</code>","text":"<p>These components manage the creation of new assurance cases. Users can either start from scratch or use predefined templates to define the structure and content of their assurance cases.</p>"},{"location":"developer-guide/frontend/react-components/#commentsection","title":"<code>CommentSection</code>","text":"<p>Facilitates adding, viewing, and managing comments within an assurance case. It encourages collaborative review and feedback among users.</p>"},{"location":"developer-guide/frontend/react-components/#creategroup","title":"<code>CreateGroup</code>","text":"<p>Enables users to create new user groups for managing access and permissions across different assurance cases, fostering collaborative environments.</p>"},{"location":"developer-guide/frontend/react-components/#deletecasemodal-and-deleteitemmodal","title":"<code>DeleteCaseModal</code> and <code>DeleteItemModal</code>","text":"<p>These modals handle the deletion of assurance cases and individual items within a case, ensuring users are aware of the irreversible nature of this action through confirmatory prompts.</p>"},{"location":"developer-guide/frontend/react-components/#exportcasemodal","title":"<code>ExportCaseModal</code>","text":"<p>Provides functionality for exporting assurance cases in various formats, supporting the sharing and external review of cases.</p>"},{"location":"developer-guide/frontend/react-components/#managecases","title":"<code>ManageCases</code>","text":"<p>Acts as the dashboard for users to access, manage, and create new assurance cases. It includes quick access to import, create, and view existing cases.</p>"},{"location":"developer-guide/frontend/react-components/#navigation","title":"<code>Navigation</code>","text":"<p>The navigation bar at the top of the platform, offering easy access to the main sections of the application, GitHub repository, and user authentication actions.</p>"},{"location":"developer-guide/frontend/react-components/#splash-and-home","title":"<code>Splash</code> and <code>Home</code>","text":"<p><code>Splash</code> serves as the landing page for new or unauthenticated users, guiding them through login or case creation. <code>Home</code> transitions authenticated users to the <code>ManageCases</code> view, signifying entry into the case management dashboard.</p>"},{"location":"developer-guide/frontend/react-configuration/","title":"React Configuration","text":"<p>This document outlines the key configuration settings for the frontend of the Trustworthy and Ethical Assurance (TEA) Platform, a dynamic open-source tool developed to streamline the creation, management, and sharing of assurance cases. Our configuration aims to enhance usability and interactivity, ensuring a seamless experience for our users.</p>"},{"location":"developer-guide/frontend/react-configuration/#configuration-overview","title":"Configuration Overview","text":"<p>The frontend configuration of the TEA Platform is centralized within the <code>config.json</code> file located at <code>/frontend/src/config.json</code>. This file contains essential variables and settings that dictate how the frontend interacts with various elements of the platform, including the backend server, GitHub integration, and visual presentation of assurance cases.</p> <p>To modify the TEA Platform's frontend configuration, simply edit the <code>config.json</code> file and adjust the variables as needed to suit your deployment environment or visual preference.</p> <p>Warning</p> <p>Remember to review and test changes thoroughly to ensure optimal platform performance and user experience.</p>"},{"location":"developer-guide/frontend/react-configuration/#key-configuration-variables","title":"Key Configuration Variables","text":"<p><code>DEFAULT_BASE_URL</code>: Defines the base URL for backend API calls. By default, it points to <code>http://localhost:8000/api</code>, suitable for development environments. Adjust this URL to match your production backend deployment as necessary.</p> <p><code>DEFAULT_GITHUB_CLIENT_ID</code> and <code>DEFAULT_GITHUB_REDIRECT_URI</code>: Used for GitHub authentication, facilitating social login and repository integration. Customize these values based on your GitHub OAuth application settings.</p> <p><code>BOX_NCHAR</code>: Determines the character limit for text boxes within the platform, ensuring content consistency and readability.</p> <p><code>property_claim_types</code>: Lists the types of property claims supported by the platform, such as \"Project claim\" and \"System claim\", enabling users to categorize their claims accurately.</p>"},{"location":"developer-guide/frontend/react-configuration/#styling-and-visualization","title":"Styling and Visualization","text":"<p>The styling and mermaid_styles sections define the visual appearance of the assurance case elements, applying to fonts, colors, and shapes within the platform's graphical representations. These styles are crucial for enhancing the visual clarity and distinction between different elements of an assurance case.</p> <ul> <li><code>styling</code>: Specifies the main and Mermaid-specific fonts used throughout the platform, promoting a cohesive and accessible user interface.</li> <li><code>mermaid_styles</code>: Configures the colors and styles for different assurance case elements when visualized using the Mermaid diagramming tool. This includes configurations for various themes such as default, inverted, white, high-contrast, and monochrome, allowing for personalized visualization preferences.</li> </ul>"},{"location":"developer-guide/frontend/react-configuration/#navigation-hierarchy","title":"Navigation Hierarchy","text":"<p>The navigation object defines the hierarchical structure and relationships between different types of assurance case elements (e.g., <code>AssuranceCase</code>, <code>TopLevelNormativeGoal</code>, <code>Context</code>). It outlines how these elements are accessed and manipulated via the API, facilitating the dynamic construction and navigation of assurance cases within the platform.</p>"},{"location":"developer-guide/frontend/reactflow/","title":"Reactflow","text":"<p>React Flow is a library for building interactive node-based applications using React. It provides a simple API for creating flows, diagrams, and custom workflows. React Flow is especially useful for visualizing data relationships and building complex interfaces where users can manipulate nodes and edges.</p>"},{"location":"developer-guide/frontend/reactflow/#key-features-of-react-flow","title":"Key Features of React Flow","text":"<ul> <li>Node and Edge Management: Easily manage nodes and edges with a straightforward API.</li> <li>Customizable Components: Create custom nodes and edges to fit specific use cases.</li> <li>Zoom and Pan: Supports zooming and panning, allowing users to navigate complex diagrams effortlessly.</li> <li>Interactive: Provides drag-and-drop functionality for a more interactive user experience.</li> <li>Flexible Layouts: Supports different layouts for nodes, enabling various design patterns.</li> </ul> <p>Warning</p> <p>This section is a work in progress and will be updated with detailed information about the React components in the TEA Platform frontend, pending docstring writing and code review.</p>"},{"location":"developer-guide/frontend/reactflow/#example-assurance-case","title":"Example Assurance Case","text":"<p>Here is an example of how an assurance case can look when rendered with ReactFlow.</p> <p></p>"},{"location":"developer-guide/frontend/reactflow/#how-is-the-chart-rendered","title":"How is the chart rendered?","text":"<p>This chart is fairly static, in that the user cannot move each of the elements around the screen. Although, ReactFlow does provide this feature, we decided to lock this down for our intial release.</p> <p>To move elements you can use the actions presented when selecting an element.</p>"},{"location":"developer-guide/reset-database/","title":"Resetting the Database","text":"<p>Resetting the database of the Trustworthy and Ethical Assurance (TEA) Platform might become necessary under various circumstances. Whether you're cleaning up after a demonstration, addressing schema changes, or preparing for a new phase of development, understanding how to reset your database safely and effectively is crucial.</p> <p>Warning</p> <p>Resetting the database is a powerful action that can help maintain the cleanliness and integrity of your TEA Platform installation. However, it should be approached with caution to avoid accidental data loss.</p>"},{"location":"developer-guide/reset-database/#reasons-for-resetting","title":"Reasons for Resetting","text":"<p>Post-Demo Cleanup: After demonstrating the TEA Platform, you might want to remove all test data, including users and cases, to ensure a clean slate for actual use.</p> <p>Schema Changes: Implementing changes in the database schema that cannot be migrated using Django's standard migration tools may require a fresh start.</p>"},{"location":"developer-guide/reset-database/#resetting-environments","title":"Resetting Environments","text":"<p>The process for resetting the TEA Platform database differs depending on the environment in which it is deployed:</p> <p>Local Deployment: For developers and users running the TEA Platform locally, resetting involves clearing the local database file or using Django's database management commands. Instructions for clearing the database and starting afresh on your local development machine are provided in the Local Reset Guide.</p> <p>Azure Cloud Deployment: For instances deployed on Microsoft Azure or similar cloud services, the process may involve interacting with cloud database services and utilizing the Azure portal or CLI tools. The Azure Reset Guide provides detailed instructions for resetting the database in this scenario.</p>"},{"location":"developer-guide/reset-database/#additional-considerations","title":"Additional Considerations","text":"<p>Backup and Data Loss: Always ensure that any valuable data is backed up before initiating a database reset. Data loss is irreversible once the reset process is complete.</p> <p>Security Practices: Be mindful of security best practices, especially when handling database credentials and accessing cloud services.</p> <p>Deploying on Azure: Refer back to the deployment guide if you need to reconfigure or redeploy the TEA Platform on Azure after resetting.</p>"},{"location":"developer-guide/reset-database/azure/","title":"Resetting the Database on Azure Deployments","text":"<p>Resetting your database on Azure involves a few crucial steps to ensure that the process is completed smoothly without hindering the accessibility of your TEA Platform. This guide will walk you through the necessary steps to reset your database deployed on Microsoft Azure.</p> <p>Warning</p> <p>This process will remove all existing data in the database. It is highly recommended to back up any important data before proceeding with the reset.</p>"},{"location":"developer-guide/reset-database/azure/#prerequisites","title":"Prerequisites","text":"<p>The PostgreSQL command-line tool, <code>psql</code>, is required for directly interacting with your Azure database. Mac users with Homebrew can install it using <code>brew install postgresql</code>. Windows and Linux users should refer to their respective package managers or download it from the PostgreSQL official website.</p>"},{"location":"developer-guide/reset-database/azure/#1-allow-ip-connection","title":"1. Allow IP Connection","text":"<p>Before proceeding with the reset, ensure your local machine's IP address is allowed to connect to the Azure database server.</p> <ul> <li>Navigate to the Azure portal.</li> <li>Locate your database resource.</li> <li>Under \"Connection security\" on the left sidebar, select \"Add current client IP address\" and save your changes.</li> </ul>"},{"location":"developer-guide/reset-database/azure/#2-reset-the-database-via-psql","title":"2. Reset the Database via psql","text":"<p>You will now drop the existing database and create a new one using <code>psql</code>.</p> <p>Open your terminal or command prompt and execute the following commands:</p> <pre><code>psql --host=SERVER_NAME.postgres.database.azure.com --port=5432 --username=ADMIN_USERNAME@SERVER_NAME --dbname=postgres\n</code></pre> <p>Once connected, run:</p> <pre><code>postgres=&gt; DROP DATABASE eap;\npostgres=&gt; CREATE DATABASE eap;\npostgres=&gt; \\c eap;\npostgres=&gt; \\q\n</code></pre> <p>Replace SERVER_NAME and ADMIN_USERNAME with the actual server name and admin username provided in the Azure portal. Ensure you have the admin password at hand, as it might be required during connection.</p>"},{"location":"developer-guide/reset-database/azure/#3-restart-the-backend-web-app","title":"3. Restart the Backend Web App","text":"<p>To apply the changes and ensure your application connects to the refreshed database, you need to restart your backend web application.</p> <ul> <li>Go back to the Azure portal.</li> <li>Find your backend web app service.</li> <li>Use the \"Restart\" option to reboot the application.</li> </ul> <p>After a brief wait, your TEA Platform application should be operational with a clean database, ready for new data.</p>"},{"location":"developer-guide/reset-database/local/","title":"Resetting the Database on Local Deployments","text":"<p>Resetting your local database involves a straightforward process that ensures you start afresh with your TEA Platform's backend. This guide is designed for local deployments using SQLite, the default database setup for development environments.</p> <p>Warning</p> <p>This process will remove all existing data in the database. It is highly recommended to back up any important data before proceeding with the reset.</p>"},{"location":"developer-guide/reset-database/local/#1-identify-the-database-file","title":"1. Identify the Database File","text":"<p>The local database for the TEA Platform is stored in an SQLite file typically located at <code>eap_backend/db.sqlite3</code> within your project directory.</p>"},{"location":"developer-guide/reset-database/local/#2-delete-the-database-file","title":"2. Delete the Database File","text":"<p>To reset your database, you need to delete the existing SQLite file. Navigate to the <code>eap_backend</code> directory and remove the <code>db.sqlite3</code> file.</p> <pre><code>rm eap_backend/db.sqlite3\n</code></pre>"},{"location":"developer-guide/reset-database/local/#3-recreate-the-database","title":"3. Recreate the Database","text":"<p>After deleting the old database file, you'll need to recreate the database structure to continue working with a clean state.</p> <p>Ensure your backend environment is correctly set up, then execute the following Django management commands:</p> <pre><code>python manage.py makemigrations &amp;&amp; \\\npython manage.py migrate\n</code></pre> <p>These commands will generate a new <code>db.sqlite3</code> file with a fresh database schema based on your Django models.</p>"},{"location":"developer-guide/reset-database/local/#running-on-your-local-machine","title":"Running on Your Local Machine","text":"<p>For local deployments, the use of SQLite simplifies the process of resetting your database. After deleting the <code>db.sqlite3</code> file and running the migration commands, your backend will operate with a new, empty database.</p> <p>This process effectively removes all existing data, allowing you to start anew with your development or testing activities on the TEA Platform.</p>"},{"location":"learning-modules/","title":"About this Section","text":"<p>In this section you will find a series of learning modules, designed to help you understand how to use the TEA platform. These resources include explanations of the underlying methodology, guides to using the online tool, getting the most out of our community resources, and more.</p> <p>Some of the content can be read in any order and independently of each other, but for those who are completely new to Trustworthy and Ethical Assurance, a more structured curriculum has been developed.</p>","tags":["Introductory Resources"]},{"location":"learning-modules/#the-tea-curriculum","title":"The TEA Curriculum","text":"<ul> <li> <p> TEA Trainee</p> <p>This level introduces students to basic concepts and foundations for getting the most from the TEA platform.</p> <p> Go to module</p> </li> <li> <p> TEA Specialist</p> <p>This level builds on the foundational resources introduced in 'Assurance Trainee', and equips students with the knowledge and understanding required to contribute to the TEA community.</p> <p> Go to module</p> </li> <li> <p> TEA Expert</p> <p>This level is for those who wish to hone their knowledge and understanding, such that they are able to establish best practices alongside other advanced members of the TEA community and wider assurance ecosystem.</p> <p> Go to module</p> </li> <li> <p> Other Learning Resources</p> <p>This section contains other learning resources, such as further reading on specialised topics.</p> <p> Go to resources</p> </li> </ul>","tags":["Introductory Resources"]},{"location":"learning-modules/archive/argument-based-assurance/","title":"An Introduction to Argument-Based Assurance","text":"<p>The TEA platform is built around a methodology known as argument-based assurance (ABA).</p> <p>The general approach of ABA is to provide a reasoned and justified argument regarding some top-level claim (i.e. the goal). Historically, ABA has been used in safety-critical domains, such as aviation or energy, and so the top-level claims typically refer to goals such as reliability, safety, or security of a system. The main argument sets out the claims made about the system (including aspects of the project governance or design), the evidence supporting those claims, and the rationale that links the evidence to the claims.</p> <p>From safety assurance to ethical assurance</p> <p>The TEA platform instantiates a type of argument-based assurance that focuses on ethical goals and principles (e.g. fairness, explainability), which help establish justified trust in data-driven technologies, such as artificial intelligence or digital twins.</p> <p>ABA follows a process critical reasoning to create a convincing \"story\" or \"case\" that articulates why a system can be trusted to operate within certain contexts. The final artefact is known as an assurance case, and is typically presented in a visually intuitive form that supports accessible communication and assists critical engagement (e.g. identifying gaps in the argument, evaluating the strength of supporting evidence for linked claims). As such, ABA helps teams and stakeholders consider both positive evidence as well as possible counterarguments, gaps, and uncertainties, offering mitigations for those when possible.</p> <p>History of argument-based assurance</p> <p>Add a short history of ABA.</p> <p>One of the key strengths of this approach is its ability to facilitate clear communication among stakeholders, including researchers, developers, regulators, and system users. By making assumptions explicit and providing a structured framework for critical reasoning, ABA facilitates a transparent, understandable and reproducible assurance process. It also offers a flexible and extensible way to integrate various types of evidence (and standards), such as empirical data, expert opinion, and formal methods, into a cohesive argument.</p> <p>However, ABA is not without its challenges<sup>1</sup>. Constructing a rigorous argument requires significant expertise, can be time-consuming, and the quality of the argument is heavily dependent on the strength and sufficiency of the underlying evidence. Furthermore, there are also concerns regarding how to update or modify assurance arguments as systems evolve or when new information becomes available.</p> <p>To address some of these challenges, the TEA platform takes a community-driven approach to increasing capabilities and best practices within the assurance ecosystem.</p> <ol> <li> <p>Habli, I., Alexander, R., &amp; Hawkins, R. D. (2021). Safety Cases: An Impending Crisis? In Safety-Critical Systems Symposium (SSS\u201921). https://core.ac.uk/download/pdf/363148691.pdf \u21a9</p> </li> </ol>"},{"location":"learning-modules/archive/what-is-tea/","title":"What is Trustworthy and Ethical Assurance?","text":"<p>Assurance is about building trust.</p> <p>Consider the following scenario. You are in the market for a new car and go to a local dealership. One of the sales advisors convinces you to buy a second hand car that later turns out to have an issue with the engine. Frustrated, you take the car back and the sales advisor apologises. They explain that all their second hand cars undergo a thorough assessment before they are placed on the market but, nevertheless, go on to process a return and get you a different car. You are reassured and happy, but only for a short period of time. Yet again, the car turns out to have a problem with the engine\u2014the same problem as before! The sales advisor tries to convince you that this is just a series of unlucky incidents, but without clear evidence to support their claims, this time around you do not trust them and take your business elsewhere.</p> <p>Assurance involves communicating reasons and evidence that help people understand and evaluate the trustworthiness of a claim (or series of claims) about a system or technology.</p> <p>In the above example, the sales advisor needed to provide assurance that their cars were safe or reliable, but the claims they made about the assessment process were undermined by the contrary evidence (i.e. two unreliable cars).</p> <p>In a different scenario, things may go differently. For instance, you may have a higher level of trust with friends or other professionals (e.g. doctors, teachers) than with car sales persons. And, as such, you may be more likely to accept claims in the absence of evidence or in spite of repeated instances of contrary evidence. However, the relationship between trust and assurance is significant in nearly all contexts, and especially so in some domains (e.g. safety-critical engineering).</p> <p>Therefore, having clear methods, processes, and tools for communicating assurance and building trust is crucial. And, this is increasingly important in the design, development, and deployment of data-driven technologies.</p>","tags":["Introductory Resource"]},{"location":"learning-modules/archive/what-is-tea/#building-trust-and-communicating-trustworthiness-for-data-driven-technologies","title":"Building Trust and Communicating Trustworthiness for Data-Driven Technologies","text":"<p>Trustworthy and Ethical Assurance could apply to many systems, but the TEA platform specifically addresses data-driven technologies, such as artificial intelligence or digital twins.</p> <p>There are many benefits and risks associated with the design, development, and deployment of data-driven technologies. And, therefore, many organisations and companies find themselves in a situation of needing to communicate to customers, users, or stakeholders how they have maximised the benefits and minimised the risks associated with their product, service, or system.</p> <p>For example, an organisation building an autonomous vehicle may need to explain how their system is safe, secure, fair, explainable, among other goals. How they achieve this will depend on myriad contextual factors, including who they are communicating with (e.g. regulators, potential customers).</p> <p>Consider the goal of safety with respect to the following questions:</p> <ul> <li>How was the performance of the autonomous vehicle evaluated, and how will it   be monitored? There are many metrics that can be used to evaluate the   performance of an autonomous vehicle, including metrics that assess the   performance of components of the vehicle such as the object recognition system   (e.g. its accuracy, robustness, interpretability) as well as metrics that   consider broader societal or environmental impact (e.g. sustainability,   usability and accessibility).</li> <li>Who carried out processes such as failure mode and effects analysis or   stakeholder engagement? Diverse and inclusive teams can help reduce the   likelihood of unintended consequences, especially those that may arise due to   the presence of overlooked biases in the system (e.g. how were trade-offs in   the design process handled and who was consulted).</li> <li>Who will use the system? Whether a system is safe depends, in part, on who   the users are (e.g. trained professionals versus members of the public)\u2014a key   challenge in the area of human factors research.</li> </ul> <p>These are just three examples of how claims made about the safety of a system, in response to a small set of possible questions, are highly contextual. If we were to consider different goals (e.g. fairness, explainability) or different areas of application (e.g. healthcare, defence and security), the types of claims that would be needed to provide assurance for the goal in question could be very different.</p> <p>And yet, in spite of the contextual variation, there are similarities that span the assurance of data-driven technologies, both within and between different domains. There are, for instance, a recurring set of goals (or, principles) that people emphasise when asked about the ethical or societal issues related to data-driven technologies (e.g. fairness and bias, transparency and explainability)<sup>1</sup>. And, furthermore, there is a growing set of techniques and practices in place for building trust through open, transparent and accessible forms of communication <sup>2</sup>.</p> <p>Trustworthy and ethical assurance is a framework that is anchored in these similarities and existing techniques, but also recognises the importance of understanding variation and difference. At the centre of this framework is a methodology and tool for building assurance cases. These assurance cases communicate how some ethical goal has been established within the context of the design, development, or deployment of a data-driven technology. The methodology serves as a guide for developing the cases, while the platform helps to build and communicate them with the wider community or stakeholders.</p> <p>The remaining parts of this section provide further context to help situate and motivate trustworthy and ethical assurance. However, if you'd prefer to jump straight in, you can jump to our user guidance section instead.</p> <ol> <li> <p>Floridi, L., &amp; Cowls, J. (2019). A Unified Framework of Five Principles for AI in Society. Harvard Data Science Review, 1(1). https://doi.org/10.1162/99608f92.8cd550d1 \u21a9</p> </li> <li> <p>The Turing Way Community. (2022). The Turing Way: A handbook for reproducible, ethical and collaborative research. Zenodo. doi: 10.5281/zenodo.3233853.\u00a0\u21a9</p> </li> </ol>","tags":["Introductory Resource"]},{"location":"learning-modules/other-resources/","title":"Other Learning Resources","text":"<p>The following additional learning resources are currently available and can be read in any order:</p> <ul> <li>An Introduction to the Assurance Ecosystem: a short module based on guidance produced by the UKs Department for Science and Innovation and Technology</li> <li>Standards and their role in assurance: a short introduction produced by the AI Standards Hub, regarding the connection between standards and trustworthy and ethical asssurance.</li> </ul>"},{"location":"learning-modules/other-resources/assurance-ecosystem/","title":"Understanding the Assurance Ecosystem","text":"<p>In 2021, the UK Government's Centre for Data Ethics and Innovation released their AI Assurance Roadmap. This publication set an agenda and series of recommendations for how to build and govern an effective AI Assurance ecosystem.</p> <p>In the context of AI, we can think of an assurance ecosystem as the framework or environment that encompasses the methods, tools, roles, responsibilities, stakeholders (and relationships between them) that collectively work towards ensuring AI systems are designed, developed, deployed, and used in a trustworthy and ethical manner. As such, it is an emerging concept, which is currently only loosely defined but can, nevertheless, help us address the challenges posed by AI technologies and maximise their opportunities.</p> <p>CDEI's AI Assurance Guide</p> <p>The following is based on and adapted from the Centre for Data Ethics and Innovation's AI Assurance Guide, which extends their original roadmap and seeks to clarify the scope of an assurance ecosystem as it pertains to AI. We consider some of the core concepts of the CDEI's guide, focusing on the parts that are relevant to the TEA platform. For further information, please visit their site: https://cdeiuk.github.io/ai-assurance-guide/</p>","tags":["Introductory Resource"]},{"location":"learning-modules/other-resources/assurance-ecosystem/#why-is-assurance-important","title":"Why is Assurance Important","text":"<p>Data-driven technologies, such as artificial intelligence, have a complex lifecycle. In some cases, this complexity is further heightened by the scale at which a system is deployed (e.g. social media platforms with international reach).</p> <p>The scale and complexity of certain data-driven technologies has already been clearly communicated by others, such as this excellent infographic from the AI Now Institute showing the many societal impacts and touch points that occur in the development of Amazon\u2019s smart speaker. Therefore, it is not necessary to revisit this point here. However, it is important to explain why this complexity and scale matters for the purpose of trustworthy and ethical assurance. There are three (well-rehearsed) reasons that are salient within the context of the assurance ecosystem:</p> <ol> <li>Complexity: as the complexity of a system increases it becomes harder to    maintain transparency and explainability.</li> <li>Scalability: the risk of harm increases proportional to the scale of a    system, and mechanisms for holding people or organisations accountable become    harder to implement.</li> <li>Autonomous behaviour: where data-driven technologies are used to enable    autonomous behaviour, opportunities for responsible human oversight are    reduced.</li> </ol>","tags":["Introductory Resource"]},{"location":"learning-modules/other-resources/assurance-ecosystem/#justified-trust","title":"Justified Trust","text":"<p>As discussed at the start of this section, assurance is about building trust.</p> <p>But there is a further concept, related to trust, which is vital for assurance: trustworthiness.</p> <p>As the CDEI's guide acknowledges:</p> <p>\"when we talk about trustworthiness, we mean whether something is deserving of people\u2019s trust. On the other hand, when we talk about trust, we mean whether something is actually trusted by someone, which might be the case even if it is not in fact trustworthy.\" A successful relationship built on justified trust requires both trust and trustworthiness: Trust without trustworthiness = misplaced trust. If we trust technology, or the organisations deploying a technology when they are not in fact trustworthy, we incur potential risks by misplacing our trust. Trustworthy but not trusted = (unjustified) mistrust. If we fail to trust a technology or organisation which is in fact trustworthy, we incur the opportunity costs of not using good technology.</p> <p></p> <p>The concept of justified trust is, understandably, an integral part of trustworthy and ethical assurance.</p> <p>We can turn to the moral philosopher, Onora O\u2019Neill, for a clear articulation of why this is so,</p> <p>\u201c[...] if we want a society in which placing trust is feasible we need to look for ways in which we can actively check one another\u2019s claims.</p> <p>But, she continues,</p> <p>\u201c[...] active checking of information is pretty hard for many of us. Unqualified trust is then understandably rather scarce.\u201d</p> <p>The CDEI's Assurance guide identifies two problems that help explain why active checking is challenging:</p> <ul> <li>An information problem: organisations face difficulties in continuously   evaluating AI systems and acquiring the evidence base that helps establish   whether a system is trustworthy (i.e. whether users or stakeholders should   place trust in the system)</li> <li>A communication problem: once they have established the trustworthiness of   the system, there are additional challenges to communicate this to relevant   stakeholders and users such that they trust the claims being made.</li> </ul> <p>An effective assurance ecosystem should help actors overcome these issues to establish justified trust. Let's take a look at some of the key actors in an assurance ecosystem.</p>","tags":["Introductory Resource"]},{"location":"learning-modules/other-resources/assurance-ecosystem/#key-actors-roles-and-responsibilites","title":"Key Actors, Roles, and Responsibilites","text":"<p>AI is often described as sociotechnical. Here, the term \"sociotechnical\" is used to emphasise how the design, development, deployment, and use of AI is deeply intertwined with social systems and practices, and influenced by a wide array of human and organisational factors. Because of this, any list of actors, and their various roles and responsibilities will fall short in a number of dimensions. However, the following graphic provides us with a good starting point for understanding the key actors in an assurance ecosystem.</p> <p> Figure 2. Key actors in the AI Assurance Ecosystem. Reprinted from CDEI (2023) AI Assurance Guide. https://cdeiuk.github.io/ai-assurance-guide/needs-and-responsibilities</p> <p>As the diagram depicts, certain actors have a direct influence into the supply chain for AI systems. These are known as 'assurance users'. For instance, organisations may have dedicated teams internally who are responsible for quality assurance of products or services (e.g. compliance with safety standards, adherence to data privacy and protection legislation). However, there is a growing marketplace of independent 'assurance service providers' who offer consultancy or services to other companies or organisations.<sup>1</sup></p> <p>These users and providers are further supported by structures including governments, regulators, standards bodies, and accreditation/professional bodies. That is, the relationship between users and provides does not operate in a vacuum, but within a complex environment of legislation, regulation, and general norms and best practices.</p> <p>This is a helpful starting point for gaining some purchase on the complex set of interacting roles and responsibilities that collectively make up what is admittedly a hard to delineate assurance ecosystem. Because the TEA platform emphasises the importance of ethical reflection and deliberation, the resources and materials are likely to be of specific interest to the following actors:</p> <ul> <li>Researchers</li> <li>Journalists/Activists</li> <li>Internal Assurance Teams</li> <li>Developers</li> <li>Frontline User</li> <li>Affected Individuals</li> </ul>","tags":["Introductory Resource"]},{"location":"learning-modules/other-resources/assurance-ecosystem/#assuring-different-subject-matter","title":"Assuring different subject matter","text":"<p>Whether someone needs to build confidence in the trustworthiness of different products, systems, processes, organisations or people will influence the type of information required, and the techniques required to provide assurance. This is because different products, systems, processes, organisations and people have different aspects that affect their trustworthiness i.e. they have different assurance subject matters.</p> <p>Whether a frontline user of a system is confident in using the system will depend on a wide variety of factors. If the system is a medical device, and the frontline user is a healthcare professional, safety and accuracy may be primary concerns. However, if the system is an algorithmic decision-support tool, the frontline user may care more about the explainabilty of the system.</p> <p>Assurance needs, therefore, vary depending on what's being assured\u2014products, systems, processes, organisations, or individuals. Simple products like kettles may have straightforward, measurable assurance criteria, whereas complex systems like AI necessitate nuanced, multi-dimensional assurance approaches due to their varied subject matters like robustness, accuracy, bias, explainability, and others. As previously noted, the complexity of AI arises because of the sociotechnical interactions between technical, organisational, and human factors. Ethical principles such as fairness, privacy, and accountability are intertwined with these interactions, necessitating comprehensive assurance mechanisms.</p> <p>While not specifically designed to address ethical principles, the following diagram from the CDEI's Assurance Guide can help elucidate some of the reasons why trustworthy and ethical assurance can be challenging.</p> <p> Figure 3. A graphic showing the four dimensions of assurance subject matter: unobservable/observable, subjective/objective, ambiguous/explicit, uncertain/certain.</p> <ul> <li>In the context of the TEA platform, the different subject matter represent the   domain of the assurance case, summarised in the top-level goal claim (e.g.   fairness).</li> </ul> <p>To what extent does the TEA methodology and platform align with the CDEI's 5 elements of assurance: https://cdeiuk.github.io/ai-assurance-guide/five-elements \u2192</p> <ol> <li> <p>For example, Credo AI offer a paid-for service that comprises an interactive dashboard and set of tools to help companies comply with existing and emerging policies and regulation. Whereas, other organisations, such as the Ada Lovelace Institute have developed open-source tools for teams to implement within their own projects.\u00a0\u21a9</p> </li> </ol>","tags":["Introductory Resource"]},{"location":"learning-modules/other-resources/standards/","title":"Standards and their role in assurance","text":"<p>AI Standards Hub</p> <p>This guidance has been co-produced alongside the AI Standards Hub\u2014a UK initiative dedicated to the evolving and international field of standardisation for AI technologies, hosted at the Alan Turing Institute and supported by BSI, NPL, and HM Government.</p>"},{"location":"learning-modules/other-resources/standards/#what-are-standards","title":"What are standards?","text":"<p>A 'standard' can be described as rules, norms or guidelines, that are established for application within certain contexts and settings. They are crafted to establish a dependable foundation for cultivating collective expectations concerning a product, process, service, or system as part of governance and assurance frameworks. We see examples of their implementation in industry, academia, professions, product development and service delivery.</p> <p>Standards are developed in a variety of ways, although the best-practice approach to their formation and the most widely accepted are essentially standards crafted through consensus-building processes. These standards can be developed and led by, for example, academic institutions, international bodies, professional associations, industry, or most commonly, formally recognised Standards Development Organisations (SDOs)<sup>1</sup></p> <p>Standards developed by SDOs are often referred to as 'technical standards'. These standards are developed by stakeholder-driven processes that are guided by principles such as relevance, transparency, and consensus. Standards on the whole are voluntary but can be formally recognised in regulations and international treaties, especially those developed by SDOs. Furthermore, they can be tools used as part of compliance towards governance and assurance frameworks.</p> <p>Standards can be in a variety of forms but commonly are established and disseminated as documents approved by a recognised body. They provide common and repeatable rules, requirements, norms, guidelines and characteristics for activities that will lead to their associated outcomes; and are aimed at providing 'optimum degree of order'<sup>2</sup> in the contexts where they are applied.</p>"},{"location":"learning-modules/other-resources/standards/#different-types-of-standards","title":"Different types of standards","text":"<p>Standards find application across diverse domains and sectors. They serve to encode technical specifications related to the design, development, measurement, or performance; of products and systems. Additionally, standards extend their influence to evaluating the impacts or efficiency of broader processes or services.</p> <p>While some standards are uncomplicated, offering clear metric definitions (e.g. the standardised format of A4 and related paper sizes adopted globally), others offer guidance on intricate, context-specific processes.</p> <p>Below are some of the categories of standards available.</p> <p>Types of Standards</p> <ul> <li>Foundational and terminological</li> <li>Process, management, and governance</li> <li>Measurement and test methods</li> <li>Product and performance requirements</li> <li>Interface and architecture</li> </ul>"},{"location":"learning-modules/other-resources/standards/#foundational-and-terminological","title":"Foundational and terminological","text":"<p>Foundational and terminological standards provide shared vocabularies, terms, concepts, descriptions and definitions, enabling effective communication and fostering collaboration between stakeholders on a given shared area of interest. They help improve understanding between stakeholders through the shared common language at their disposal by setting out agreed-upon terms and definitions. These standards often form the baseline language utilised in other standards supporting their development and forming bilateral relationships.</p> <p>:::success Examples</p> <ul> <li>ISO/IEC 22989 BS ISO/IEC 22989:2022 Information technology \u2013 Artificial intelligence \u2013 Artificial intelligence concepts and terminology<ul> <li>This document establishes terminology for AI and describes concepts in the field of AI. This document can be used in the development of other standards and in support of communications among diverse, interested parties or stakeholders. This document is applicable to all types of organizations (e.g. commercial enterprises, government agencies, not-for-profit organizations).</li> <li>AI Standards Hub Link</li> </ul> </li> <li>ISO/IEC TS 5723 PD ISO/IEC TS 5723:2022 Trustworthiness \u2013 Vocabulary<ul> <li>This document provides a definition of trustworthiness for systems and their associated services, along with a selected set of their characteristics.</li> <li>AI Standards Hub Link</li> </ul> </li> </ul> <p>:::</p>"},{"location":"learning-modules/other-resources/standards/#process-management-and-governance","title":"Process, management, and governance","text":"<p>Process, management and governance standards play a vital role in guiding organisational processes and approaches, providing a structured framework to help achieve well-defined steps towards their aims and objectives. These standards serve as a cornerstone in governance, offering a systematic foundation for areas such as quality assurance, risk management, management systems, benchmarking, and regulatory compliance. By establishing clear guidelines and best practices, these standards contribute to effective governance practices within an organisation. They not only enhance the efficiency and consistency of processes but also ensure that organisational activities align with industry benchmarks and comply with relevant regulations. These standards become essential tools in fostering transparency, accountability, and overall excellence in organisational performance.</p> <p>:::success Examples</p> <ul> <li> <p>ISO/IEC FDIS 42001:2023 Information technology \u2013 Artificial intelligence \u2013 Management system</p> <ul> <li>This standard specifies the requirements and provides guidance for establishing, implementing, maintaining and continually improving an AI management system within the context of an organization. The standard is intended for use by an organization providing or using products or services that utilize AI systems. It is intended to help the organization develop or use AI systems responsibly in pursuing its objectives and meet applicable regulatory requirements, obligations related to interested parties and expectations from them. This standard is applicable to any organization, regardless of size, type and nature, that provides or uses products or services that utilize AI systems.</li> <li>AI Standards Hub Link</li> </ul> </li> <li> <p>DCB0129: Clinical Risk Management: its Application in the Manufacture of Health IT Systems &amp; DCB0160: Clinical Risk Management: its Application in the Deployment and Use of Health IT Systems</p> <ul> <li>These standards form a pair of clinical risk management standards implemented by the NHS which are enforced under section 250 of the Health and Social Care Act 2012 to assure the clinical safety of Health Information Technology (HIT) systems</li> <li>DCB0129 is for organisations who develop and maintain HIT that will be utilised in health and care environments.</li> <li>DCB0160 is for organisations who plan to deploy, use, maintain and decommission HIT systems within health and care environments. :::</li> </ul> </li> </ul>"},{"location":"learning-modules/other-resources/standards/#measurement-and-test-methods","title":"Measurement and test methods","text":"<p>Measurement and test standards are designed to set out repeatable methodologies and requirements to test attributes (e.g., security, safety, etc) of systems which are underpinned by units of measurement and associated metrics for performance and testing standards. These standards ensure specified thresholds have been achieved and enable entities applied under their remit to possess trustworthiness qualities. For communication amongst stakeholders, these standards provide clarity and a shared understanding of tests and measurement requirements, enabling precise and meaningful communication across discrete sectors, domains and scientific disciplines, whose tests and measurement requirements differ. The aviation industry is one example where they are relied upon to achieve acceptably safe and trustworthy aircraft.</p> <p>:::success Examples</p> <ul> <li> <p>ISO/IEC TS 4213:2022 - Assessment of machine learning classification performance</p> <ul> <li>This document specifies methodologies for measuring classification performance of machine learning models, systems and algorithms.</li> <li>AI Standards Hub Link</li> <li> <p>IEEE 2937-2022 - Performance Benchmarking for Artificial Intelligence Server Systems</p> </li> <li> <p>'AI computing differs from generic computing in terms of device formation, operators, and usage. AI server systems, including AI server, cluster, and high-performance computing (HPC) infrastructures are designed specifically for this purpose. The performance of these infrastructures is important to users not only on generic models but also on the ones for specific domains. Formal methods for the performance benchmarking for AI server systems are provided in this standard, including approaches for test, metrics, and measure. In addition, the technical requirements for benchmarking tools are discussed.'</p> </li> <li>IEEE 2937-2022 :::</li> </ul> </li> </ul>"},{"location":"learning-modules/other-resources/standards/#product-and-performance-requirements","title":"Product and performance requirements","text":"<p>Product and performance standards play a multifaceted role across industries, serving as vital tools for quality assurance, consumer protection, and regulatory compliance. These standards establish specific criteria to ensure that products and services meet defined benchmarks, safeguarding consumers by setting safety and performance requirements. These standards facilitate international trade by their very nature, as they provide a common ground for product specifications, enabling consistency and smooth trade relations between countries. Beyond regulatory requirements, adherence to recognised standards fosters innovation, serving as a foundational reference for research and development efforts. The efficiency and productivity of organisations can significantly be enhanced as these standards streamline processes, reducing errors and improving overall workflow. They also play a crucial role in risk management, helping organisations identify and mitigate potential risks associated with their products and processes. Compliance with standards builds public trust, as consumers are more inclined to rely on products and services adhering to recognised criteria. Additionally, this set of standards contribute to safety assurance, particularly in industries where safety is paramount, by preventing accidents and protecting consumers and users. These standards are instrumental in shaping reliable, safe, and high-quality products, contributing to the advancement and credibility of various industries.</p> <p>:::success Examples</p> <ul> <li> <p>BS ISO/IEC 29155-4:2016 - Systems and software engineering. Information technology project performance benchmarking framework. Guidance for data collection and maintenance</p> <ul> <li>This text provides requirements and guidance pertaining to the collection and maintenance of data for information technology (IT) projects. It serves as a foundational element within the broader context of benchmarking activities under \"the IT project performance benchmarking framework.\"</li> <li>AI Standards Hub Link</li> </ul> </li> <li> <p>ISO 9001:2015 - Quality Management Systems. Requirements</p> <ul> <li>ISO 9001 is an international standard that provides a framework for establishing and maintaining a quality management system. It is a horizontal sector agnostic standard applicable to organisations regardless of their size or the nature of their products or services. While ISO 9001 is not exclusively focused on product development, many organisations adopt it to demonstrate their commitment to quality and to enhance their overall product development and delivery processes.</li> <li>ISO 9001</li> <li>Check with Chris how best to reference :::</li> </ul> </li> </ul>"},{"location":"learning-modules/other-resources/standards/#interface-and-architecture","title":"Interface and architecture","text":"<p>Interface and architecture standards define and describe common protocols, schemas, syntax, design patterns, interfaces and formats which assists towards interoperability, architectural design and data management. These standards play a pivotal role in ensuring seamless communication and collaboration among diverse components within a system or across multiple systems. By defining consistent protocols and formats, these standards enable elements with similar qualities that are not exactly the same, to exchange data and functionality effectively. They are pivotal to a cohesive and integrated environment, where disparate platforms and architectures can work together harmoniously.</p> <p>Additionally, these standards further enhance the reliability and efficiency of information exchange. They provide a structured framework for handling and organizing data, promoting consistency and coherence in the management of information interchange across architectures. In essence, the combination of interoperability, infrastructure, architecture, and data management and compatibility standards establishes a robust foundation for the seamless interaction of elements within complex systems, facilitating efficient data exchange and enhancing overall system performance.</p> <p>:::success Examples</p> <ul> <li> <p>IEEE 2941: Standard for Artificial Intelligence (AI) Model Representation, Compression, Distribution, and Management</p> <ul> <li>The AI development interface, AI model interoperable representation, coding format, and model encapsulated format for efficient AI model inference, storage, distribution, and management are discussed in this standard.</li> <li>AI Standards Hub Link</li> </ul> </li> <li> <p>HTML (HyperText Markup Language)</p> <ul> <li>A standard developed and maintained by the World Wide Web Consortium (W3C) and Web Hypertext Application Technology Working Group (WHATWG) to serve as a markup language for structuring and presenting content on the world wide web, providing a standardised and interoperable format for creating web pages and applications.</li> <li>HTML - Living Standard</li> </ul> </li> </ul> <p>:::</p>"},{"location":"learning-modules/other-resources/standards/#functions-and-benefits-of-standards","title":"Functions and benefits of standards","text":"<p>Standards, as functional tools, can play a pivotal role in realising a wide array of benefits across many domains and sectors. They ensure consistency and uniformity; provide a common language and set of guidelines for processes, products, or services; and help to systematically manage risks and unlock potential. This consistency enhances communication, reduces misunderstandings, creates trust and fosters a shared understanding among stakeholders. They are increasingly relied upon when implementing assurance frameworks to provide the specificity required to assure the quality and safety. This leads to increased efficiency and innovative edge to stay current and competitive in the global marketplace.</p> <p>The following headings highlight the functions and benefits in more detail:</p> <ul> <li>Assurance, risks, and trust</li> <li>Knowledge and technology diffusion</li> <li>Standards as compliance tools</li> </ul>"},{"location":"learning-modules/other-resources/standards/#assurance-risks-and-trust","title":"Assurance, risks, and trust","text":"<p>The paramount concern for organisations engaged in technology production is the safety and quality of their products. This concern extends to the individuals who adopt, use, and are affected by these technologies. Standards serve as a cornerstone, enabling organisations to attain high-quality products and effectively manage associated risks by integrating them into their assurance systems. These standards become integral components of conformity assessments, allowing organisations to demonstrate that their technologies and services not only meet safety, ethical, and legal requirements but also contribute to enhancing their reputation and fostering public trust. Noteworthy examples like DCB 0129/0160 exemplify how standards, such as those integrated into the clinical safety assurance framework of the NHS in England, play a pivotal role in upholding safety standards and ensuring the quality of technologies within the healthcare sector.</p> <p>By establishing benchmarks for the quality of products, services, or processes, standards help organisations maintain high standards of excellence. Consumers, in turn, gain confidence in products that adhere to recognised standards, knowing that they meet specified criteria for safety, reliability, and performance. Additionally, standards contribute to cost savings and efficiency by streamlining processes, reducing errors, and optimising resource utilisation.</p>"},{"location":"learning-modules/other-resources/standards/#knowledge-and-technology-diffusion","title":"Knowledge and technology diffusion","text":"<p>Standards and their development processes provide an infrastructure for the transfer of knowledge and technology within society and the economy. The consensus-building processes inherent in standards development are particularly noteworthy, as they facilitate the translation of research and best practices into accessible, practical guidance. Furthermore, through these consensus-building processes, standards development forums bring together experts, stakeholders, and representatives from various sectors. This collaborative effort ensures that a broad spectrum of perspectives is considered, leading to the creation of standards that reflect a shared understanding of best practices. As a result, organisations can leverage these standards to enhance their operational processes and bring products to market that demonstrate trustworthy properties.</p> <p>By bridging the gap between research and practical application, standards become instrumental in driving improvements in operational efficiency and the overall quality of products entering the commercial sphere. They provide a structured pathway for the integration of advancements from diverse fields into the fabric of everyday operations, ultimately contributing to the advancement of technology, innovation, and the betterment of society and the economy at large.</p>"},{"location":"learning-modules/other-resources/standards/#standards-as-compliance-tools","title":"Standards as compliance tools","text":"<p>Certain standards are explicitly endorsed by regulatory authorities as essential tools for organisations to meet the requirements outlined in regulations. In the UKs regulatory framework, relevant Secretaries of State have the authority to 'designate' specific standards for the purpose of regulatory conformity. When a standard is officially designated by the government, its adoption carries a significant weight\u2014it essentially presumes that organisations adhering to this standard are in compliance with the pertinent aspects of regional regulations. In essence, organisations that have followed a designated standard are presumed to be in compliant with the relevant regulatory requirements. This mechanism mirrors similar practices in other jurisdictions, such as the European Union (EU), where 'harmonised' standards play an analogous role in establishing and ensuring regulatory conformity.</p>"},{"location":"learning-modules/other-resources/standards/#standards-and-trustworthy-and-ethical-assurance","title":"Standards and Trustworthy and Ethical Assurance","text":"<p>With the types of standards and their functions and benefits now outlined, we can also ask 'what role do standards have in the TEA framework'? And, what other connections are there between TEA and standards?</p> Reminder of the Types of Standards <ul> <li>Foundational and terminological</li> <li>Interface and architecture</li> <li>Measurement and test methods</li> <li>Process, management, and governance</li> <li>Product and performance requirements</li> </ul> <p>Using the types of standards as a reference, we can identify the following roles for standards in the TEA framework:<sup>3</sup></p>"},{"location":"learning-modules/other-resources/standards/#supporting-development-of-assurance-case-structure","title":"Supporting development of assurance case structure","text":"<p>Several types of standards can support the development of an assurance case's structure. For instance, <code>foundational and terminological</code> standards can be useful for identifying core attributes for a top-level goal claim, which in turn would allow a project team to develop strategies for each of the core attributes. And, <code>process, management, and governance</code> standards could help a team or organisation develop a project governance plan that integrates considerations of the iterative development of an assurance case (e.g. ML safety requirements as set out in the AMLAS guidance<sup>4</sup>). These standards can also ensure that the assurance case adheres to industry best practices, thereby enhancing its credibility and acceptance.</p>"},{"location":"learning-modules/other-resources/standards/#evidential-grounding-and-justification-of-property-claims","title":"Evidential grounding and justification of property claims","text":"<p>Property claims require evidential grounding. That is, the validity of a claim needs to be justified by connecting the claim to evidence through a <code>supported by</code> link (see guidance). But how does a project team or organisation know which evidence to select, and whether it is sufficient to justify the claims being made? This is where standards can provide useful support?</p> <p>For instance, <code>measurement and test methods</code> and <code>product and performance requirements</code> standards are crucial for determining whether a system meets the required performance levels. They can also help set out criteria or benchmarks for determining which forms of evidence are sufficient (e.g. objective and quantitative criteria for compliance) or how the evidence should be gathered, documented, and managed (e.g. communication of uncertainty when dealing with probabilistic evidence).</p> <p>The Use of Artificial Intelligence in Health Care: Trustworthiness (ANSI/CTA-2090)</p> <p>ANSI/CTA-2090 is one example of a standard that sets out requirements for several core attributes related to human, technical, and regulatory trust. For instance, their approach to bias includes (but is not limited to) the following requirements for the model developer and owner of the AI solution:</p> <pre><code>- Determine if the existing data set are \u201craw\u201d data or pre-processed data.\n- For pre-processed data, find out what kind(s) of pre-processing has been performed so that the same preprocessing software/method can be applied to the input data during inference.\n- If there is need to capture additional new data, it is important to know how the existing data was collected (e.g., hardware/sensor, environment condition) so that the new data can be collected under similar conditions.\n- When combining or joining multiple existing data sets:\n    - Learn and/or model the bias for each data set.\n    - Mitigate or undo the associated bias from each data set.\n    - Find out the commonalities to all the data sets (e.g., through modeling) to achieve cross-dataset generalization.\n- When splitting a collected data set into training, validation, and testing datasets, make sure each of them is randomly selected by applying certain techniques (e.g., data shuffling with a random number generator). By doing so, it can reduce the potential bias introduced in this process.\n</code></pre>"},{"location":"learning-modules/other-resources/standards/#building-trust-among-stakeholders","title":"Building trust among stakeholders","text":"<p>For systems that interact with other systems or operate within a larger ecosystem, <code>process, management, and governance</code> standards can ensure compatibility or interoperability of data. This can be vital in situations where groups of stakeholders are making choice about whether to invest or interact with a specific ecosystem or platform (e.g. digital twins). Here, providing assurance (through reference to an accepted standard) can build confidence among the stakeholders (or possible stakeholders) within the ecosystem. Such an example extends beyond goals such as interoperability though. Concerns such as data quality, security and privacy, liability and accountability, can also impact the trustworthiness of a system. As such, communication through structured assurance cases that reference key standards can help build trust.</p>"},{"location":"learning-modules/other-resources/standards/#knowledge-transfer-and-consensus-formation","title":"Knowledge transfer and consensus formation","text":"<p>Where standards exist at an early (and perhaps incomplete) stage of development, or perhaps do not exist at all (e.g. when dealing with novel data-driven technologies), assurance cases can serve as a useful reference for how different teams and sectors understand sufficiency and justifiability. Consider a situation where an assurance claim regarding a property of a system cannot be sufficiently evidenced. This does not necessarily mean it is false. Rather, it could indicate a gap where standards do not yet exist. In this sense, open assurance cases can support the formation of consensus and the development of best practices and community-based standards.</p> <p>For instance, several teams within a shared community of practice (e.g. explainability of AI systems for environmental science) may choose to share their assurance cases with each other through structured knowledge share events (e.g. workshops). In doing so, they could identify common claims that depend on the same forms of <code>evaluative</code> evidence (e.g. usability testing and related human factors research). Furthermore, they may be able to identify areas where their design choices will limit <code>interoperability</code> in the broader ecosystem, and on this basis revisit their system requirements.</p> <p>Further Resources</p> <p>For more information on standards, see the following resources:</p> <ul> <li>The AI Standards Hub has a range of training materials included in their training database: https://aistandardshub.org/training-search/</li> <li>The British Standards Institute (BSI) has a knowledge base with articles and news related to a wide array of standards: https://knowledge.bsigroup.com/</li> </ul> <ol> <li> <p>AI Standards Hub. 1.Introducing AI Standards. 2022.  https://aistandardshub.org/resource/main-training-page-example/1-what-are-standards/.\u00a0\u21a9</p> </li> <li> <p>International Standards Organisation. 1. Standards in our world. ISO. https://www.iso.org/sites/ConsumersStandards/1_standards.html \u21a9</p> </li> <li> <p>Standards may also have additional roles in the context of the broader assurance ecosystem.\u00a0\u21a9</p> </li> <li> <p>Hawkins, R., Paterson, C., Picardi, C., Jia, Y., Calinescu, R., &amp; Habli, I. (2021). Guidance on the Assurance of Machine Learning in Autonomous Systems (AMLAS). University of York. https://www.york.ac.uk/media/assuring-autonomy/documents/AMLASv1.1.pdf \u21a9</p> </li> </ol>"},{"location":"learning-modules/tea-expert/","title":"TEA Expert","text":"<p>Notice</p> <p>This is the TEA expert module. This module assumes you are familiar with trustworthy and ethical assurance (or argument-based assurance) and have completed the previous two modules:</p> <ol> <li>TEA Trainee</li> <li>TEA Specialist</li> </ol>"},{"location":"learning-modules/tea-expert/#learning-objectives","title":"Learning Objectives","text":"<p>Coming soon.</p>"},{"location":"learning-modules/tea-expert/#table-of-contents","title":"Table of Contents","text":"<p>Coming soon.</p>"},{"location":"learning-modules/tea-specialist/","title":"TEA Specialist","text":"<p>Notice</p> <p>This is the TEA specialist module. This module assumes you are familiar with trustworthy and ethical assurance (or argument-based assurance) and have completed the previous module:</p> <ol> <li>TEA Trainee</li> </ol>"},{"location":"learning-modules/tea-specialist/#learning-objectives","title":"Learning Objectives","text":"<p>Coming soon.</p>"},{"location":"learning-modules/tea-specialist/#table-of-contents","title":"Table of Contents","text":"<p>Coming soon.</p>"},{"location":"learning-modules/tea-trainee/","title":"TEA Trainee","text":"<p>Notice</p> <p>This is the TEA trainee module. If you are new to the TEA platform, this is the right place to be.</p>"},{"location":"learning-modules/tea-trainee/#learning-objectives","title":"Learning Objectives","text":"<p>This module has the following learning objectives:</p> <ul> <li>Help new users learn about and understand the methodology that underpins the TEA platform.</li> <li>Show users the basic functionality of the TEA platform, to allow them to start building or reviewing assurance cases.</li> <li>Exploring some of the motivation and rationale for trustworthy and ethical assurance.</li> <li>Reviewing how some of the TEA platform features help establish a multi-disciplinary and multi-sector community of practice.</li> </ul>"},{"location":"learning-modules/tea-trainee/#table-of-contents","title":"Table of Contents","text":"<p>This is a structured module and should be completed in the following order:</p> <ol> <li>Pouring Your First Cup of TEA: An Introduction to Trustworthy and Ethical Assurance: an introduction to TEA, including an explanation of the underlying methodology and core elements.</li> <li>Taking a sip of TEA: How to Build an Assurance Case with the TEA Platform: a walkthrough of the TEA platform, showing new users how to build an assurance case.</li> <li>Letting the TEA steep: Putting Principles into Practice: a deeper dive into the process of building an assurance case, with an emphasis on reflection, deliberation, and justification.</li> <li>Enjoying TEA with others: Collaborating and sharing knowledge: getting more from the TEA platform by engaging the community.</li> </ol>"},{"location":"learning-modules/tea-trainee/first-cup/","title":"Pouring Your First Cup of TEA: An Introduction to Trustworthy and Ethical Assurance","text":"<p>Assurance is a process of building trust by clearly communicating the rationale behind why a decision or set of actions were taken.</p> <p>Consider the following scenario.</p> <p>You are in the market for a new car and go to a local dealership. One of the sales advisors recommends a particular car and talks to you about the various benefits of the vehicle, including an emphasis on its reliability. You buy the car based on the advisor's recommendations and drive it home.</p> <p>However, in less than a week it turns out to have an issue with the engine. Frustrated, you take the car back to the dealership, and the sales advisor apologises for the inconvenience. They explain that all their cars undergo a thorough assessment before they are delivered to the dealership and reassures you that they are reliable. Nevertheless, the advisor agrees to get you a replacement vehicle. Reassured, you drive this new car home.</p> <p>Later on, the car turns out to have another problem with the engine... the same problem as before! The sales advisor tries to convince you that this is just a series of unlucky incidents, but without clear evidence to support their claim (and two instances of counter-evidence) you are not convinced, demand a refund, and take your business elsewhere.</p> <p>In this scenario, we can see how everyday forms of assurance involve providing evidence to help someone understand and evaluate the trustworthiness of a claim (or series of claims) being made about a system, service, product, or technology. The relationship between these claims and evidence constitute an argument, or a case. For example, an argument for a car's reliability, or a case put forward by a lawyer in court, based on evidence, to support a claim about a defendant's innocence.</p> <p>The relationship between arguments, claims, and evidence is important. As Tim Kelly (1998) stated in his influential doctoral thesis on argument-based assurance (original quote adapted):</p> <p>An argument without supporting evidence is unfounded, and therefore unconvincing. And, evidence without argument is unexplained\u2014it can be unclear how goals or objectives have been satisfied.</p> <p>In the above example, the sales advisor made claims about their cars being reliable and thoroughly assessed prior to sales, but these claims were not backed up by convincing evidence and were in fact undermined by the contrary evidence (i.e. two unreliable cars).</p> <p>The relationship between trust and assurance is significant in nearly all contexts, and particularly in safety-critical domains (e.g. health, energy, manufacturing). Therefore, having accessible and effective methods, processes, and tools for providing trustworthy forms of assurance to stakeholders and users is crucial. This is where Trustworthy and Ethical Assurance (TEA) comes in.</p>","tags":["learning-modules"]},{"location":"learning-modules/tea-trainee/first-cup/#what-is-trustworthy-and-ethical-assurance","title":"What is Trustworthy and Ethical Assurance?","text":"<p>Trustworthy and Ethical Assurance (or TEA) is a method and platform that has been developed to help project teams provide clear and accessible forms of assurance for their technology or system (e.g. a digital twin or AI system).</p> <p>Like the previous example, this could be that their system is reliable but it could also be related to some other assurance goal, such as safety, security, fairness, or explainability. However, TEA is neutral with respect to any particular goal. What is important is simply that the goal is assured by presenting a clear and structured argument, which establishes how a set of claims, linked to relevant forms of evidence, collectively justify the truth of the respective goal.</p> <p>As a definition:</p> <p>Trustworthy and ethical assurance (TEA) is a process of using structured argumentation to clearly demonstrate how a set of claims about some goal of a system are warranted, given the available evidence.</p> <p>This emphasis on a structured argument means that TEA is a type of argument-based assurance. The term 'argument-based assurance' refers to the process of building and presenting a reasoned and justified argument for the truth of some top-level claim (i.e. a goal claim). And, a document that sets out this argument is known as an assurance case.</p> <p>Types of Assurance Case</p> <p>We can refer to an assurance case that presents an argument in support of a top-level goal that is focused on safety considerations as a safety case. Alternatively, if we are interested in assuring the fairness of a system as a fairness case, and so on for other types of goals or principles (e.g. explainability, security). We will refer to generic cases without a pre-specified goal as simply an assurance case.</p> <p>Let's look at the core elements that make up an assurance case.</p>","tags":["learning-modules"]},{"location":"learning-modules/tea-trainee/first-cup/#core-elements-of-an-assurance-case","title":"Core Elements of an Assurance Case","text":"<p>All assurance cases in the TEA platform contain the following core elements, depicted in Figure 1.</p> <p></p> <p>Figure 1\u2014the core elements of an assurance case for the TEA platform.</p> <p>Let's look at each of these elements in turn.</p>","tags":["learning-modules"]},{"location":"learning-modules/tea-trainee/first-cup/#goal-claim","title":"Goal Claim","text":"<p>A goal claim serves to direct the focus of an assurance case towards a particular value or principle that is taken to be desirable, normative, or otherwise significant. The content of the goal claim chosen will determine the set of lower-level property claims and evidence that are relevant and necessary for the overall assurance case. For instance, the set of claims and evidence needed to demonstrate that a service is 'secure', or that an algorithmic decision-making system is 'fair' may be quite different. As such, a goal claim should be the first element established when building an assurance case (even if it is subsequently revised or updated). For this reason, we sometimes refer to a goal element as the top-level goal claim to indicate that it is the primary focus for an assurance case.</p> <p>Consider the example goal claim in Figure 2.</p> <p></p> <p>Figure 2\u2014An example goal claim focused on explainability.</p> <p>Putting aside the issue of what this AI system is or does for a moment, it should be clear that providing assurance for such a high-level goal will not be easy given the way in which the goal is currently formulated. Simply put, it's not clear what is meant by \"explainable\". There are many questions that one could ask here:</p> <ul> <li>Who are the outputs or behaviours of the system explainable to? Experts or lay people?</li> <li>Which techniques have been used to allow users to interpret the model's outcomes?</li> <li>Can decisions be contested if a user is not satisfied with an automated explanation?</li> <li>Is any information presented about the uncertainty of the system's predictions?</li> </ul> <p>To address these questions, we need to add more specificity and structure. This is where , the next set of elements, property claims come in.</p> <p>Multiple Goals and Modular Arguments</p> <p>In this section, we only discuss arguments with a single goal. However, nested (or, modular) assurance cases can also be developed where multiple goal claims serve as sub-claims into a broader argument that subsumes the lower-level arguments.</p>","tags":["learning-modules"]},{"location":"learning-modules/tea-trainee/first-cup/#property-claims","title":"Property Claims","text":"<p>Property claims are lower-level claims made about some specific property of a system, or perhaps about the project that developed the respective system. In one respect, property claims can be treated as lower-level goal claims<sup>1</sup>. Like a top-level goal claim, they are also propositions that require justification. However, while an assurance case may only have one top-level goal claim<sup>2</sup>, it will have many property claims.</p> <p>Collectively, the set of property claims serve to establish the central argument for how a goal claim has been established by detailing properties of a project or the system that help justify why the top-level goal is likely to be true. Let's add some to the above goal claim, as shown in Figure 3.</p> <p></p> <p>Figure 3\u2014an example assurance case showing a goal claim focused on explainability, with several property claims attached.</p> <p>Identifying the necessary and sufficient set of property claims needed to support an argument can be challenging. In later sections, we will look at how this process can be made easier. For now, let's look at an element that supports this task by adding additional structure (or, scaffolding) to the argument.</p> <p>Claims as Propositions</p> <p>As you can see, there are two types of claims in TEA:</p> <ul> <li>Top-Level Goal Claim</li> <li>Property Claims</li> </ul> <p>Both types of claims can be thought of as propositions. In the context of an assurance case, it is important that the goal and property claims are formulated as propositions as they enable us to determine what is being claimed and whether the argument and evidence are sufficient to establish the truth of the top-level goal claim or lower-level property claims. In most instances, the claims in an assurance case will be most similar to (5), and not, say, like the logical or mathematical truths (2) and (3). That is a statement that may be true or false. Examples of propositions include:</p> <ol> <li>All swans are white (falsifiable)</li> <li>All bachelors are unmarried (true by definition)</li> <li>The square root of 9 is 3 (mathematical truth)</li> <li>Water boils at 100\u00b0C (true under certain conditions)</li> <li>The AI system does not create discriminatory outcomes (empirical claim that could be contested)</li> </ol>","tags":["learning-modules"]},{"location":"learning-modules/tea-trainee/first-cup/#strategy","title":"Strategy","text":"<p>Understanding how a goal claim is jointly supported and specified by the constituent property claims can be challenging without additional structure. This is where strategy elements can be useful.</p> <p>A strategy element helps to make clear the reasoning or approach taken to develop the overarching argument in support of the goal claim (or higher-level property claim). Unlike goal claims and property claims, however, strategy elements simply provide scaffolding (or a blueprint of sorts) for how the team plan to demonstrate that a certain goal or claim is met by breaking it up into sub-arguments. Let's consider our running example again.</p> <p></p> <p>Figure 4\u2014an example assurance case with additional structure elements to help scaffold the argument and organise claims into sub-arguments.</p> <p>There are several benefits to making the over-arching argument's strategy explicit:</p> <ul> <li>Guiding the argument: during iterative development, the set of strategy elements serve as placeholders that the project team can use to break down the complex task of decomposing goals. And, during communication, they can serve as a clear roadmap to help other stakeholders understand and follow their reasoning.</li> <li>Facilitating engagement and evaluation: external reviewers or stakeholders may wish to engage with or evaluate an assurance case, at different stages of development (e.g. during project development or compliance/auditing of the system). Understanding the strategy chosen by the project team is can help wider stakeholders assess whether the presented evidence is sufficient, if there are gaps in the argument, and, ultimately, help the project team and wider community develop more robust standards and best practices.</li> <li>Clarifying case relationships: strategy elements can connect multiple elements, such as goal claims to more detailed property claims. Leveraging this hierarchical structure ensures that all claims are supported by well-thought-out process of reasoning and deliberation, and can also help a project team identify relevant evidence to ground the overarching argument.</li> </ul> <p>Let's now turn to consider evidence in more detail.</p>","tags":["learning-modules"]},{"location":"learning-modules/tea-trainee/first-cup/#evidence","title":"Evidence","text":"<p>Evidence is what grounds an assurance case. Recall the quotation from earlier:</p> <p>An argument without supporting evidence is unfounded, and therefore unconvincing. (Kelly, 1998)</p> <p>Whereas goals orient and direct an argument, strategies help scaffold the logic of an argument, and property claims help specify and establish an argument, evidence is what provides the basis for trusting the validity of the case as a whole. As the foundation of an assurance case, evidence is crucial!</p> <p>The types of evidence that need to be communicated will depend on the claims being put forward. For instance, if a claim is made about the attitudes of users towards some system, then findings from a workshop or survey that explored these attitudes may be needed. Alternatively, if the claim is about a model's performance exceeding some threshold, then evidence about the test will be needed (e.g. benchmarking scores and methodology).</p> <p>Let's look at a single branch of our running example, focusing on <code>S1</code>. We can expand the set of property claims for this strategy and consider what sorts of evidence may be suitable.</p> <p></p> <p>Figure 5\u2014a partial view of an assurance case, focusing on a branch for a single strategy.</p> <p>Similar to a legal case, where evidence needs to be admissible, relevant, and reliable, there are also standards for which types of evidence are appropriate in a given context. In some cases, technical standards may exist that can help bolster the trustworthiness of an argument, by allowing a project team to show how their actions adhere to standards set by an external community. In other cases, consensus may only emerge through the communication and evaluation of the evidence itself.</p> <p>One final element remains to discuss: context. And, as many philosophers are keen to point out, a lot can depend on the context.</p>","tags":["learning-modules"]},{"location":"learning-modules/tea-trainee/first-cup/#context","title":"Context","text":"<p>In TEA, the context for an assurance case is made explicit by using context elements. For instance, consider the following two examples:</p> <p>Example 1 </p> <p>Example 2 </p> <p>It should be clear why these two contexts would make a difference in the subsequent claims and evidence needed to justify the goal.</p> <p>An AI system used by patients at home through a smartphone app ought not be designed in the same ways as one used by trained healthcare professional within a hospital environment. The latter environment is much more constrained and regulated than the former, and these constraints make a big difference. If this context was not provided, it would be impossible to evaluate or verify the validity or the claims, or the sufficiency and strength of the evidence.</p>","tags":["learning-modules"]},{"location":"learning-modules/tea-trainee/first-cup/#links","title":"Links","text":"<p>In addition to the above elements, there are two types of links that are used in Trustworthy and Ethical Assurance:</p> <ol> <li>Support Links</li> <li>Context Links</li> </ol> <p>The primary link used in Trustworthy and Ethical assurance cases is a support link. These links represent a uni-directional relationship between two elements, such that the parent element is supported by the child element.</p> <p>Permitted Support Links</p> <p>The TEA platform restricts a user's ability to add invalid support links between elements. However, for clarity, the following support links are valid:</p> <ul> <li>Goal Claim to Strategy</li> <li>Goal Claim to Property Claim</li> <li>Strategy to Property Claim</li> <li>Property Claim to Property Claim</li> <li>Property Claim to Strategy</li> <li>Property Claim to Evidence</li> </ul> <p>On the other hand, context links provide additional information for relevant elements, which has a constraining effect on the scope of the claim being made. For instance, goal claims made about a system may be constrained by a specific use context (e.g. an algorithm may operate fairly in the context of a highly constrained information environment where input data follow a particular structure).</p> <p>Some examples of contextual information that could be added include:</p> <ul> <li>Context of Use (e.g. specific environment, set of users)</li> <li>Description of technology or technique (e.g. class of algorithms)</li> </ul> <p>Permitted Context Links</p> <p>The TEA platform restricts a user's ability to add invalid context links between elements. However, for clarity, the following context links are valid:</p> <ul> <li>Goal Claim to Context</li> <li>Property Claim to Context</li> <li>Strategy to Context</li> </ul>","tags":["learning-modules"]},{"location":"learning-modules/tea-trainee/first-cup/#value-of-trustworthy-and-ethical-assurance","title":"Value of Trustworthy and Ethical Assurance","text":"<p>One of the key strengths of Trustworthy and Ethical Assurance is its ability to facilitate clear communication among stakeholders, including researchers, developers, regulators, and system users. By presenting an argument graphically, as a well-structured set of elements and links, the underlying logic and structure of an argument is easier to discern.</p> <p>Another value of TEA is that it promotes and supports a process of critical reasoning, which is designed to create a convincing argument that articulates why a top-level goal is true (or, more precisely why it is likely to be true). By making claims explicit and providing a structured framework for critical reasoning, TEA facilitates a transparent, understandable and reproducible assurance process.</p> <p>Finally, it also offers a flexible and extensible way to integrate various types of evidence (and standards), such as empirical data, expert opinion, and formal methods, into a cohesive argument.</p> <p>There are many other values of TEA, which we will get to in due course. However, TEA is also not without its challenges<sup>3</sup>. Constructing a rigorous argument requires significant domain expertise, can be time-consuming, and the quality of the argument is heavily dependent on the strength and sufficiency of the underlying evidence. Furthermore, there are also open research questions regarding how to update or modify assurance arguments as systems evolve or when new information becomes available.</p> <p>We will discuss all of this, and more, in later modules. In the next module, we will look at how to use the TEA platform itself.</p> <ol> <li> <p>In the GSN standard, all claims are treated as goals and no distinction is made between goal claims and property claims. Our methodology maintains consistency with this standard, which is why property claims have the same type as goal claims, but adds an additional descriptive layer to better represent the ethical process of deliberation and reflection.\u00a0\u21a9</p> </li> <li> <p>See earlier callout box on 'Multiple Goals and Modular Arguments'.\u00a0\u21a9</p> </li> <li> <p>Habli, I., Alexander, R., &amp; Hawkins, R. D. (2021). Safety Cases: An Impending Crisis? In Safety-Critical Systems Symposium (SSS\u201921). https://core.ac.uk/download/pdf/363148691.pdf \u21a9</p> </li> </ol>","tags":["learning-modules"]},{"location":"learning-modules/tea-trainee/taking-a-sip/","title":"Taking a sip of TEA: How to Build an Assurance Case with the TEA Platform","text":"<p>This guide is still being written.</p> <p>In the meantime, please visit: https://scribehow.com/shared/Create_Assurance_Case_with_Goals_Claims_and_Strategies__vODBFxX_S3WTmdL8Zzd6Nw?referrer=workspace for a demo.</p>"},{"location":"technical-documentation/","title":"Technical Documentation","text":"<p>Notice</p> <p>This section provides technical documentation for developers or users who wish to learn more about how the TEA platform was built, or to access instructions on how to install locally or in the cloud.</p> <p></p>"},{"location":"technical-documentation/#about-the-tea-platform","title":"About the TEA Platform","text":"<p>Our technology stack ensures that the TEA platform is not only powerful and reliable but also accessible to users with different levels of technical expertise.</p> <p>At its core, the platform features a web application built with the Next.js framework, known for its fast and modern approach to building interactive web applications.</p> <p>On the backend, the TEA platform is powered by Django, a high-level Python web framework that offers robust backend capabilities, including a straightforward API for data management. Data can be stored in SQLite or PostgreSQL databases, providing options for lightweight to more scalable storage solutions.</p> <p>The platform also supports easy installation and deployment through Docker, making it straightforward to set up in various environments, including Azure.</p>"},{"location":"technical-documentation/deployment/","title":"Deploying the TEA Platform","text":""},{"location":"technical-documentation/deployment/#microsoft-azure","title":"Microsoft Azure","text":"<p>Deploying the Trustworthy and Ethical Assurance (TEA) Platform on Microsoft Azure utilizes Docker for containerization, Azure Web Apps for hosting, and Azure Database for PostgreSQL for database services. This guide outlines the steps for setting up the TEA Platform on Azure, ensuring a robust and scalable deployment.</p>"},{"location":"technical-documentation/deployment/#prerequisites","title":"Prerequisites","text":"<p>Before beginning the deployment process, please ensure you have the following:</p> <ul> <li>Basic understanding of cloud services, specifically Microsoft Azure, and familiarity with the Azure portal.</li> <li>Docker installed and configured on your machine.</li> <li>An active Microsoft Azure account as well as an active DockerHub account.</li> <li>Git installed for cloning the repository.</li> <li>PostgreSQL command-line tool (<code>psql</code>) for database setup.</li> <li>A GitHub account for OAuth and actions setup.</li> <li>(Optional) Anaconda or Miniconda for managing Python environments, offering an easier way to handle project dependencies.</li> </ul> <p>Also, consider reviewing security best practices for managing secrets and passwords throughout the deployment process.</p>"},{"location":"technical-documentation/deployment/#setting-up-the-postgresql-database","title":"Setting Up the PostgreSQL Database","text":"<ol> <li>Create a PostgreSQL Database</li> </ol> <p>Navigate to the Azure Portal, select \"+ Create a New Resource\", choose \"Azure Database for PostgreSQL\", and click \"Create\". Opt for a \"Single Server\" setup.</p> <ol> <li> <p>Configuration</p> <p>After selecting your Subscription, Resource Group, and Region, specify your \"Server name\", \"Admin username\", and \"Password\". Remember these details as they are crucial for subsequent steps.</p> </li> <li> <p>Firewall Configuration</p> <p>To allow connections to your database, configure a firewall rule under \"Connection Security\" by adding your client IP address. Ensure \"Allow access to Azure services\" is enabled and consider disabling \"Enforce SSL connection\" for local development.</p> </li> <li> <p>Database Initialization</p> <p>Use psql to create your database:</p> <pre><code>$ psql --host=SERVER_NAME.postgres.database.azure.com --port=5432 --username=ADMIN_USERNAME@SERVER_NAME --dbname=postgres\n$ postgres=&gt; CREATE DATABASE eap;\n</code></pre> </li> </ol>"},{"location":"technical-documentation/deployment/#backend-deployment","title":"Backend Deployment","text":"<ol> <li> <p>Docker Image</p> <p>If not using GitHub Actions for automated builds, manually build and push your Docker image for the backend:</p> <pre><code>$ docker build -t YOUR_DOCKER_USERNAME/eap_backend:latest -f Dockerfile .\n$ docker push YOUR_DOCKER_USERNAME/eap_backend:latest\n</code></pre> </li> <li> <p>Backend Web App</p> <p>Create a new \"Web App\" in Azure Portal, selecting \"Docker Container\" and \"Linux\" for publishing. Configure the app with the environment variables related to your database and GitHub OAuth credentials.</p> </li> </ol>"},{"location":"technical-documentation/deployment/#frontend-deployment","title":"Frontend Deployment","text":"<ol> <li> <p>Frontend Docker Image</p> <p>Similar to the backend, build and push your frontend Docker image, ensuring the <code>BASE_URL</code> is set to your backend's URL.</p> <pre><code>$ docker build -t YOUR_DOCKER_USERNAME/eap_frontend:latest --build-arg BASE_URL=\"https://BACKEND_WEBAPP_NAME.azurewebsites.net/api\" -f Dockerfile .\n$ docker push YOUR_DOCKER_USERNAME/eap_frontend:latest\n</code></pre> <p>Note: In order to push to DockerHub, you will need to sign-up for the service and run <code>docker login</code> before the above commands will work.</p> </li> <li> <p>Frontend Web App</p> <p>Repeat the process for the backend web app, adjusting settings for the frontend, including <code>WEBSITES_PORT</code> and <code>REACT_APP_BASE_URL</code>.</p> </li> </ol>"},{"location":"technical-documentation/deployment/#cross-origin-resource-sharing-cors-configuration","title":"Cross-Origin Resource Sharing (CORS) Configuration","text":"<p>To enable seamless interaction between your frontend and backend, set the <code>CORS_ORIGIN_WHITELIST</code> environment variable in your backend's settings to include your frontend's URL.</p>"},{"location":"technical-documentation/deployment/#final-steps","title":"Final Steps","text":"<p>After configuring CORS settings, test the deployment by accessing your frontend's URL. You should be able to interact with the TEA Platform without issues.</p>"},{"location":"technical-documentation/deployment/#accessing-the-django-admin-interface","title":"Accessing the Django Admin Interface","text":"<p>The Django admin interface provides direct access to your database for managing data. Access it by navigating to https://BACKEND_WEBAPP_NAME.azurewebsites.net/admin and logging in with your superuser credentials. Use this interface cautiously, especially when deleting data.</p>"},{"location":"technical-documentation/deployment/#conclusion","title":"Conclusion","text":"<p>Deploying the TEA Platform on Azure involves setting up a secure and scalable environment. By following these steps, you can ensure your deployment is robust and ready for production use. Always remember to secure your secret keys and sensitive information, especially when deploying in a public cloud environment.</p>"},{"location":"technical-documentation/docker-quickstart/","title":"Docker Quickstart","text":"<p>This guide is designed for individuals who have a basic understanding of Docker and Docker Compose.</p> <p>Live Demo Version</p> <p>For those looking to explore without installing, a live demo version of the assurance platform is available at https://assuranceplatform.azurewebsites.net/. Please be aware that data in the demo environment is periodically cleared.</p> <p>This Docker-based installation offers a straightforward and efficient way to get the TEA Platform running on your local machine, providing a sandbox for development, testing, or demonstration purposes. Happy exploring!</p> <p>Local Install</p> <p>If you wish to install the TEA platform locally on your computer without using Docker, please see our local install guide.</p>"},{"location":"technical-documentation/docker-quickstart/#prerequisites","title":"Prerequisites","text":"<p>Before beginning, ensure you have Docker and docker-compose installed on your system. These tools are essential for creating, deploying, and managing containers. For installation instructions, visit the official Docker documentation.</p>"},{"location":"technical-documentation/docker-quickstart/#step-by-step-guide","title":"Step-by-step Guide","text":""},{"location":"technical-documentation/docker-quickstart/#clone-the-repository","title":"Clone the Repository","text":"<p>Start by cloning the Assurance Platform repository from GitHub to your local machine. Open your terminal and run the following command:</p> <pre><code>$ git clone https://github.com/alan-turing-institute/AssurancePlatform.git\n</code></pre> <p>This command downloads the project files to your local system.</p>"},{"location":"technical-documentation/docker-quickstart/#navigate-to-the-project-directory","title":"Navigate to the Project Directory","text":"<p>After cloning, change your current directory to the AssurancePlatform folder:</p> <pre><code>$ cd AssurancePlatform/\n</code></pre>"},{"location":"technical-documentation/docker-quickstart/#deploy-with-docker-compose","title":"Deploy with Docker Compose","text":"<p>Use docker-compose to pull the necessary images and start the containers. Execute:</p> <pre><code>$ docker compose pull &amp;&amp; docker compose up\n</code></pre> <p>This command fetches the latest Docker images for the TEA Platform and runs them. The process may take a few minutes the first time as it downloads the images and initializes the containers.</p>"},{"location":"technical-documentation/docker-quickstart/#access-the-platform","title":"Access the Platform","text":"<p>Once the containers are up and running, the TEA Platform is accessible via your web browser. Simply go to: http://localhost:3000</p> <p>You should now see the TEA Platform's homepage, ready for exploration and use.</p>"},{"location":"technical-documentation/docker-quickstart/#shutting-down","title":"Shutting Down","text":"<p>When you're done using the platform and wish to stop the Docker containers, open a new terminal window. Ensure you're in the AssurancePlatform directory, then execute:</p> <pre><code>$ docker compose down\n</code></pre> <p>This command stops and removes the containers set up by docker-compose, effectively shutting down the platform until you choose to run it again.</p>"},{"location":"technical-documentation/local-quickstart/","title":"Quickstart (Local Install)","text":"<p>Live Demo Version</p> <p>For those looking to explore without installing, a live demo version of the assurance platform is available at https://assuranceplatform.azurewebsites.net/. Please be aware that data in the demo environment is periodically cleared.</p> <p>Setting up a local installtion of the TEA Platform (e.g. for development) involves configuring both the backend and frontend components. It's important to set up the backend before proceeding with the frontend to ensure that the frontend can communicate with the backend services.</p> <p>Docker</p> <p>A quicker way to get the TEA Platform running on your local machine is to use Docker. If you're familiar with Docker and docker-compose, you can follow the Docker Quick Start guide to set up the platform with minimal effort.</p> <p>First, clone the Assurance Platform repository to your local machine using the following command:</p> <pre><code>git clone https://github.com/alan-turing-institute/AssurancePlatform.git\ncd\n</code></pre>"},{"location":"technical-documentation/local-quickstart/#backend-installation","title":"Backend Installation","text":"<p>Prerequisites</p> <p>Before you begin setting up the backend, it's essential to have a proper Python environment management system in place.</p> <p>There are many ways to do this, but for the purpose of this guide we will assume you are using Python's <code>venv</code> package.</p>"},{"location":"technical-documentation/local-quickstart/#1-setting-up-the-backend","title":"1. Setting Up the Backend","text":"<p>Create and Activate a Virtual Environment</p> <p>To avoid conflicts with other Python projects, create a virtual environment specifically for the TEA Platform backend. Using Conda, you can create a new environment with Python 3.8 as follows:</p> <pre><code>python -m venv .env\nsource .env/bin/activate\n</code></pre>"},{"location":"technical-documentation/local-quickstart/#2-install-dependencies","title":"2. Install Dependencies","text":"<p>Navigate to the eap_backend directory within the cloned repository and install the required dependencies:</p> <pre><code>cd eap_backend\npip install -r requirements.txt\n</code></pre>"},{"location":"technical-documentation/local-quickstart/#3-initialize-the-database","title":"3. Initialize the Database","text":"<p>Use Django's built-in commands to set up the database. By default, this guide uses SQLite for simplicity and ease of use:</p> <pre><code>python manage.py migrate\n</code></pre>"},{"location":"technical-documentation/local-quickstart/#4-run-tests","title":"4. Run Tests","text":"<p>Ensure everything is set up correctly by running the Django test suite:</p> <pre><code>python manage.py test\n</code></pre>"},{"location":"technical-documentation/local-quickstart/#5-launch-the-backend-server","title":"5. Launch the Backend Server","text":"<p>Start the Django development server. By default, the server will run on port 8000:</p> <pre><code>python manage.py runserver\n</code></pre> <p>At this point, your backend should be running locally, accessible via http://localhost:8000/api. You can now proceed to set up the frontend to interact with the backend API.</p>"},{"location":"technical-documentation/local-quickstart/#6-running-locally-after-changes","title":"6. Running Locally: After Changes","text":"<p>After making any updates to the database schema or if you're running the server for the first time, ensure to apply migrations:</p> <pre><code>python manage.py migrate\n</code></pre>"},{"location":"technical-documentation/local-quickstart/#7-running-the-api-server","title":"7. Running the API Server","text":"<p>To start the API server, simply execute:</p> <pre><code>python manage.py runserver\n</code></pre> <p>from the <code>eap_backend</code> directory. The server will restart automatically upon code changes, making development efficient and streamlined.</p>"},{"location":"technical-documentation/local-quickstart/#optional-running-tests","title":"Optional: Running Tests","text":"<p>It's good practice to run tests frequently during development. To execute the test suite, use:</p> <pre><code>python manage.py test\n</code></pre>"},{"location":"technical-documentation/local-quickstart/#frontend-installation","title":"Frontend Installation","text":"<p>Prerequisites</p> <p>Ensure you have Node.js and npm installed on your system. Ensure you have installed the backend, as detailed in the previous steps.</p>"},{"location":"technical-documentation/local-quickstart/#1-navigate-to-the-frontend-directory","title":"1. Navigate to the frontend directory","text":"<pre><code># Assumes you are in the root directory\ncd next-frontend\n</code></pre>"},{"location":"technical-documentation/local-quickstart/#2-install-dependencies-using-npm","title":"2. Install dependencies using npm","text":"<pre><code>npm install\n</code></pre>"},{"location":"technical-documentation/local-quickstart/#3-run-the-application","title":"3. Run the application","text":"<p>To run the application in development mode, use the following command:</p> <pre><code>npm run dev\n</code></pre> <p>This command starts the development server and opens the application in your default web browser. The application will automatically reload if you make any changes to the source code.</p> <p>To build and run the application in production mode, use the following command</p> <pre><code>npm run build\nnpm start\n</code></pre> <p>This will build the application for production and start a server to serve the built files.</p>"},{"location":"technical-documentation/local-quickstart/#4-configuration","title":"4. Configuration","text":"<p>The application uses environment variables for configuration. Create a <code>.env.local</code> file in the root directory and specify the required environment variables. You can use the <code>.env.example</code> file as a template.</p>"},{"location":"technical-documentation/local-quickstart/#environment-variables-example","title":"Environment Variables Example","text":"<pre><code>GITHUB_APP_CLIENT_ID={gh-clientid-value}\nGITHUB_APP_CLIENT_SECRET={gh-secret-valie}\nNEXTAUTH_SECRET={unique-string}\nNEXT_PUBLIC_API_URL={api-url-value}\nAPI_URL={api-url-value}\nNEXTAUTH_URL={frontend-url-value}\n</code></pre> <p>To generate a unique string for the <code>NEXTAUTH_SECRET</code> you can run:</p> <pre><code>openssl rand -base64 32\n</code></pre>"},{"location":"technical-documentation/local-quickstart/#optional-troubleshooting-ssl-errors","title":"Optional\" Troubleshooting SSL Errors","text":"<p>If you encounter any SSL errors during setup, try updating npm and forcing an audit fix, followed by updating react-scripts to the latest version.</p> <pre><code>npm update &amp;&amp; \\\nnpm audit fix --force &amp;&amp; \\\nnpm i react-scripts@latest\n</code></pre>"},{"location":"technical-documentation/local-quickstart/#conclusion","title":"Conclusion","text":"<p>By following these steps, you'll have the the TEA Platform running locally on your development machine, ready for further development and testing.</p> <p>You should now be able to visit the platform at http://localhost:3000</p>"},{"location":"technical-documentation/reference-guide/backend/_prerequisites/","title":"prerequisites","text":"<p>Before you begin setting up the backend, it's essential to have a proper Python environment management system in place.</p> <p>There are many ways to do this, but for the purpose of this guide we will assume you are using Python's <code>venv</code> package.</p>"},{"location":"technical-documentation/reference-guide/backend/django-settings/","title":"Django Settings for the TEA Platform","text":"<p>This section details the Django framework settings essential for the TEA Platform's operation. It guides you through configuring settings for different environments, such as development, testing, and production, including database configurations, security enhancements, and application-specific options.</p>"},{"location":"technical-documentation/reference-guide/backend/django-settings/#security-and-environment-configuration","title":"Security and Environment Configuration","text":"<p><code>SECRET_KEY</code>: A critical setting that should be unique and kept secret in production environments. Ensure that it is not stored in version control and is generated uniquely for each deployment.</p> <p><code>DEBUG</code>: This setting controls whether Django runs in debug mode. It should be set to False in production to avoid exposing sensitive information.</p> <p><code>CORS_ORIGIN_WHITELIST</code>: Specifies the hosts allowed to make cross-origin requests to your Django backend. For local development with the React frontend, this typically includes localhost:3000.</p>"},{"location":"technical-documentation/reference-guide/backend/django-settings/#database-settings","title":"Database Settings","text":"<p>The TEA Platform supports both SQLite (for development and testing) and PostgreSQL (recommended for production). Database configurations can be adjusted based on the environment variables:</p> <p>SQLite: Used by default if no environment variables are set. Ideal for development and testing phases.</p> <pre><code>```python\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n```\n</code></pre> <p>PostgreSQL: For production, environment variables such as DBHOST, DBNAME, DBUSER, and DBPASSWORD need to be defined. This setup enhances the platform's scalability and security in production deployments.</p> <pre><code>```python\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.postgresql\",\n        \"HOST\": os.environ.get(\"DBHOST\"),\n        \"NAME\": os.environ.get(\"DBNAME\"),\n        \"USER\": os.environ.get(\"DBUSER\"),\n        \"PASSWORD\": os.environ.get(\"DBPASSWORD\"),\n    }\n}\n```\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/django-settings/#application-and-middleware-configuration","title":"Application and Middleware Configuration","text":"<p><code>INSTALLED_APPS</code>: Includes Django's default apps and third-party apps such as rest_framework for the REST API functionality, corsheaders for handling Cross-Origin Resource Sharing (CORS) settings, and allauth for authentication.</p> <p><code>MIDDLEWARE</code>: A series of middleware classes that process request/response objects. It includes CorsMiddleware for managing CORS headers according to your <code>CORS_ORIGIN_WHITELIST</code>.</p>"},{"location":"technical-documentation/reference-guide/backend/django-settings/#rest-framework-and-authentication","title":"REST Framework and Authentication","text":"<p><code>REST_FRAMEWORK</code>: Configures the default permissions and authentication classes. For instance, using <code>rest_framework.permissions.AllowAny</code> to allow unrestricted access or <code>rest_framework.authentication.TokenAuthentication</code> for API token-based authentication.</p>"},{"location":"technical-documentation/reference-guide/backend/django-settings/#static-and-media-files","title":"Static and Media Files","text":"<p><code>STATIC_URL</code>: Defines the URL path for serving static files (CSS, JavaScript, images).</p>"},{"location":"technical-documentation/reference-guide/backend/django-settings/#additional-settings","title":"Additional Settings","text":"<p><code>LANGUAGE_CODE</code> and <code>TIME_ZONE</code>: Adjust these settings to match your locale and timezone preferences.</p> <p><code>EMAIL_BACKEND</code>: Configures the backend to use for sending emails. For development, using <code>django.core.mail.backends.console.EmailBackend</code> logs emails to the console instead of sending them.</p>"},{"location":"technical-documentation/reference-guide/backend/django-settings/#adjusting-settings-for-different-environments","title":"Adjusting Settings for Different Environments","text":"<p>For a seamless transition between development, testing, and production environments, consider using environment variables to dynamically adjust settings. Utilize Django's <code>os.environ.get()</code> to fetch environment variables and apply conditional logic to switch between different database backends or to toggle the <code>DEBUG</code> setting.</p>"},{"location":"technical-documentation/reference-guide/backend/django-settings/#final-thoughts","title":"Final Thoughts","text":"<p>Properly configuring the Django settings is crucial for the security, performance, and functionality of the TEA Platform. Ensure sensitive settings like <code>SECRET_KEY</code> are securely managed and that the database configurations are appropriate for your deployment environment.</p>"},{"location":"technical-documentation/reference-guide/backend/management-files/","title":"Backend Management Files","text":"<p>The TEA Platform, developed using Django and the Django REST framework, comprises several Python modules that are pivotal to its operation. These modules play specific roles in defining the platform's database schema, data serialization, request handling, and URL routing. Here\u2019s an overview of these essential components:</p> <ul> <li>Models (<code>eap_api/models.py</code>): This file is at the heart of defining the platform's database schema using Django's Object-Relational Mapping (ORM) system. Each class that inherits from django.db.models.Model is mapped to a database table, setting the groundwork for how data is stored, retrieved, and manipulated within the platform.</li> <li>Serializers (<code>eap_api/serializers.py</code>): The serializers handle the conversion between Model instances and JSON, making it possible for the platform\u2019s data to be easily transferred over the web. This file ensures that complex model instances can be transformed into a format that can be understood by the frontend and vice versa.</li> <li>Views (<code>eap_api/views.py</code>): The views module defines the logic for each API endpoint, dictating how requests are processed and how data is returned to the client. Special attention is given to requests that require nested JSON structures, employing a recursive function get_json_tree to assemble the comprehensive data structure for assurance cases and their related components.</li> <li>URLs (<code>eap_api/urls.py</code>): This module maps the available API endpoints to their corresponding view functions in views.py, establishing the routes that clients interact with. It acts as the web-facing interface of the backend, directing incoming requests to the appropriate handlers based on the requested URL path.</li> </ul> <p>Understanding these modules and their functions within the Django framework provides a solid foundation for contributing to or extending the TEA Platform. Each plays a crucial role in ensuring the platform's backend operates efficiently, securely, and in harmony with the frontend application.</p>"},{"location":"technical-documentation/reference-guide/backend/postgres/","title":"Postgres","text":""},{"location":"technical-documentation/reference-guide/backend/postgres/#resetting-the-database","title":"Resetting the Database","text":"<p>Resetting the database of the Trustworthy and Ethical Assurance (TEA) Platform might become necessary under various circumstances. Whether you're cleaning up after a demonstration, addressing schema changes, or preparing for a new phase of development, understanding how to reset your database safely and effectively is crucial.</p> <p>Warning</p> <p>Resetting the database is a powerful action that can help maintain the cleanliness and integrity of your installation. However, it should be approached with caution to avoid accidental data loss.</p> <p>Reasons for Resetting</p> <ol> <li>Post-Demo Cleanup: After demonstrating the TEA Platform, you might want to remove all test data, including users and cases, to ensure a clean slate for actual use.</li> <li>Schema Changes: Implementing changes in the database schema that cannot be migrated using Django's standard migration tools may require a fresh start.</li> </ol> <p>The process for resetting the TEA Platform database differs depending on the environment in which it is deployed:</p>"},{"location":"technical-documentation/reference-guide/backend/postgres/#local-deployment","title":"Local Deployment","text":"<p>For local deployments, the use of SQLite simplifies the process of resetting your database. After deleting the <code>db.sqlite3</code> file and running the migration commands, your backend will operate with a new, empty database.</p> <p>This process effectively removes all existing data, allowing you to start anew with your development or testing activities on the TEA Platform.</p> <p>Warning</p> <p>This process will remove all existing data in the database. It is highly recommended to back up any important data before proceeding with the reset.</p>"},{"location":"technical-documentation/reference-guide/backend/postgres/#1-identify-the-database-file","title":"1. Identify the Database File","text":"<p>The local database for the TEA Platform is stored in an SQLite file typically located at <code>eap_backend/db.sqlite3</code> within your project directory.</p>"},{"location":"technical-documentation/reference-guide/backend/postgres/#2-delete-the-database-file","title":"2. Delete the Database File","text":"<p>To reset your database, you need to delete the existing SQLite file. Navigate to the <code>eap_backend</code> directory and remove the <code>db.sqlite3</code> file.</p> <pre><code>rm eap_backend/db.sqlite3\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/postgres/#3-recreate-the-database","title":"3. Recreate the Database","text":"<p>After deleting the old database file, you'll need to recreate the database structure to continue working with a clean state.</p> <p>Ensure your backend environment is correctly set up, then execute the following Django management commands:</p> <p><pre><code>python manage.py makemigrations &amp;&amp; \\\npython manage.py migrate\n</code></pre> These commands will generate a new <code>db.sqlite3</code> file with a fresh database schema based on your Django models.</p>"},{"location":"technical-documentation/reference-guide/backend/postgres/#azure-deployment","title":"Azure Deployment","text":"<p>Resetting your database on Azure involves a few crucial steps to ensure that the process is completed smoothly without hindering the accessibility of your TEA Platform. This guide will walk you through the necessary steps to reset your database deployed on Microsoft Azure.</p> <p>Warning</p> <p>This process will remove all existing data in the database. It is highly recommended to back up any important data before proceeding with the reset.</p> <p>Prerequisities</p> <p>The PostgreSQL command-line tool, <code>psql</code>, is required for directly interacting with your Azure database. Mac users with Homebrew can install it using <code>brew install postgresql</code>. Windows and Linux users should refer to their respective package managers or download it from the PostgreSQL official website.</p>"},{"location":"technical-documentation/reference-guide/backend/postgres/#1-allow-ip-connection","title":"1. Allow IP Connection","text":"<p>Before proceeding with the reset, ensure your local machine's IP address is allowed to connect to the Azure database server.</p> <ul> <li>Navigate to the Azure portal.</li> <li>Locate your database resource.</li> <li>Under \"Connection security\" on the left sidebar, select \"Add current client IP address\" and save your changes.</li> </ul>"},{"location":"technical-documentation/reference-guide/backend/postgres/#2-reset-the-database-via-psql","title":"2. Reset the Database via psql","text":"<p>You will now drop the existing database and create a new one using <code>psql</code>.</p> <p>Open your terminal or command prompt and execute the following commands:</p> <pre><code>psql --host=SERVER_NAME.postgres.database.azure.com --port=5432 --username=ADMIN_USERNAME@SERVER_NAME --dbname=postgres\n</code></pre> <p>Once connected, run:</p> <pre><code>postgres=&gt; DROP DATABASE eap;\npostgres=&gt; CREATE DATABASE eap;\npostgres=&gt; \\c eap;\npostgres=&gt; \\q\n</code></pre> <p>Replace SERVER_NAME and ADMIN_USERNAME with the actual server name and admin username provided in the Azure portal. Ensure you have the admin password at hand, as it might be required during connection.</p>"},{"location":"technical-documentation/reference-guide/backend/postgres/#3-restart-the-backend-web-app","title":"3. Restart the Backend Web App","text":"<p>To apply the changes and ensure your application connects to the refreshed database, you need to restart your backend web application.</p> <ul> <li>Go back to the Azure portal.</li> <li>Find your backend web app service.</li> <li>Use the \"Restart\" option to reboot the application.</li> </ul> <p>After a brief wait, your TEA Platform application should be operational with a clean database, ready for new data.</p>"},{"location":"technical-documentation/reference-guide/backend/api/","title":"TEA Platform API","text":"<p>Welcome to the Trustworthy and Ethical Assurance (TEA) Platform API documentation. This guide is designed to provide you with all the information you need to start integrating with and utilizing the TEA Platform's comprehensive set of features. Our API enables developers, researchers, and technology governance practitioners to access and manipulate assurance cases, user groups, comments, and more, facilitating a collaborative environment for ethical technology development.</p>"},{"location":"technical-documentation/reference-guide/backend/api/#quickstart","title":"Quickstart","text":"<p>To get you started with the TEA Platform API, we'll walk you through a few basic <code>curl</code> commands to perform common actions such as user authentication, listing resources, and adding new entries.</p>"},{"location":"technical-documentation/reference-guide/backend/api/#authenticate-a-user","title":"Authenticate a User","text":"<p>To interact with the TEA Platform API, you'll first need to authenticate. If you're logging in, you'll typically post your credentials to receive an authentication token.</p> <pre><code>$ curl -X POST http://localhost:8000/auth/login/ \\\n     -H 'Content-Type: application/json' \\\n     -d '{\"username\": \"yourusername\", \"password\": \"yourpassword\"}'\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/#list-cases","title":"List Cases","text":"<p>You can list assurance cases available to you.</p> <pre><code>$ curl -X GET http://localhost:8000/api/cases/\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/#add-a-new-case","title":"Add a New Case","text":"<p>To create a new assurance case, you'll need to POST the required data.</p> <pre><code>$ curl -X POST http://localhost:8000/api/cases/ \\\n     -H 'Authorization: Bearer your_token_here' \\\n     -H 'Content-Type: application/json' \\\n     -d '{\"name\": \"New Assurance Case\", \"description\": \"Detailed description of the case\", \"user_id\": \"1\", \"lock_uuid\": \"\", \"color_profile\": \"default\"}'\n</code></pre> <p>These commands are just the beginning of what you can do with the TEA Platform API. Throughout this documentation, you'll find detailed descriptions of every endpoint available, including required parameters, request and response formats, and example requests to help you effectively utilize the platform.</p>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/","title":"Assurance Case Endpoints","text":"<p>The TEA Platform provides comprehensive endpoints for managing assurance cases and their elements, including goals, contexts, property claims, and strategies. This section details how to interact with these resources via the API.</p> <p>Replace <code>&lt;int:pk&gt;</code>, <code>&lt;case_id&gt;</code>, <code>&lt;goal_id&gt;</code> with the appropriate integer identifiers for your assurance cases, goals, etc., and your_access_token_here with your actual access token received after authentication.</p> <p>The <code>curl</code> examples in the following serve as a quick way to test and interact with the TEA Platform API directly from your command line.</p>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#case-list-management","title":"Case List &amp; Management","text":""},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#list-all-assurance-cases","title":"List All Assurance Cases","text":""},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#request","title":"Request","text":"<pre><code>$ curl -X GET http://localhost:8000/api/cases/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#response","title":"Response","text":"<p>A JSON array of assurance cases, each with its details.</p>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#create-a-new-assurance-case","title":"Create a New Assurance Case","text":""},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#request_1","title":"Request","text":"<pre><code>$ curl -X POST http://localhost:8000/api/cases/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"name\": \"Case Name\", \"description\": \"Case Description\", \"lock_uuid\": \"\", \"color_profile\": \"default\"}'\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#response_1","title":"Response","text":"<p>JSON object of the created assurance case.</p>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#retrieve-details-of-a-specific-assurance-case","title":"Retrieve Details of a Specific Assurance Case","text":""},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#request_2","title":"Request","text":"<pre><code>$ curl -X GET http://localhost:8000/api/cases/&lt;int:pk&gt;/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre> <p>Response:</p> <p>JSON object of the specified assurance case.</p>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#update-an-assurance-case","title":"Update an Assurance Case","text":""},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#request_3","title":"Request","text":"<pre><code>$ curl -X PUT http://localhost:8000/api/cases/&lt;int:pk&gt;/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"name\": \"Updated Case Name\", \"description\": \"Updated Case Description\"}'\n</code></pre> <p>Response:</p> <p>JSON object of the updated assurance case.</p>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#delete-an-assurance-case","title":"Delete an Assurance Case","text":""},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#request_4","title":"Request","text":"<pre><code>$ curl -X DELETE http://localhost:8000/api/cases/&lt;int:pk&gt;/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#response_2","title":"Response","text":"<p>HTTP 204 No Content on successful deletion.</p>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#elements","title":"Elements","text":""},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#goal-endpoints","title":"Goal Endpoints","text":""},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#list-all-goals","title":"List All Goals","text":"<pre><code>$ curl -X GET http://localhost:8000/api/goals/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#create-a-new-goal","title":"Create a New Goal","text":"<pre><code>$ curl -X POST http://localhost:8000/api/goals/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"name\": \"Goal Name\", \"description\": \"Goal Description\", \"assurance_case\": &lt;case_id&gt;}'\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#update-a-goal-element","title":"Update a Goal Element","text":"<p>To update an existing goal element in an assurance case, use the PUT method at the <code>/goals/&lt;int:pk&gt;/</code> endpoint. This request allows you to modify the name, description, or associated assurance case of the goal.</p>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#request_5","title":"Request","text":"<pre><code>$ curl -X PUT http://localhost:8000/api/goals/&lt;int:pk&gt;/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"name\": \"Updated Goal Name\", \"description\": \"Updated Goal Description\"}'\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#response_3","title":"Response","text":"<p>A JSON object containing the updated details of the goal.</p>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#delete-a-goal-element","title":"Delete a Goal Element","text":"<p>To delete a specific goal element from an assurance case, send a DELETE request to the <code>/goals/&lt;int:pk&gt;/</code> endpoint.</p>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#request_6","title":"Request","text":"<pre><code>$ curl -X DELETE http://localhost:8000/api/goals/&lt;int:pk&gt;/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#response_4","title":"Response","text":"<p>HTTP 204 No Content on successful deletion, indicating the goal has been removed.</p>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#context-endpoints","title":"Context Endpoints","text":""},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#list-all-contexts","title":"List All Contexts","text":"<pre><code>$ curl -X GET http://localhost:8000/api/contexts/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#create-a-new-context","title":"Create a New Context","text":"<pre><code>$ curl -X POST http://localhost:8000/api/contexts/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"name\": \"Context Name\", \"description\": \"Context Description\", \"goal\": &lt;goal_id&gt;}'\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#update-a-context-element","title":"Update a Context Element","text":"<p>To update details of a context element linked to a goal, utilize the PUT method at the <code>/contexts/&lt;int:pk&gt;/</code> endpoint.</p>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#request_7","title":"Request","text":"<pre><code>$ curl -X PUT http://localhost:8000/api/contexts/&lt;int:pk&gt;/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"name\": \"Updated Context Name\", \"description\": \"Updated Context Description\"}'\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#response_5","title":"Response","text":"<p>JSON representation of the context with the updated information.</p>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#delete-a-context-element","title":"Delete a Context Element","text":"<p>Remove a context element by sending a DELETE request to <code>/contexts/&lt;int:pk&gt;/</code>.</p>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#request_8","title":"Request","text":"<pre><code>$ curl -X DELETE http://localhost:8000/api/contexts/&lt;int:pk&gt;/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#response_6","title":"Response","text":"<p>HTTP 204 No Content, confirming the context has been successfully deleted.</p>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#property-claim-endpoints","title":"Property Claim Endpoints","text":""},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#list-all-property-claims","title":"List All Property Claims","text":"<pre><code>$ curl -X GET http://localhost:8000/api/propertyclaims/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#create-a-new-property-claim","title":"Create a New Property Claim","text":"<pre><code>$ curl -X POST http://localhost:8000/api/propertyclaims/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"name\": \"Property Claim Name\", \"description\": \"Property Claim Description\", \"goal\": &lt;goal_id&gt;}'\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#update-a-property-claim-element","title":"Update a Property Claim Element","text":"<p>Property claims can be updated by sending a PUT request to <code>/propertyclaims/&lt;int:pk&gt;/</code>.</p>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#request_9","title":"Request","text":"<pre><code>$ curl -X PUT http://localhost:8000/api/propertyclaims//&lt;int:pk&gt;/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"name\": \"Updated Claim Name\", \"description\": \"Updated Claim Description\"}'\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#response_7","title":"Response","text":"<p>The API responds with the updated property claim details in JSON format.</p>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#delete-a-property-claim-element","title":"Delete a Property Claim Element","text":"<p>To delete a property claim, issue a DELETE command to <code>/propertyclaims/&lt;int:pk&gt;/</code>.</p>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#request_10","title":"Request","text":"<pre><code>$ curl -X DELETE http://localhost:8000/api/propertyclaims//&lt;int:pk&gt;/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#response_8","title":"Response","text":"<p>HTTP 204 No Content upon successful removal of the property claim.</p>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#strategy-endpoints","title":"Strategy Endpoints","text":""},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#list-all-strategies","title":"List All Strategies","text":"<pre><code>$ curl -X GET http://localhost:8000/api/strategies/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#create-a-new-strategy","title":"Create a New Strategy","text":"<pre><code>$ curl -X POST http://localhost:8000/api/strategies/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"name\": \"Strategy Name\", \"description\": \"Strategy Description\", \"goal\": &lt;goal_id&gt;}'\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#update-a-strategy-element","title":"Update a Strategy Element","text":"<p>Modify an existing strategy by using the PUT method on <code>/strategies/&lt;int:pk&gt;/</code>.</p>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#request_11","title":"Request","text":"<pre><code>$ curl -X PUT http://localhost:8000/api/strategies//&lt;int:pk&gt;/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"name\": \"Updated Strategy Name\", \"description\": \"Updated Strategy Description\"}'\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#response_9","title":"Response","text":"<p>A JSON object representing the strategy after updates have been applied.</p>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#delete-a-strategy-element","title":"Delete a Strategy Element","text":"<p>Remove a strategy from an assurance case by sending a DELETE request to <code>/strategies/&lt;int:pk&gt;/</code>.</p>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#request_12","title":"Request","text":"<pre><code>$ curl -X DELETE http://localhost:8000/api/strategies//&lt;int:pk&gt;/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/assurance-cases/#response_10","title":"Response","text":"<p>HTTP 204 No Content, indicating the strategy has been deleted successfully.</p>"},{"location":"technical-documentation/reference-guide/backend/api/authentication/","title":"Authentication Endpoints","text":"<p>Authentication is crucial for accessing the TEA Platform's features. This section covers the endpoints required for logging in, logging out, and registering a new account. Each request and response is JSON-formatted.</p>"},{"location":"technical-documentation/reference-guide/backend/api/authentication/#login","title":"Login","text":"<p>To authenticate a user and receive an access token for subsequent requests, use the <code>/api/auth/login/</code> endpoint. This token should be included in the Authorization header as a Bearer token for API calls that require authentication.</p>"},{"location":"technical-documentation/reference-guide/backend/api/authentication/#request","title":"Request","text":"<pre><code>$ curl -X POST http://localhost:8000/api/auth/login/ \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\"username\": \"your_username\", \"password\": \"your_password\"}'\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/authentication/#response","title":"Response","text":"<pre><code>{\n    \"token\": \"your_token\"\n}\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/authentication/#logout","title":"Logout","text":"<p>To log out a user and invalidate the current token, use the <code>/api/auth/logout/</code> endpoint. Note that this requires an authenticated request.</p>"},{"location":"technical-documentation/reference-guide/backend/api/authentication/#request_1","title":"Request","text":"<pre><code>$ curl -X POST http://localhost:8000/api/auth/logout/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/authentication/#response_1","title":"Response","text":"<p>A successful logout will return a 200 OK status with no content.</p>"},{"location":"technical-documentation/reference-guide/backend/api/authentication/#registration","title":"Registration","text":"<p>To create a new user account, submit a request to <code>/api/auth/register/</code> with the required user information. Upon successful registration, the user will be authenticated automatically, and an access token will be returned.</p>"},{"location":"technical-documentation/reference-guide/backend/api/authentication/#request_2","title":"Request","text":"<pre><code>$ curl -X POST http://localhost:8000/api/auth/register/ \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\n           \"username\": \"new_user\",\n           \"email\": \"new_user@example.com\",\n           \"password1\": \"complex_password\",\n           \"password2\": \"complex_password\"\n         }'\n</code></pre> <p>Response:</p> <pre><code>{\n  \"key\": \"your_new_access_token_here\"\n}\n</code></pre> <p>This token is used just like the login token for authenticated requests.</p>"},{"location":"technical-documentation/reference-guide/backend/api/comment/","title":"Comment Endpoints","text":"<p>The TEA Platform provides a set of endpoints dedicated to managing comments within assurance cases. This functionality allows users to engage in discussions, provide feedback, and collaborate on assurance case development.</p> <p>Remember to replace <code>&lt;int:assurance_case_id&gt;</code> with the ID of the assurance case you're referring to, <code>&lt;int:pk&gt;</code> with the specific comment's ID, and <code>your_access_token_here</code> with your actual access token received upon authentication.</p> <p>The <code>curl</code> examples offer here show a straightforward way to interact with the TEA Platform's comment functionalities directly from the command line.</p>"},{"location":"technical-documentation/reference-guide/backend/api/comment/#list-all-comments-for-a-specific-assurance-case","title":"List All Comments for a Specific Assurance Case","text":"<p>Retrieve a list of all comments associated with a specific assurance case by making a GET request to the /comments// endpoint."},{"location":"technical-documentation/reference-guide/backend/api/comment/#request","title":"Request","text":"<pre><code>$ curl -X GET http://localhost:8000/api/comments/&lt;int:assurance_case_id&gt;/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/comment/#response","title":"Response","text":"<p>A JSON array of comments related to the specified assurance case, each including details like the comment ID, content, author, and timestamps.</p>"},{"location":"technical-documentation/reference-guide/backend/api/comment/#add-a-new-comment-to-an-assurance-case","title":"Add a New Comment to an Assurance Case","text":"<p>To add a new comment to an assurance case, use the POST method with the assurance case ID in the URL.</p>"},{"location":"technical-documentation/reference-guide/backend/api/comment/#request_1","title":"Request","text":"<pre><code>$ curl -X POST http://localhost:8000/api/comments/&lt;int:assurance_case_id&gt;/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"content\": \"Your insightful comment here.\"}'\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/comment/#response_1","title":"Response","text":"<p>JSON object of the newly created comment, including its ID and content.</p>"},{"location":"technical-documentation/reference-guide/backend/api/comment/#retrieve-details-of-a-specific-comment","title":"Retrieve Details of a Specific Comment","text":"<p>Access the details of a specific comment by its ID using a GET request.</p>"},{"location":"technical-documentation/reference-guide/backend/api/comment/#request_2","title":"Request","text":"<pre><code>$ curl -X GET http://localhost:8000/api/comments/&lt;int:pk&gt;/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/comment/#response_2","title":"Response","text":"<p>A JSON object detailing the requested comment, including its content, author, and related assurance case.</p>"},{"location":"technical-documentation/reference-guide/backend/api/comment/#update-a-comment","title":"Update a Comment","text":"<p>Update the content of an existing comment by sending a PUT request to the comment's specific endpoint.</p>"},{"location":"technical-documentation/reference-guide/backend/api/comment/#request_3","title":"Request","text":"<pre><code>$ curl -X PUT http://localhost:8000/api/comments/&lt;int:pk&gt;/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"content\": \"Updated content of the comment.\"}'\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/comment/#response_3","title":"Response","text":"<p>JSON representation of the updated comment, reflecting the new content.</p>"},{"location":"technical-documentation/reference-guide/backend/api/comment/#delete-a-comment","title":"Delete a Comment","text":"<p>To remove a comment from an assurance case, issue a DELETE request to the specific comment's endpoint.</p>"},{"location":"technical-documentation/reference-guide/backend/api/comment/#request_4","title":"Request","text":"<pre><code>$ curl -X DELETE http://localhost:8000/api/comments/&lt;int:pk&gt;/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/comment/#response_4","title":"Response","text":"<p>HTTP 204 No Content on successful deletion, indicating that the comment has been removed.</p>"},{"location":"technical-documentation/reference-guide/backend/api/github/","title":"GitHub Repository Endpoints","text":"<p>The TEA Platform integrates with GitHub to enable users to link their GitHub repositories directly to their profiles and assurance cases. This functionality fosters a seamless workflow for users who manage their assurance cases via GitHub repositories.</p> <p>Below are the API endpoints available for interacting with GitHub repositories within the TEA Platform.</p> <p>Replace <code>&lt;int:pk&gt;</code> with the actual user ID you're querying, <code>&lt;user_id&gt;</code> with the ID of the user to whom the repository should be linked, and <code>your_access_token_here</code> with your valid authentication token received after logging in.</p> <p>The <code>curl</code> examples below provide a practical way for platform users to manage their GitHub repositories through the TEA Platform API, enhancing the integration between their assurance case work and codebase management.</p>"},{"location":"technical-documentation/reference-guide/backend/api/github/#list-all-github-repositories-for-a-specific-user","title":"List All GitHub Repositories for a Specific User","text":"<p>Retrieve a list of all GitHub repositories associated with a specific user by their user ID. This endpoint is useful for understanding the scope of projects a user is involved in.</p>"},{"location":"technical-documentation/reference-guide/backend/api/github/#request","title":"Request","text":"<pre><code>$ curl -X GET http://localhost:8000/api/users//&lt;int:pk&gt;/github_repositories/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/github/#response","title":"Response","text":"<p>A JSON array of GitHub repositories linked to the user, each including repository details such as name, URL, and description.</p>"},{"location":"technical-documentation/reference-guide/backend/api/github/#list-all-github-repositories","title":"List All GitHub Repositories","text":"<p>To view all GitHub repositories linked within the TEA Platform, irrespective of the user, use this endpoint. It provides a broad overview of all repositories integrated into the platform.</p>"},{"location":"technical-documentation/reference-guide/backend/api/github/#request_1","title":"Request","text":"<pre><code>$ curl -X GET http://localhost:8000/api/github_repositories/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/github/#response_1","title":"Response","text":"<p>A JSON array containing every GitHub repository registered on the TEA Platform, with details like name, URL, and description for each repository.</p>"},{"location":"technical-documentation/reference-guide/backend/api/github/#add-a-new-github-repository","title":"Add a New GitHub Repository","text":"<p>Link a new GitHub repository to the TEA Platform by providing the repository's details. This allows you to directly associate your GitHub projects with assurance cases or your user profile on the TEA Platform.</p>"},{"location":"technical-documentation/reference-guide/backend/api/github/#request_2","title":"Request","text":"<pre><code>$ curl -X POST http://localhost:8000/api/github_repositories/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\n           \"name\": \"Repository Name\",\n           \"url\": \"https://github.com/username/repository\",\n           \"description\": \"Repository Description\",\n           \"owner\": &lt;user_id&gt;\n         }'\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/github/#response_2","title":"Response","text":"<p>JSON object of the newly added GitHub repository, confirming its successful registration on the platform.</p>"},{"location":"technical-documentation/reference-guide/backend/api/group/","title":"Group Endpoints","text":"<p>Groups within the TEA Platform facilitate collaboration among users, allowing them to work together on assurance cases and share insights. Below are the API endpoints that manage group operations, including listing, creating, updating, and deleting groups.</p> <p>Ensure to replace <code>&lt;int:pk&gt;</code> with the actual ID of the group you wish to interact with and <code>your_access_token_here</code> with your valid authentication token.</p> <p>These <code>curl</code> commands here offer a direct way to manage group functionalities on the TEA Platform, enhancing its utility as a collaborative tool for ethical assurance in technology projects.</p>"},{"location":"technical-documentation/reference-guide/backend/api/group/#list-all-groups","title":"List All Groups","text":"<p>Retrieve a comprehensive list of all groups on the TEA Platform. This is useful for discovering existing collaboration opportunities.</p>"},{"location":"technical-documentation/reference-guide/backend/api/group/#request","title":"Request","text":"<pre><code>$ curl -X GET http://localhost:8000/api/groups/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/group/#response","title":"Response","text":"<p>A JSON array of groups, each with its details such as name, creation date, owner, and members.</p>"},{"location":"technical-documentation/reference-guide/backend/api/group/#create-a-new-group","title":"Create a New Group","text":"<p>Establish a new group on the platform by specifying its name. This endpoint can foster new collaboration channels for assurance case development.</p>"},{"location":"technical-documentation/reference-guide/backend/api/group/#request_1","title":"Request","text":"<pre><code>$ curl -X POST http://localhost:8000/api/groups/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"name\": \"New Group Name\"}'\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/group/#response_1","title":"Response","text":"<p>JSON object of the created group, including its ID, name, and other pertinent details.</p>"},{"location":"technical-documentation/reference-guide/backend/api/group/#retrieve-details-of-a-specific-group","title":"Retrieve Details of a Specific Group","text":"<p>Access detailed information about a specific group by its ID. This endpoint provides insight into the group's composition and projects.</p>"},{"location":"technical-documentation/reference-guide/backend/api/group/#request_2","title":"Request","text":"<pre><code>$ curl -X GET http://localhost:8000/api/groups/&lt;int:pk&gt;/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/group/#response_2","title":"Response","text":"<p>A JSON object detailing the requested group, including its name, members, and associated assurance cases.</p>"},{"location":"technical-documentation/reference-guide/backend/api/group/#update-a-groups-details","title":"Update a Group's Details","text":"<p>Modify the details of an existing group, such as its name or members. This endpoint supports the dynamic nature of collaborative work.</p>"},{"location":"technical-documentation/reference-guide/backend/api/group/#request_3","title":"Request","text":"<pre><code>$ curl -X PUT http://localhost:8000/api/groups/&lt;int:pk&gt;/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"name\": \"Updated Group Name\"}'\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/group/#response_3","title":"Response","text":"<p>JSON representation of the group after the update, reflecting the changes made.</p>"},{"location":"technical-documentation/reference-guide/backend/api/group/#delete-a-group","title":"Delete a Group","text":"<p>Remove a group from the platform. This action should be used with caution, as it will dissolve the collaboration space.</p>"},{"location":"technical-documentation/reference-guide/backend/api/group/#request_4","title":"Request","text":"<pre><code>$ curl -X DELETE http://localhost:8000/api/groups/&lt;int:pk&gt;/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/group/#response_4","title":"Response","text":"<p>HTTP 204 No Content on successful deletion, indicating that the group has been permanently removed.</p>"},{"location":"technical-documentation/reference-guide/backend/api/user/","title":"User Endpoints","text":"<p>Managing user information is a critical aspect of the TEA Platform, facilitating user interaction, collaboration, and personalization. The user endpoints allow for retrieving personal details, listing all users, and managing user accounts, including creating, updating, and deleting users.</p> <p>Replace <code>&lt;int:pk&gt;</code> with the actual ID of the user you are referencing, and <code>your_access_token_here</code> with the actual token you received upon authentication.</p> <p>These <code>curl</code> examples provide straightforward methods to interact with the user-related functionalities of the TEA Platform, facilitating efficient user management and personalization.</p>"},{"location":"technical-documentation/reference-guide/backend/api/user/#user-detail","title":"User Detail","text":"<p>Retrieve Details of the Currently Authenticated User To view your own user details, including your username, email, and associated groups or assurance cases.</p>"},{"location":"technical-documentation/reference-guide/backend/api/user/#request","title":"Request","text":"<pre><code>$ curl -X GET http://localhost:8000/api/user/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/user/#response","title":"Response","text":"<p>A JSON object containing your user details.</p>"},{"location":"technical-documentation/reference-guide/backend/api/user/#user-list-management","title":"User List &amp; Management","text":""},{"location":"technical-documentation/reference-guide/backend/api/user/#list-all-users","title":"List All Users","text":"<p>Retrieve a list of all users on the TEA Platform, useful for finding collaborators or understanding the platform's user base.</p>"},{"location":"technical-documentation/reference-guide/backend/api/user/#request_1","title":"Request","text":"<pre><code>$ curl -X GET http://localhost:8000/api/users/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/user/#response_1","title":"Response","text":"<p>A JSON array of users, each with their details.</p>"},{"location":"technical-documentation/reference-guide/backend/api/user/#create-a-new-user","title":"Create a New User","text":"<p>Add a new user to the TEA Platform by providing necessary information such as username and email.</p>"},{"location":"technical-documentation/reference-guide/backend/api/user/#request_2","title":"Request","text":"<pre><code>$ curl -X POST http://localhost:8000/api/users/ \\\n     -H \"Content-Type: application/json\" \\\n     -d '{\"username\": \"new_user\", \"email\": \"new_user@example.com\", \"password\": \"secure_password\"}'\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/user/#response_2","title":"Response","text":"<p>JSON object of the newly created user account.</p>"},{"location":"technical-documentation/reference-guide/backend/api/user/#retrieve-a-specific-users-details","title":"Retrieve a Specific User's Details","text":"<p>Access detailed information about a specific user by their user ID.</p>"},{"location":"technical-documentation/reference-guide/backend/api/user/#request_3","title":"Request","text":"<pre><code>$ curl -X GET http://localhost:8000/api/users//&lt;int:pk&gt;/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/user/#response_3","title":"Response","text":"<p>A JSON object detailing the specified user's information.</p>"},{"location":"technical-documentation/reference-guide/backend/api/user/#update-a-users-details","title":"Update a User's Details","text":"<p>Modify details of an existing user, such as their username, email, or password.</p>"},{"location":"technical-documentation/reference-guide/backend/api/user/#request_4","title":"Request","text":"<pre><code>$ curl -X PUT http://localhost:8000/api/users//&lt;int:pk&gt;/ \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Token your_access_token_here\" \\\n     -d '{\"username\": \"updated_username\", \"email\": \"updated_email@example.com\"}'\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/user/#response_4","title":"Response","text":"<p>JSON representation of the user after updates have been applied.</p>"},{"location":"technical-documentation/reference-guide/backend/api/user/#delete-a-user","title":"Delete a User","text":"<p>Remove a user account from the TEA Platform. This action is irreversible and should be used with caution.</p>"},{"location":"technical-documentation/reference-guide/backend/api/user/#request_5","title":"Request","text":"<pre><code>$ curl -X DELETE http://localhost:8000/api/users//&lt;int:pk&gt;/ \\\n     -H \"Authorization: Token your_access_token_here\"\n</code></pre>"},{"location":"technical-documentation/reference-guide/backend/api/user/#response_5","title":"Response","text":"<p>HTTP 204 No Content on successful deletion, confirming the user account has been removed.</p>"},{"location":"technical-documentation/reference-guide/ci-cd-pipeline/docker/","title":"Docker Containers","text":"<p>Coming soon.</p>"},{"location":"technical-documentation/reference-guide/ci-cd-pipeline/github-actions/","title":"GitHub Actions","text":"<p>Coming soon.</p>"},{"location":"technical-documentation/reference-guide/frontend/_prerequisites/","title":"prerequisites","text":"<p>Node.js and npm: Ensure you have Node.js and npm installed on your system. Node.js is a runtime environment that allows you to run JavaScript on the server side. npm, included with Node.js, is the world's largest software registry that facilitates package management for JavaScript.</p>"},{"location":"technical-documentation/reference-guide/frontend/nextauthjs/","title":"Setting Up NextAuth.js with GitHub Provider","text":"<p>NextAuth.js is a flexible authentication solution for Next.js applications. This guide walks you through the steps to configure NextAuth.js with GitHub as an authentication provider.</p>"},{"location":"technical-documentation/reference-guide/frontend/nextauthjs/#prerequisites","title":"Prerequisites","text":"<ul> <li>A Next.js application</li> <li>A GitHub account</li> <li>Node.js and npm installed</li> </ul>"},{"location":"technical-documentation/reference-guide/frontend/nextauthjs/#step-1-install-nextauthjs","title":"Step 1: Install NextAuth.js","text":"<p>Install NextAuth.js in your Next.js project:</p> <pre><code>npm install next-auth\n</code></pre>"},{"location":"technical-documentation/reference-guide/frontend/nextauthjs/#step-2-create-github-oauth-app","title":"Step 2: Create GitHub OAuth App","text":"<ul> <li>Go to the GitHub Developer settings.</li> <li>Click on OAuth Apps and then New OAuth App.</li> <li>Fill in the required details:</li> <li>Application name: Your app name</li> <li>Homepage URL: http://localhost:3000 (or your production URL)</li> <li>Authorization callback URL: http://localhost:3000/api/auth/callback/github</li> <li>After creating the app, note the Client ID and Client Secret.</li> </ul>"},{"location":"technical-documentation/reference-guide/frontend/nextauthjs/#step-3-configure-nextauthjs","title":"Step 3: Configure NextAuth.js","text":"<p>Create a new file for your NextAuth.js configuration at <code>app/api/auth/[...nextauth].js</code> called <code>route.ts</code></p> <p><pre><code>import { authOptions } from '@/lib/authOptions';\nimport NextAuth from 'next-auth';\n\nconst handler = NextAuth(authOptions);\nexport { handler as GET, handler as POST };\n</code></pre> Create a new file called <code>authOptions.ts</code> as below:</p> <pre><code>import NextAuth from 'next-auth';\nimport GitHubProvider from 'next-auth/providers/github';\n\nexport default NextAuth({\n  providers: [\n    GitHubProvider({\n      clientId: process.env.GITHUB_CLIENT_ID,\n      clientSecret: process.env.GITHUB_CLIENT_SECRET,\n    }),\n  ],\n  // Optional: Add a database adapter, session, and callbacks as needed\n});\n</code></pre>"},{"location":"technical-documentation/reference-guide/frontend/nextauthjs/#step-4-environment-variables","title":"Step 4: Environment Variables","text":"<p>Create a <code>.env.local</code> file in the root of your project and add your GitHub credentials:</p> <pre><code>GITHUB_CLIENT_ID=your_github_client_id\nGITHUB_CLIENT_SECRET=your_github_client_secret\n</code></pre>"},{"location":"technical-documentation/reference-guide/frontend/nextauthjs/#step-5-set-up-authentication-links","title":"Step 5: Set Up Authentication Links","text":"<p>In your application, add links to sign in and sign out:</p> <pre><code>import { signIn, signOut, useSession } from 'next-auth/react';\n\nexport default function AuthButton() {\n  const { data: session } = useSession();\n\n  return session ? (\n    &lt;&gt;\n      &lt;p&gt;Welcome, {session.user.name}&lt;/p&gt;\n      &lt;button onClick={() =&gt; signOut()}&gt;Sign out&lt;/button&gt;\n    &lt;/&gt;\n  ) : (\n    &lt;button onClick={() =&gt; signIn('github')}&gt;Sign in with GitHub&lt;/button&gt;\n  );\n}\n</code></pre>"},{"location":"technical-documentation/reference-guide/frontend/nextauthjs/#step-6-test-your-setup","title":"Step 6: Test Your Setup","text":"<ul> <li>Start your Next.js application:</li> </ul> <pre><code>npm run dev\n</code></pre> <ul> <li>Navigate to your app in the browser and click the \"Sign in with GitHub\" button.</li> <li>Authenticate with GitHub and authorize the app.</li> <li>You should be redirected back to your application, logged in with your GitHub account.</li> </ul>"},{"location":"technical-documentation/reference-guide/frontend/nextauthjs/#conclusion","title":"Conclusion","text":"<p>You have successfully set up NextAuth.js with GitHub as an authentication provider! You can further customize the authentication flow and add more providers as needed.</p>"},{"location":"technical-documentation/reference-guide/frontend/nextjs/","title":"Introduction to Next.js","text":"<p>Next.js is a powerful open-source React framework developed by Vercel (formerly Zeit) that enables developers to build server-rendered React applications with ease. Released in 2016, Next.js has rapidly gained popularity in the web development community due to its ability to simplify complex tasks and enhance performance, scalability, and developer experience.</p>"},{"location":"technical-documentation/reference-guide/frontend/nextjs/#key-features-of-nextjs","title":"Key Features of Next.js","text":"<ul> <li>Server-Side Rendering (SSR):</li> <li>Description: Renders React components on the server before sending the HTML to the client.</li> <li> <p>Benefits: Improves SEO, reduces time-to-content, and enhances performance, especially for dynamic content.</p> </li> <li> <p>Static Site Generation (SSG):</p> </li> <li>Description: Generates static HTML at build time for pages that don't require frequent updates.</li> <li> <p>Benefits: Offers fast load times, better caching, and scalability.</p> </li> <li> <p>Hybrid Rendering:</p> </li> <li>Description: Allows combining SSR and SSG within the same application.</li> <li> <p>Benefits: Provides flexibility to choose the best rendering method per page based on requirements.</p> </li> <li> <p>API Routes:</p> </li> <li>Description: Enables the creation of backend API endpoints within the Next.js application.</li> <li> <p>Benefits: Simplifies full-stack development by handling both frontend and backend in a single project.</p> </li> <li> <p>Automatic Code Splitting:</p> </li> <li>Description: Splits the code into smaller bundles automatically.</li> <li> <p>Benefits: Enhances performance by loading only the necessary code for each page.</p> </li> <li> <p>Built-in CSS and Sass Support:</p> </li> <li>Description: Supports CSS, Sass, and CSS-in-JS solutions out of the box.</li> <li> <p>Benefits: Streamlines styling without additional configuration.</p> </li> <li> <p>Image Optimization:</p> </li> <li>Description: Provides an optimized image component that automatically handles image resizing, formats, and lazy loading.</li> <li> <p>Benefits: Improves page load speeds and overall performance.</p> </li> <li> <p>Fast Refresh:</p> </li> <li>Description: Enables instant feedback during development with hot module replacement.</li> <li>Benefits: Enhances developer productivity by allowing real-time code updates without full page reloads.</li> </ul>"},{"location":"technical-documentation/reference-guide/frontend/nextjs/#benefits-of-using-nextjs-in-modern-web-development","title":"Benefits of Using Next.js in Modern Web Development","text":"<ul> <li> <p>Enhanced Performance: Leveraging SSR and SSG leads to faster load times and better performance metrics, crucial for user experience and SEO.</p> </li> <li> <p>Improved SEO: Server-rendered pages are more easily indexed by search engines, making Next.js ideal for content-heavy websites.</p> </li> <li> <p>Developer Experience: Simplifies the development process with conventions, built-in features, and excellent tooling, reducing the need for extensive configuration.</p> </li> <li> <p>Scalability: Suitable for projects of all sizes, from small blogs to large-scale enterprise applications.</p> </li> <li> <p>Flexibility: Supports various rendering methods and integrates seamlessly with other technologies and APIs.</p> </li> <li> <p>Community and Ecosystem: Backed by a robust community and extensive ecosystem of plugins, extensions, and resources.</p> </li> </ul>"},{"location":"technical-documentation/reference-guide/frontend/nextjs/#use-cases-in-modern-web-development","title":"Use Cases in Modern Web Development","text":""},{"location":"technical-documentation/reference-guide/frontend/nextjs/#e-commerce-platforms","title":"E-commerce Platforms:","text":"<p>Fast loading times and SEO optimization are critical for online stores, making Next.js a suitable choice.</p>"},{"location":"technical-documentation/reference-guide/frontend/nextjs/#marketing-websites-and-blogs","title":"Marketing Websites and Blogs:","text":"<p>Static site generation ensures quick content delivery and better search engine visibility.</p>"},{"location":"technical-documentation/reference-guide/frontend/nextjs/#dashboards-and-admin-panels","title":"Dashboards and Admin Panels:","text":"<p>Server-side rendering can handle dynamic data efficiently, enhancing performance and user experience.</p>"},{"location":"technical-documentation/reference-guide/frontend/nextjs/#saas-applications","title":"SaaS Applications:","text":"<p>Combines frontend and backend capabilities, allowing for streamlined full-stack development.</p>"},{"location":"technical-documentation/reference-guide/frontend/nextjs/#portfolio-websites","title":"Portfolio Websites:","text":"<p>Provides a balance between static content and dynamic features, ideal for showcasing work.</p>"},{"location":"technical-documentation/reference-guide/frontend/nextjs/#getting-started-with-nextjs","title":"Getting Started with Next.js","text":"<p>To start using Next.js, you can follow these basic steps:</p> <p>Installation:</p> <pre><code>Copy code\nnpx create-next-app@latest my-next-app\ncd my-next-app\nnpm run dev\n</code></pre>"},{"location":"technical-documentation/reference-guide/frontend/nextjs/#directory-structure","title":"Directory Structure:","text":"<p><code>app/</code>: Contains React components that define routes. <code>public/</code>: Stores static assets like images and fonts. <code>app/global.css</code>: Includes global and component-specific styles.</p>"},{"location":"technical-documentation/reference-guide/frontend/nextjs/#creating-pages","title":"Creating Pages:","text":"<p>Add a new file in the <code>app/</code> directory, e.g., about.js, to create an <code>/about</code> route.</p>"},{"location":"technical-documentation/reference-guide/frontend/nextjs/#api-routes","title":"API Routes:","text":"<p>Create files in <code>app/api/</code> to define backend endpoints, such as <code>/api/users.js</code>.</p>"},{"location":"technical-documentation/reference-guide/frontend/nextjs/#conclusion","title":"Conclusion","text":"<p>Next.js stands out as a versatile and efficient framework for building modern web applications. Its combination of server-side rendering, static site generation, and a rich set of features addresses many challenges faced in web development today. Whether you're building a simple blog or a complex enterprise application, Next.js provides the tools and flexibility needed to create high-performance, scalable, and SEO-friendly websites.</p> <p>For more detailed information and advanced topics, you can visit the official Next.js documentation.</p>"},{"location":"technical-documentation/reference-guide/frontend/reactflow/","title":"Introduction to React Flow","text":"<p>React Flow is a library for building interactive node-based applications using React. It provides a simple API for creating flows, diagrams, and custom workflows. React Flow is especially useful for visualizing data relationships and building complex interfaces where users can manipulate nodes and edges.</p>"},{"location":"technical-documentation/reference-guide/frontend/reactflow/#key-features-of-react-flow","title":"Key Features of React Flow","text":"<ul> <li>Node and Edge Management: Easily manage nodes and edges with a straightforward API.</li> <li>Customizable Components: Create custom nodes and edges to fit specific use cases.</li> <li>Zoom and Pan: Supports zooming and panning, allowing users to navigate complex diagrams effortlessly.</li> <li>Interactive: Provides drag-and-drop functionality for a more interactive user experience.</li> <li>Flexible Layouts: Supports different layouts for nodes, enabling various design patterns.</li> </ul>"},{"location":"technical-documentation/reference-guide/frontend/reactflow/#installation","title":"Installation","text":"<p>To get started with React Flow in a Next.js application, you need to install the library:</p> <pre><code>npm install react-flow-renderer\n</code></pre>"},{"location":"technical-documentation/reference-guide/frontend/reactflow/#setting-up-react-flow-in-a-nextjs-application","title":"Setting Up React Flow in a Next.js Application","text":""},{"location":"technical-documentation/reference-guide/frontend/reactflow/#step-1-create-a-new-component","title":"Step 1: Create a New Component**","text":"<p>Create a new component (e.g., FlowChart.js) where you will set up the React Flow diagram.</p> <pre><code>// components/FlowChart.js\nimport React from 'react';\nimport ReactFlow, { MiniMap, Controls } from 'react-flow-renderer';\n\nconst initialNodes = [\n  { id: '1', type: 'input', data: { label: 'Input Node' }, position: { x: 250, y: 5 } },\n  { id: '2', data: { label: 'Default Node' }, position: { x: 100, y: 100 } },\n  { id: '3', type: 'output', data: { label: 'Output Node' }, position: { x: 250, y: 200 } },\n];\n\nconst initialEdges = [\n  { id: 'e1-2', source: '1', target: '2' },\n  { id: 'e2-3', source: '2', target: '3' },\n];\n\nconst FlowChart = () =&gt; {\n  return (\n    &lt;ReactFlow\n      nodes={initialNodes}\n      edges={initialEdges}\n      style={{ width: '100%', height: '400px' }}\n    &gt;\n      &lt;MiniMap /&gt;\n      &lt;Controls /&gt;\n    &lt;/ReactFlow&gt;\n  );\n};\n\nexport default FlowChart;\n</code></pre>"},{"location":"technical-documentation/reference-guide/frontend/reactflow/#step-2-create-custom-nodes","title":"Step 2: Create Custom Nodes","text":"<p>To create custom nodes, you can define your own React components and use them in the nodes array. Here\u2019s an example of how to create a custom node:</p> <pre><code>// components/CustomNode.js\nimport React from 'react';\n\nconst CustomNode = ({ data }) =&gt; {\n  return (\n    &lt;div style={{ padding: '10px', border: '1px solid #ddd', borderRadius: '5px', background: '#fff' }}&gt;\n      &lt;strong&gt;{data.label}&lt;/strong&gt;\n      &lt;p&gt;{data.description}&lt;/p&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default CustomNode;\n</code></pre>"},{"location":"technical-documentation/reference-guide/frontend/reactflow/#step-3-update-flowchart-to-use-custom-nodes","title":"Step 3: Update FlowChart to Use Custom Nodes","text":"<p>Now, integrate the custom node into your FlowChart.js component:</p> <pre><code>import React from 'react';\nimport ReactFlow, { MiniMap, Controls } from 'react-flow-renderer';\nimport CustomNode from './CustomNode';\n\nconst initialNodes = [\n  { id: '1', type: 'custom', data: { label: 'Custom Node', description: 'This is a custom node' }, position: { x: 250, y: 5 } },\n  { id: '2', data: { label: 'Default Node' }, position: { x: 100, y: 100 } },\n  { id: '3', type: 'output', data: { label: 'Output Node' }, position: { x: 250, y: 200 } },\n];\n\nconst nodeTypes = {\n  custom: CustomNode,\n};\n\nconst FlowChart = () =&gt; {\n  return (\n    &lt;ReactFlow\n      nodes={initialNodes}\n      edges={initialEdges}\n      nodeTypes={nodeTypes}\n      style={{ width: '100%', height: '400px' }}\n    &gt;\n      &lt;MiniMap /&gt;\n      &lt;Controls /&gt;\n    &lt;/ReactFlow&gt;\n  );\n};\n\nexport default FlowChart;\n</code></pre>"},{"location":"technical-documentation/reference-guide/frontend/reactflow/#step-4-integrate-the-flow-chart-in-a-nextjs-page","title":"Step 4: Integrate the Flow Chart in a Next.js Page","text":"<p>Now, you can integrate the <code>FlowChart</code> component into a Next.js page.</p> <pre><code>// pages/index.js\nimport React from 'react';\nimport FlowChart from '../components/FlowChart';\n\nconst HomePage = () =&gt; {\n  return (\n    &lt;div&gt;\n      &lt;h1&gt;My React Flow Diagram&lt;/h1&gt;\n      &lt;FlowChart /&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default HomePage;\n</code></pre>"},{"location":"technical-documentation/reference-guide/frontend/reactflow/#step-5-style-your-application","title":"Step 5: Style Your Application","text":"<p>You can customize the appearance of your flow diagram using CSS. React Flow is highly customizable, allowing you to style nodes, edges, and the overall canvas.</p> <pre><code>/* styles/globals.css */\n.react-flow__node-input {\n  background: #fff;\n  border: 1px solid #ddd;\n}\n\n.react-flow__node-default {\n  background: #f0f0f0;\n}\n\n.react-flow__node-output {\n  background: #e0e0e0;\n}\n\n/* Custom node styles */\n.custom-node {\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  background: #fff;\n}\n</code></pre>"},{"location":"technical-documentation/reference-guide/frontend/reactflow/#conclusion","title":"Conclusion","text":"<p>React Flow is a powerful tool for creating interactive diagrams in React applications. By integrating React Flow into a Next.js app and creating custom nodes, you can build visually appealing and user-friendly interfaces that allow for complex data visualizations. With its customizable components and easy-to-use API, React Flow enhances the user experience by providing a seamless way to manage and interact with data flows.</p>"},{"location":"technical-documentation/reference-guide/frontend/tailwindcss/","title":"Introduction to Tailwind CSS","text":"<p>Tailwind CSS is a utility-first CSS framework that provides a comprehensive set of classes for designing responsive user interfaces quickly and efficiently. Unlike traditional CSS frameworks that offer predefined components, Tailwind allows you to compose designs directly in your HTML using utility classes.</p>"},{"location":"technical-documentation/reference-guide/frontend/tailwindcss/#key-features-of-tailwind-css","title":"Key Features of Tailwind CSS","text":"<ul> <li>Utility-First: Focus on small, reusable utility classes for styling, promoting a modular approach to design.</li> <li>Responsive Design: Built-in responsive utilities make it easy to create designs that work across different screen sizes.</li> <li>Customization: Highly customizable with a configuration file that allows you to set up your design system (colors, spacing, typography, etc.).</li> <li>JIT Mode: Just-In-Time (JIT) compilation for on-demand generation of styles, resulting in faster build times and smaller CSS files.</li> </ul>"},{"location":"technical-documentation/reference-guide/frontend/tailwindcss/#installation","title":"Installation","text":"<p>To use Tailwind CSS in your project, follow these steps:</p>"},{"location":"technical-documentation/reference-guide/frontend/tailwindcss/#step-1-set-up-your-project","title":"Step 1: Set Up Your Project","text":"<p>If you don\u2019t have a project yet, create a new one. For example, using Next.js:</p> <pre><code>npx create-next-app my-tailwind-app\ncd my-tailwind-app\n</code></pre>"},{"location":"technical-documentation/reference-guide/frontend/tailwindcss/#step-2-install-tailwind-css","title":"Step 2: Install Tailwind CSS","text":"<p>Install Tailwind CSS via npm:</p> <pre><code>npm install -D tailwindcss postcss autoprefixer\n</code></pre>"},{"location":"technical-documentation/reference-guide/frontend/tailwindcss/#step-3-initialize-tailwind-css","title":"Step 3: Initialize Tailwind CSS","text":"<p>Generate the configuration files for Tailwind CSS and PostCSS:</p> <pre><code>npx tailwindcss init -p\n</code></pre> <p>This command creates two files: <code>tailwind.config.js</code> and <code>postcss.config.js</code>.</p>"},{"location":"technical-documentation/reference-guide/frontend/tailwindcss/#step-4-configure-tailwind-to-remove-unused-styles","title":"Step 4: Configure Tailwind to Remove Unused Styles","text":"<p>Edit the <code>tailwind.config.js</code> file to specify the paths to all of your template files:</p> <pre><code>/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    \"./pages/**/*.{js,ts,jsx,tsx}\", // Next.js pages\n    \"./components/**/*.{js,ts,jsx,tsx}\", // Next.js components\n  ],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}\n</code></pre>"},{"location":"technical-documentation/reference-guide/frontend/tailwindcss/#step-5-add-tailwind-to-your-css","title":"Step 5: Add Tailwind to Your CSS","text":"<p>In your CSS file (e.g., <code>styles/globals.css</code>), add the following lines:</p> <pre><code>@tailwind base;\n@tailwind components;\n@tailwind utilities;\n</code></pre>"},{"location":"technical-documentation/reference-guide/frontend/tailwindcss/#step-6-start-using-tailwind-css","title":"Step 6: Start Using Tailwind CSS","text":"<p>Now you can start using Tailwind CSS classes in your components. For example, create a simple button:</p> <pre><code>// components/Button.js\nconst Button = () =&gt; {\n  return (\n    &lt;button className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-700\"&gt;\n      Click Me\n    &lt;/button&gt;\n  );\n};\n\nexport default Button;\n</code></pre> <p>You can then use this button component in your pages:</p> <pre><code>// pages/index.js\nimport Button from '../components/Button';\n\nconst HomePage = () =&gt; {\n  return (\n    &lt;div className=\"flex flex-col items-center justify-center h-screen\"&gt;\n      &lt;h1 className=\"text-3xl font-bold mb-4\"&gt;Welcome to My Tailwind App&lt;/h1&gt;\n      &lt;Button /&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default HomePage;\n</code></pre>"},{"location":"technical-documentation/reference-guide/frontend/tailwindcss/#customization","title":"Customization","text":"<p>Tailwind CSS is highly customizable. You can extend the default theme by modifying the <code>tailwind.config.js</code> file. For example, to add custom colors:</p> <pre><code>theme: {\n  extend: {\n    colors: {\n      customBlue: '#1DA1F2',\n    },\n  },\n},\n</code></pre> <p>You can then use your custom color in your components:</p> <pre><code>&lt;button className=\"bg-customBlue text-white\"&gt;Custom Color Button&lt;/button&gt;\n</code></pre>"},{"location":"technical-documentation/reference-guide/frontend/tailwindcss/#conclusion","title":"Conclusion","text":"<p>Tailwind CSS offers a powerful way to build modern, responsive web applications with a utility-first approach. Its customization options and ease of use make it a popular choice among developers looking to streamline their design process. By integrating Tailwind CSS into your Next.js project, you can create beautiful interfaces quickly and efficiently.</p>"},{"location":"technical-guide/quickstart/environment-setup/","title":"Setup the Backend environment","text":"<p>To set up an environment for a Django project, follow these general steps:</p>"},{"location":"technical-guide/quickstart/environment-setup/#prerequisites","title":"Prerequisites","text":"<ul> <li>Please ensure that you have Python version 3.10 installed on your machine</li> </ul>"},{"location":"technical-guide/quickstart/environment-setup/#get-started","title":"Get Started","text":"<ul> <li>Clone the Repository:</li> </ul> <pre><code>git clone https://github.com/alan-turing-institute/AssurancePlatform.git\ncd AssurancePlatform/eap_backend\n</code></pre> <ul> <li>Set Up a Virtual Environment:</li> </ul> <pre><code>python3 -m venv env\nsource env/bin/activate  # Or `env\\Scripts\\activate` on Windows\n</code></pre> <ul> <li>Install Dependencies: Ensure requirements are defined in requirements.txt. Install them with:</li> </ul> <pre><code>pip install -r requirements.txt\n</code></pre> <ul> <li> <p>Configure the Database: Update settings.py with your database configurations if needed, typically under DATABASES. For testing, SQLite (default in Django) works well.</p> </li> <li> <p>Apply Migrations:</p> </li> </ul> <pre><code>python manage.py migrate\n</code></pre> <ul> <li>Run the Development Server:</li> </ul> <pre><code>python manage.py runserver\n</code></pre> <p>Note: You may need to replace <code>python</code> with your installed version for example <code>python3.10</code></p> <p>Access the server locally at http://127.0.0.1:8000.</p>"},{"location":"technical-guide/reference-guide/backend/django/","title":"Django Settings for the TEA Platform","text":"<p>This section details the Django framework settings essential for the TEA Platform's operation. It guides you through configuring settings for different environments, such as development, testing, and production, including database configurations, security enhancements, and application-specific options.</p>"},{"location":"technical-guide/reference-guide/backend/django/#security-and-environment-configuration","title":"Security and Environment Configuration","text":"<p><code>SECRET_KEY</code>: A critical setting that should be unique and kept secret in production environments. Ensure that it is not stored in version control and is generated uniquely for each deployment.</p> <p><code>DEBUG</code>: This setting controls whether Django runs in debug mode. It should be set to False in production to avoid exposing sensitive information.</p> <p><code>CORS_ORIGIN_WHITELIST</code>: Specifies the hosts allowed to make cross-origin requests to your Django backend. For local development with the React frontend, this typically includes localhost:3000.</p>"},{"location":"technical-guide/reference-guide/backend/django/#database-settings","title":"Database Settings","text":"<p>The TEA Platform supports both SQLite (for development and testing) and PostgreSQL (recommended for production). Database configurations can be adjusted based on the environment variables:</p> <p>SQLite: Used by default if no environment variables are set. Ideal for development and testing phases.</p> <pre><code>```python\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n```\n</code></pre> <p>PostgreSQL: For production, environment variables such as DBHOST, DBNAME, DBUSER, and DBPASSWORD need to be defined. This setup enhances the platform's scalability and security in production deployments.</p> <pre><code>```python\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.postgresql\",\n        \"HOST\": os.environ.get(\"DBHOST\"),\n        \"NAME\": os.environ.get(\"DBNAME\"),\n        \"USER\": os.environ.get(\"DBUSER\"),\n        \"PASSWORD\": os.environ.get(\"DBPASSWORD\"),\n    }\n}\n```\n</code></pre>"},{"location":"technical-guide/reference-guide/backend/django/#application-and-middleware-configuration","title":"Application and Middleware Configuration","text":"<p><code>INSTALLED_APPS</code>: Includes Django's default apps and third-party apps such as rest_framework for the REST API functionality, corsheaders for handling Cross-Origin Resource Sharing (CORS) settings, and allauth for authentication.</p> <p><code>MIDDLEWARE</code>: A series of middleware classes that process request/response objects. It includes CorsMiddleware for managing CORS headers according to your <code>CORS_ORIGIN_WHITELIST</code>.</p>"},{"location":"technical-guide/reference-guide/backend/django/#rest-framework-and-authentication","title":"REST Framework and Authentication","text":"<p><code>REST_FRAMEWORK</code>: Configures the default permissions and authentication classes. For instance, using <code>rest_framework.permissions.AllowAny</code> to allow unrestricted access or <code>rest_framework.authentication.TokenAuthentication</code> for API token-based authentication.</p>"},{"location":"technical-guide/reference-guide/backend/django/#static-and-media-files","title":"Static and Media Files","text":"<p><code>STATIC_URL</code>: Defines the URL path for serving static files (CSS, JavaScript, images).</p>"},{"location":"technical-guide/reference-guide/backend/django/#additional-settings","title":"Additional Settings","text":"<p><code>LANGUAGE_CODE</code> and <code>TIME_ZONE</code>: Adjust these settings to match your locale and timezone preferences.</p> <p><code>EMAIL_BACKEND</code>: Configures the backend to use for sending emails. For development, using <code>django.core.mail.backends.console.EmailBackend</code> logs emails to the console instead of sending them.</p>"},{"location":"technical-guide/reference-guide/backend/django/#adjusting-settings-for-different-environments","title":"Adjusting Settings for Different Environments","text":"<p>For a seamless transition between development, testing, and production environments, consider using environment variables to dynamically adjust settings. Utilize Django's <code>os.environ.get()</code> to fetch environment variables and apply conditional logic to switch between different database backends or to toggle the <code>DEBUG</code> setting.</p>"},{"location":"technical-guide/reference-guide/backend/django/#final-thoughts","title":"Final Thoughts","text":"<p>Properly configuring the Django settings is crucial for the security, performance, and functionality of the TEA Platform. Ensure sensitive settings like <code>SECRET_KEY</code> are securely managed and that the database configurations are appropriate for your deployment environment.</p>"},{"location":"blog/archive/2023/","title":"2023","text":""}]}